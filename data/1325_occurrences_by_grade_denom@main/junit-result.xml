<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="abnormal" timestamp="2024-10-17T14:45:50Z" hostname="226d6849429d" tests="14" skipped="0" failures="0" errors="0" time="0.724">
    <testcase time="0.0210000000000001" classname="abnormal" name="s_count_abnormal_works_with_healthy_input_and_default_arguments"/>
    <testcase time="0.095" classname="abnormal" name="s_count_abnormal_works_with_healthy_input_and_default_arguments"/>
    <testcase time="0.0149999999999999" classname="abnormal" name="s_count_abnormal_works_when_excluding_patients_with_abnormality_at_baseline"/>
    <testcase time="0.0390000000000001" classname="abnormal" name="s_count_abnormal_works_when_excluding_patients_with_abnormality_at_baseline"/>
    <testcase time="0.01" classname="abnormal" name="s_count_abnormal_also_works_with_tibble_and_custom_arguments"/>
    <testcase time="0.024" classname="abnormal" name="s_count_abnormal_also_works_with_tibble_and_custom_arguments"/>
    <testcase time="0.117" classname="abnormal" name="count_abnormal_works_with_default_arguments"/>
    <testcase time="0.0529999999999999" classname="abnormal" name="count_abnormal_works_with_default_arguments"/>
    <testcase time="0.0470000000000002" classname="abnormal" name="count_abnormal_works_with_custom_arguments"/>
    <testcase time="0.107" classname="abnormal" name="count_abnormal_works_with_custom_arguments"/>
    <testcase time="0.1" classname="abnormal" name="count_abnormal_works_with_default_arguments_and_visit"/>
    <testcase time="0.052" classname="abnormal" name="count_abnormal_works_with_default_arguments_and_visit"/>
    <testcase time="0.00599999999999978" classname="abnormal" name="s_count_abnormal_works_with_healthy_input_and_grouped_abnormal_arguments"/>
    <testcase time="0.0379999999999998" classname="abnormal" name="s_count_abnormal_works_with_healthy_input_and_grouped_abnormal_arguments"/>
  </testsuite>
  <testsuite name="abnormal_by_baseline" timestamp="2024-10-17T14:45:51Z" hostname="226d6849429d" tests="17" skipped="0" failures="0" errors="0" time="0.399">
    <testcase time="0.016" classname="abnormal_by_baseline" name="s_count_abnormal_by_baseline_works_with_healthy_input_and_default_arguments"/>
    <testcase time="0.02" classname="abnormal_by_baseline" name="s_count_abnormal_by_baseline_works_with_healthy_input_and_default_arguments"/>
    <testcase time="0.00199999999999978" classname="abnormal_by_baseline" name="s_count_abnormal_by_baseline_works_with_healthy_input_and_default_arguments"/>
    <testcase time="0.0190000000000001" classname="abnormal_by_baseline" name="s_count_abnormal_by_baseline_works_with_healthy_input_and_default_arguments"/>
    <testcase time="0.00700000000000012" classname="abnormal_by_baseline" name="s_count_abnormal_by_baseline_also_works_with_tibble_and_custom_arguments"/>
    <testcase time="0.0190000000000001" classname="abnormal_by_baseline" name="s_count_abnormal_by_baseline_also_works_with_tibble_and_custom_arguments"/>
    <testcase time="0.00199999999999978" classname="abnormal_by_baseline" name="s_count_abnormal_by_baseline_also_works_with_tibble_and_custom_arguments"/>
    <testcase time="0.0190000000000001" classname="abnormal_by_baseline" name="s_count_abnormal_by_baseline_also_works_with_tibble_and_custom_arguments"/>
    <testcase time="0.0150000000000001" classname="abnormal_by_baseline" name="count_abnormal_by_baseline_throws_warning_with_character_var"/>
    <testcase time="0.00099999999999989" classname="abnormal_by_baseline" name="count_abnormal_by_baseline_throws_warning_with_character_var"/>
    <testcase time="0.02" classname="abnormal_by_baseline" name="count_abnormal_by_baseline_throws_warning_with_character_var"/>
    <testcase time="0.0699999999999998" classname="abnormal_by_baseline" name="count_abnormal_by_baseline_works_with_default_arguments"/>
    <testcase time="0.0630000000000002" classname="abnormal_by_baseline" name="count_abnormal_by_baseline_works_with_default_arguments"/>
    <testcase time="0.0589999999999997" classname="abnormal_by_baseline" name="count_abnormal_by_baseline_works_with_custom_arguments"/>
    <testcase time="0.0530000000000004" classname="abnormal_by_baseline" name="count_abnormal_by_baseline_works_with_custom_arguments"/>
    <testcase time="0.0089999999999999" classname="abnormal_by_baseline" name="s_count_abnormal_by_baseline_gives_error_for_NA_input"/>
    <testcase time="0.00499999999999989" classname="abnormal_by_baseline" name="s_count_abnormal_by_baseline_gives_error_for_NA_input"/>
  </testsuite>
  <testsuite name="abnormal_by_marked" timestamp="2024-10-17T14:45:52Z" hostname="226d6849429d" tests="7" skipped="0" failures="0" errors="0" time="2.491">
    <testcase time="0.742" classname="abnormal_by_marked" name="s_count_abnormal_by_marked_works_as_expected"/>
    <testcase time="0.02" classname="abnormal_by_marked" name="s_count_abnormal_by_marked_works_as_expected"/>
    <testcase time="0.474" classname="abnormal_by_marked" name="s_count_abnormal_by_marked_works_as_expected"/>
    <testcase time="0.0199999999999996" classname="abnormal_by_marked" name="s_count_abnormal_by_marked_works_as_expected"/>
    <testcase time="0.467000000000001" classname="abnormal_by_marked" name="s_count_abnormal_by_marked_returns_an_error_when_abn_dir_contains_two_direction_values"/>
    <testcase time="0.688" classname="abnormal_by_marked" name="count_abnormal_by_marked_works_as_expected"/>
    <testcase time="0.0800000000000001" classname="abnormal_by_marked" name="count_abnormal_by_marked_works_as_expected"/>
  </testsuite>
  <testsuite name="abnormal_by_worst_grade" timestamp="2024-10-17T14:45:54Z" hostname="226d6849429d" tests="5" skipped="0" failures="0" errors="0" time="0.269">
    <testcase time="0.0250000000000004" classname="abnormal_by_worst_grade" name="s_count_abnormal_by_worst_grade_works_as_expected"/>
    <testcase time="0.0199999999999996" classname="abnormal_by_worst_grade" name="s_count_abnormal_by_worst_grade_works_as_expected"/>
    <testcase time="0.105" classname="abnormal_by_worst_grade" name="count_abnormal_by_worst_grade_works_as_expected"/>
    <testcase time="0.0679999999999996" classname="abnormal_by_worst_grade" name="count_abnormal_by_worst_grade_works_as_expected"/>
    <testcase time="0.0510000000000002" classname="abnormal_by_worst_grade" name="count_abnormal_by_worst_grade_returns_an_error_when_variables_param_and_variables_grade_dir_are_taking_variable_names_not_used_for_splitting_the_layout_in_rows."/>
  </testsuite>
  <testsuite name="abnormal_by_worst_grade_worsen" timestamp="2024-10-17T14:45:54Z" hostname="226d6849429d" tests="20" skipped="0" failures="0" errors="0" time="0.698">
    <testcase time="0.0919999999999996" classname="abnormal_by_worst_grade_worsen" name="h_adlb_worsen_stacks_data_correctly_simple_case_"/>
    <testcase time="0.0230000000000006" classname="abnormal_by_worst_grade_worsen" name="h_adlb_worsen_stacks_data_correctly_simple_case_"/>
    <testcase time="0.0169999999999995" classname="abnormal_by_worst_grade_worsen" name="h_adlb_worsen_stacks_data_correctly"/>
    <testcase time="0.0209999999999999" classname="abnormal_by_worst_grade_worsen" name="h_adlb_worsen_stacks_data_correctly"/>
    <testcase time="0.00600000000000023" classname="abnormal_by_worst_grade_worsen" name="h_worsen_counter_counts_data_low_correctly"/>
    <testcase time="0.0199999999999996" classname="abnormal_by_worst_grade_worsen" name="h_worsen_counter_counts_data_low_correctly"/>
    <testcase time="0.00600000000000023" classname="abnormal_by_worst_grade_worsen" name="h_worsen_counter_counts_data_high_correctly"/>
    <testcase time="0.0199999999999996" classname="abnormal_by_worst_grade_worsen" name="h_worsen_counter_counts_data_high_correctly"/>
    <testcase time="0.00499999999999989" classname="abnormal_by_worst_grade_worsen" name="h_worsen_counter_counts_data_low_no_high_correctly"/>
    <testcase time="0.0200000000000005" classname="abnormal_by_worst_grade_worsen" name="h_worsen_counter_counts_data_low_no_high_correctly"/>
    <testcase time="0.00499999999999989" classname="abnormal_by_worst_grade_worsen" name="h_worsen_counter_counts_data_low_no_low_correctly"/>
    <testcase time="0.024" classname="abnormal_by_worst_grade_worsen" name="h_worsen_counter_counts_data_low_no_low_correctly"/>
    <testcase time="0.00699999999999967" classname="abnormal_by_worst_grade_worsen" name="s_count_abnormal_lab_worsen_by_baseline"/>
    <testcase time="0.0190000000000001" classname="abnormal_by_worst_grade_worsen" name="s_count_abnormal_lab_worsen_by_baseline"/>
    <testcase time="0.238" classname="abnormal_by_worst_grade_worsen" name="count_abnormal_lab_worsen_by_baseline"/>
    <testcase time="0.136" classname="abnormal_by_worst_grade_worsen" name="count_abnormal_lab_worsen_by_baseline"/>
    <testcase time="0.016" classname="abnormal_by_worst_grade_worsen" name="h_adlb_worsen_all_high"/>
    <testcase time="0.00300000000000011" classname="abnormal_by_worst_grade_worsen" name="h_adlb_worsen_all_high"/>
    <testcase time="0.0170000000000003" classname="abnormal_by_worst_grade_worsen" name="h_adlb_worsen_all_low"/>
    <testcase time="0.00300000000000011" classname="abnormal_by_worst_grade_worsen" name="h_adlb_worsen_all_low"/>
  </testsuite>
  <testsuite name="analyze_variables" timestamp="2024-10-17T14:45:55Z" hostname="226d6849429d" tests="108" skipped="0" failures="0" errors="0" time="3.29">
    <testcase time="0.016" classname="analyze_variables" name="s_summary_return_NA_for_x_length_0L"/>
    <testcase time="0.0199999999999996" classname="analyze_variables" name="s_summary_return_NA_for_x_length_0L"/>
    <testcase time="0.00600000000000023" classname="analyze_variables" name="s_summary_handles_NA"/>
    <testcase time="0.0199999999999996" classname="analyze_variables" name="s_summary_handles_NA"/>
    <testcase time="0.00200000000000067" classname="analyze_variables" name="s_summary_handles_NA"/>
    <testcase time="0.0199999999999996" classname="analyze_variables" name="s_summary_handles_NA"/>
    <testcase time="0.00600000000000023" classname="analyze_variables" name="s_summary_returns_right_results_for_n_2"/>
    <testcase time="0.0469999999999997" classname="analyze_variables" name="s_summary_returns_right_results_for_n_2"/>
    <testcase time="0.00600000000000023" classname="analyze_variables" name="s_summary_returns_right_results_for_n_8"/>
    <testcase time="0.0209999999999999" classname="analyze_variables" name="s_summary_returns_right_results_for_n_8"/>
    <testcase time="0.00499999999999989" classname="analyze_variables" name="s_summary_works_with_factors"/>
    <testcase time="0.0190000000000001" classname="analyze_variables" name="s_summary_works_with_factors"/>
    <testcase time="0.00800000000000001" classname="analyze_variables" name="s_summary_fails_with_factors_that_have_no_levels_or_have_empty_string_levels"/>
    <testcase time="0.00499999999999989" classname="analyze_variables" name="s_summary_fails_with_factors_that_have_no_levels_or_have_empty_string_levels"/>
    <testcase time="0.00499999999999989" classname="analyze_variables" name="s_summary_works_when_factors_have_NA_levels"/>
    <testcase time="0.0200000000000005" classname="analyze_variables" name="s_summary_works_when_factors_have_NA_levels"/>
    <testcase time="0.00499999999999989" classname="analyze_variables" name="s_summary_works_with_factors_with_NA_values_handled_and_correctly_removes_them_by_default"/>
    <testcase time="0.0199999999999996" classname="analyze_variables" name="s_summary_works_with_factors_with_NA_values_handled_and_correctly_removes_them_by_default"/>
    <testcase time="0.00499999999999989" classname="analyze_variables" name="s_summary_works_with_length_0_factors_that_have_levels"/>
    <testcase time="0.0209999999999999" classname="analyze_variables" name="s_summary_works_with_length_0_factors_that_have_levels"/>
    <testcase time="0.00500000000000078" classname="analyze_variables" name="s_summary_works_with_factors_and_different_denominator_choices"/>
    <testcase time="0.0199999999999996" classname="analyze_variables" name="s_summary_works_with_factors_and_different_denominator_choices"/>
    <testcase time="0.00199999999999978" classname="analyze_variables" name="s_summary_works_with_factors_and_different_denominator_choices"/>
    <testcase time="0.0200000000000005" classname="analyze_variables" name="s_summary_works_with_factors_and_different_denominator_choices"/>
    <testcase time="0.00899999999999945" classname="analyze_variables" name="s_summary_works_with_characters_by_converting_to_character"/>
    <testcase time="0.00300000000000011" classname="analyze_variables" name="s_summary_works_with_characters_by_converting_to_character"/>
    <testcase time="0.0129999999999999" classname="analyze_variables" name="s_summary_works_with_characters_by_converting_to_character_and_handling_empty_strings"/>
    <testcase time="0.00300000000000011" classname="analyze_variables" name="s_summary_works_with_characters_by_converting_to_character_and_handling_empty_strings"/>
    <testcase time="0.0220000000000002" classname="analyze_variables" name="s_summary_works_with_characters_by_converting_to_character_and_handling_empty_strings"/>
    <testcase time="0.00900000000000034" classname="analyze_variables" name="s_summary_does_not_work_for_length_0_character_vectors"/>
    <testcase time="0.00399999999999956" classname="analyze_variables" name="s_summary_works_with_logical_vectors"/>
    <testcase time="0.0209999999999999" classname="analyze_variables" name="s_summary_works_with_logical_vectors"/>
    <testcase time="0.00499999999999989" classname="analyze_variables" name="s_summary_works_with_length_0_logical_vectors"/>
    <testcase time="0.0200000000000005" classname="analyze_variables" name="s_summary_works_with_length_0_logical_vectors"/>
    <testcase time="0.00399999999999956" classname="analyze_variables" name="s_summary_works_with_logical_vectors_and_by_default_removes_NA"/>
    <testcase time="0.024" classname="analyze_variables" name="s_summary_works_with_logical_vectors_and_by_default_removes_NA"/>
    <testcase time="0.00499999999999989" classname="analyze_variables" name="s_summary_works_with_logical_vectors_and_by_if_requested_does_not_remove_NA_from_n"/>
    <testcase time="0.0200000000000005" classname="analyze_variables" name="s_summary_works_with_logical_vectors_and_by_if_requested_does_not_remove_NA_from_n"/>
    <testcase time="0.00900000000000034" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00399999999999956" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00300000000000011" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.0229999999999997" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00400000000000045" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00399999999999956" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00300000000000011" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.0220000000000002" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00499999999999989" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00800000000000001" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00399999999999956" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.0270000000000001" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00300000000000011" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00300000000000011" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00199999999999978" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.0220000000000002" classname="analyze_variables" name="a_summary_work_with_healthy_input."/>
    <testcase time="0.00699999999999967" classname="analyze_variables" name="a_summary_works_with_custom_input."/>
    <testcase time="0.0209999999999999" classname="analyze_variables" name="a_summary_works_with_custom_input."/>
    <testcase time="0.00500000000000078" classname="analyze_variables" name="a_summary_works_with_custom_input."/>
    <testcase time="0.0219999999999994" classname="analyze_variables" name="a_summary_works_with_custom_input."/>
    <testcase time="0.00800000000000001" classname="analyze_variables" name="a_summary_works_with_healthy_input_when_compare_TRUE."/>
    <testcase time="0.024" classname="analyze_variables" name="a_summary_works_with_healthy_input_when_compare_TRUE."/>
    <testcase time="0.00499999999999989" classname="analyze_variables" name="a_summary_works_with_healthy_input_when_compare_TRUE."/>
    <testcase time="0.0220000000000002" classname="analyze_variables" name="a_summary_works_with_healthy_input_when_compare_TRUE."/>
    <testcase time="0.00499999999999989" classname="analyze_variables" name="a_summary_works_with_healthy_input_when_compare_TRUE."/>
    <testcase time="0.0230000000000006" classname="analyze_variables" name="a_summary_works_with_healthy_input_when_compare_TRUE."/>
    <testcase time="0.00300000000000011" classname="analyze_variables" name="a_summary_works_with_healthy_input_when_compare_TRUE."/>
    <testcase time="0.0289999999999999" classname="analyze_variables" name="a_summary_works_with_healthy_input_when_compare_TRUE."/>
    <testcase time="0.00800000000000001" classname="analyze_variables" name="a_summary_works_with_custom_input_when_compare_TRUE."/>
    <testcase time="0.0209999999999999" classname="analyze_variables" name="a_summary_works_with_custom_input_when_compare_TRUE."/>
    <testcase time="0.00599999999999934" classname="analyze_variables" name="a_summary_works_with_custom_input_when_compare_TRUE."/>
    <testcase time="0.0230000000000006" classname="analyze_variables" name="a_summary_works_with_custom_input_when_compare_TRUE."/>
    <testcase time="0.032" classname="analyze_variables" name="_analyze_vars_works_with_healthy_input_default_na.rm_TRUE_."/>
    <testcase time="0.0459999999999994" classname="analyze_variables" name="_analyze_vars_works_with_healthy_input_default_na.rm_TRUE_."/>
    <testcase time="0.0340000000000007" classname="analyze_variables" name="_analyze_vars_works_with_healthy_input_and_control_function."/>
    <testcase time="0.056" classname="analyze_variables" name="_analyze_vars_works_with_healthy_input_and_control_function."/>
    <testcase time="0.032" classname="analyze_variables" name="_analyze_vars_works_with_healthy_input_alternative_na.rm_FALSE_"/>
    <testcase time="0.0449999999999999" classname="analyze_variables" name="_analyze_vars_works_with_healthy_input_alternative_na.rm_FALSE_"/>
    <testcase time="0.0299999999999994" classname="analyze_variables" name="_analyze_vars_works_with_healthy_factor_input"/>
    <testcase time="0.0430000000000001" classname="analyze_variables" name="_analyze_vars_works_with_healthy_factor_input"/>
    <testcase time="0.0390000000000006" classname="analyze_variables" name="_analyze_vars_works_with_healthy_factor_input_alternative_na.rm_FALSE_"/>
    <testcase time="0.0449999999999999" classname="analyze_variables" name="_analyze_vars_works_with_healthy_factor_input_alternative_na.rm_FALSE_"/>
    <testcase time="0.0299999999999994" classname="analyze_variables" name="_analyze_vars_works_with_healthy_factor_input_alternative_na.rm_FALSE_"/>
    <testcase time="0.0440000000000005" classname="analyze_variables" name="_analyze_vars_works_with_healthy_factor_input_alternative_na.rm_FALSE_"/>
    <testcase time="0.361" classname="analyze_variables" name="_analyze_vars_works_with_factors_and_different_denominators"/>
    <testcase time="0.00300000000000011" classname="analyze_variables" name="_analyze_vars_works_with_factors_and_different_denominators"/>
    <testcase time="0.00199999999999978" classname="analyze_variables" name="_analyze_vars_works_with_factors_and_different_denominators"/>
    <testcase time="0.120000000000001" classname="analyze_variables" name="_analyze_vars_works_with_factors_and_different_denominators"/>
    <testcase time="0.335999999999999" classname="analyze_variables" name="analyze_vars_works_in_demographic_table_example"/>
    <testcase time="0.346" classname="analyze_variables" name="analyze_vars_works_in_demographic_table_example"/>
    <testcase time="0.0410000000000004" classname="analyze_variables" name="_analyze_vars_works_with_character_input_and_gives_the_same_result_as_with_factor"/>
    <testcase time="0.0229999999999997" classname="analyze_variables" name="_analyze_vars_works_with_character_input_and_gives_the_same_result_as_with_factor"/>
    <testcase time="0.0419999999999998" classname="analyze_variables" name="_analyze_vars_does_not_work_with_sparse_character_input_due_to_missing_statistics"/>
    <testcase time="0.027000000000001" classname="analyze_variables" name="_analyze_vars_does_not_work_with_sparse_character_input_due_to_missing_statistics"/>
    <testcase time="0.032" classname="analyze_variables" name="_analyze_vars_works_with_logical_input"/>
    <testcase time="0.0399999999999991" classname="analyze_variables" name="_analyze_vars_works_with_logical_input"/>
    <testcase time="0.0310000000000006" classname="analyze_variables" name="_analyze_vars_works_with_healthy_logical_input_alternative_na.rm_FALSE_"/>
    <testcase time="0.0449999999999999" classname="analyze_variables" name="_analyze_vars_works_with_healthy_logical_input_alternative_na.rm_FALSE_"/>
    <testcase time="0.0280000000000005" classname="analyze_variables" name="_analyze_vars_works_with_healthy_logical_input_alternative_na.rm_FALSE_"/>
    <testcase time="0.0510000000000002" classname="analyze_variables" name="_analyze_vars_works_with_healthy_logical_input_alternative_na.rm_FALSE_"/>
    <testcase time="0.0459999999999994" classname="analyze_variables" name="_analyze_vars_works_with_empty_named_numeric_variables"/>
    <testcase time="0.0570000000000004" classname="analyze_variables" name="_analyze_vars_works_with_empty_named_numeric_variables"/>
    <testcase time="0.106" classname="analyze_variables" name="analyze_vars_na_str_argument_works_as_expected"/>
    <testcase time="0.0899999999999999" classname="analyze_variables" name="analyze_vars_na_str_argument_works_as_expected"/>
    <testcase time="0.00500000000000078" classname="analyze_variables" name="control_analyze_vars_works_with_customized_parameters"/>
    <testcase time="0.0199999999999996" classname="analyze_variables" name="control_analyze_vars_works_with_customized_parameters"/>
    <testcase time="0.00799999999999912" classname="analyze_variables" name="control_analyze_vars_fails_wrong_inputs"/>
    <testcase time="0.00500000000000078" classname="analyze_variables" name="control_analyze_vars_fails_wrong_inputs"/>
    <testcase time="0.0380000000000003" classname="analyze_variables" name="analyze_vars_works_correctly_with_auto_formats"/>
    <testcase time="0.0469999999999988" classname="analyze_variables" name="analyze_vars_works_correctly_with_auto_formats"/>
  </testsuite>
  <testsuite name="analyze_vars_in_cols" timestamp="2024-10-17T14:45:58Z" hostname="226d6849429d" tests="32" skipped="0" failures="0" errors="0" time="5.431">
    <testcase time="0.188000000000001" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_correctly"/>
    <testcase time="0.0790000000000006" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_correctly"/>
    <testcase time="0.0220000000000002" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_correctly"/>
    <testcase time="0.0269999999999992" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_correctly"/>
    <testcase time="0.0139999999999993" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_throws_error_when_vars_and_.stats_lengths_differ_in_len"/>
    <testcase time="0.100000000000001" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_for_analyze_colvars"/>
    <testcase time="0.0809999999999995" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_for_analyze_colvars"/>
    <testcase time="0.097999999999999" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_for_analyze_colvars"/>
    <testcase time="0.0800000000000001" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_for_analyze_colvars"/>
    <testcase time="0.0810000000000013" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_for_analyze_colvars"/>
    <testcase time="0.052999999999999" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_for_analyze_colvars"/>
    <testcase time="0.258000000000001" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_and_summarize"/>
    <testcase time="0.0670000000000002" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_and_summarize"/>
    <testcase time="0.0999999999999996" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_and_summarize"/>
    <testcase time="0.0659999999999989" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_and_summarize"/>
    <testcase time="0.0810000000000013" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_and_summarize"/>
    <testcase time="0.0519999999999996" classname="analyze_vars_in_cols" name="custom_labels_can_be_set_with_row_labels_and_summarize"/>
    <testcase time="0.312999999999999" classname="analyze_vars_in_cols" name="summarize_works_with_nested_analyze"/>
    <testcase time="0.126000000000001" classname="analyze_vars_in_cols" name="summarize_works_with_nested_analyze"/>
    <testcase time="1.167" classname="analyze_vars_in_cols" name="summarize_works_with_nested_analyze"/>
    <testcase time="0.270999999999999" classname="analyze_vars_in_cols" name="summarize_works_with_nested_analyze"/>
    <testcase time="0.0490000000000013" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_well_with_categorical_data"/>
    <testcase time="0.261999999999999" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_well_with_categorical_data"/>
    <testcase time="0.178000000000001" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_well_with_categorical_data"/>
    <testcase time="0.301" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_with_imputation_rule"/>
    <testcase time="0.115" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_with_imputation_rule"/>
    <testcase time="0.292" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_with_imputation_rule"/>
    <testcase time="0.109999999999999" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_with_imputation_rule"/>
    <testcase time="0.312000000000001" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_with_imputation_rule"/>
    <testcase time="0.116999999999999" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_with_imputation_rule"/>
    <testcase time="0.254" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_with_caching"/>
    <testcase time="0.117000000000001" classname="analyze_vars_in_cols" name="analyze_vars_in_cols_works_with_caching"/>
  </testsuite>
  <testsuite name="bland-altman" timestamp="2024-10-17T14:46:04Z" hostname="226d6849429d" tests="8" skipped="1" failures="0" errors="0" time="0.102">
    <testcase time="0.0120000000000005" classname="bland_altman" name="unequal_length_vector_gives_correct_error"/>
    <testcase time="0.00699999999999967" classname="bland_altman" name="infeasible_input_gives_correct_error"/>
    <testcase time="0.00499999999999901" classname="bland_altman" name="infeasible_input_gives_correct_error"/>
    <testcase time="0.0129999999999999" classname="bland_altman" name="s_bland_altman_works_with_two_vectors"/>
    <testcase time="0.0120000000000005" classname="bland_altman" name="s_bland_altman_works_with_two_vectors_with_NA_element_in_either_vectors"/>
    <testcase time="0.00500000000000078" classname="bland_altman" name="s_bland_altman_works_with_default_settings"/>
    <testcase time="0.0199999999999996" classname="bland_altman" name="s_bland_altman_works_with_default_settings"/>
    <testcase time="0.0280000000000005" classname="bland_altman" name="g_bland_altman_works_with_default_settings">
      <skipped message="Reason: On CI ('test-bland-altman.R:103:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="combination_function" timestamp="2024-10-17T14:46:04Z" hostname="226d6849429d" tests="16" skipped="0" failures="0" errors="0" time="0.073">
    <testcase time="0.016" classname="combination_function" name="CombinationFunction_class_can_be_used_with_standard_constructor"/>
    <testcase time="0.00199999999999889" classname="combination_function" name="CombinationFunction_class_can_be_used_with_standard_constructor"/>
    <testcase time="0.00300000000000011" classname="combination_function" name="CombinationFunction_class_can_be_used_with_standard_constructor"/>
    <testcase time="0.00600000000000023" classname="combination_function" name="CombinationFunction_custom_constructor_works"/>
    <testcase time="0.00399999999999956" classname="combination_function" name="CombinationFunction_method_works"/>
    <testcase time="0.00300000000000011" classname="combination_function" name="CombinationFunction_method_works"/>
    <testcase time="0.00200000000000067" classname="combination_function" name="CombinationFunction_method_works"/>
    <testcase time="0.00499999999999901" classname="combination_function" name="CombinationFunction_method_works"/>
    <testcase time="0.00200000000000067" classname="combination_function" name="CombinationFunction_method_works"/>
    <testcase time="0.00300000000000011" classname="combination_function" name="CombinationFunction_method_works"/>
    <testcase time="0.00999999999999979" classname="combination_function" name="CombinationFunction_method_works"/>
    <testcase time="0.00300000000000011" classname="combination_function" name="CombinationFunction_method_works"/>
    <testcase time="0.00300000000000011" classname="combination_function" name="CombinationFunction_method_works"/>
    <testcase time="0.00500000000000078" classname="combination_function" name="CombinationFunction_chain_of_logical_combinations_works"/>
    <testcase time="0.00300000000000011" classname="combination_function" name="CombinationFunction_chain_of_logical_combinations_works"/>
    <testcase time="0.00299999999999834" classname="combination_function" name="CombinationFunction_chain_of_logical_combinations_works"/>
  </testsuite>
  <testsuite name="compare_variables" timestamp="2024-10-17T14:46:04Z" hostname="226d6849429d" tests="31" skipped="0" failures="0" errors="0" time="0.634">
    <testcase time="0.00900000000000034" classname="compare_variables" name="s_compare_works_for_numeric"/>
    <testcase time="0.00200000000000067" classname="compare_variables" name="s_compare_works_for_numeric"/>
    <testcase time="0.0220000000000002" classname="compare_variables" name="s_compare_works_for_numeric"/>
    <testcase time="0.00499999999999901" classname="compare_variables" name="s_compare_for_numeric_does_not_give_p_value_when_not_at_least_2_values_in_each_group"/>
    <testcase time="0.00200000000000067" classname="compare_variables" name="s_compare_for_numeric_does_not_give_p_value_when_not_at_least_2_values_in_each_group"/>
    <testcase time="0.0190000000000001" classname="compare_variables" name="s_compare_for_numeric_does_not_give_p_value_when_not_at_least_2_values_in_each_group"/>
    <testcase time="0.00499999999999901" classname="compare_variables" name="s_compare_for_factor_works_in_usual_case"/>
    <testcase time="0.00200000000000067" classname="compare_variables" name="s_compare_for_factor_works_in_usual_case"/>
    <testcase time="0.0180000000000007" classname="compare_variables" name="s_compare_for_factor_works_in_usual_case"/>
    <testcase time="0.00199999999999889" classname="compare_variables" name="s_compare_for_factor_works_in_usual_case"/>
    <testcase time="0.0190000000000001" classname="compare_variables" name="s_compare_for_factor_works_in_usual_case"/>
    <testcase time="0.00600000000000023" classname="compare_variables" name="s_compare_for_factor_handles_explicit_NAs_as_expected"/>
    <testcase time="0.000999999999999446" classname="compare_variables" name="s_compare_for_factor_handles_explicit_NAs_as_expected"/>
    <testcase time="0.0190000000000001" classname="compare_variables" name="s_compare_for_factor_handles_explicit_NAs_as_expected"/>
    <testcase time="0.00300000000000011" classname="compare_variables" name="s_compare_for_factor_handles_explicit_NAs_as_expected"/>
    <testcase time="0.00100000000000122" classname="compare_variables" name="s_compare_for_factor_handles_explicit_NAs_as_expected"/>
    <testcase time="0.0190000000000001" classname="compare_variables" name="s_compare_for_factor_handles_explicit_NAs_as_expected"/>
    <testcase time="0.00899999999999856" classname="compare_variables" name="s_compare_for_character_works_as_expected"/>
    <testcase time="0.00100000000000122" classname="compare_variables" name="s_compare_for_character_works_as_expected"/>
    <testcase time="0.0239999999999991" classname="compare_variables" name="s_compare_for_character_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="compare_variables" name="s_compare_for_logical_works_as_expected"/>
    <testcase time="0.00200000000000067" classname="compare_variables" name="s_compare_for_logical_works_as_expected"/>
    <testcase time="0.0190000000000001" classname="compare_variables" name="s_compare_for_logical_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="compare_variables" name="s_compare_for_logical_handles_NAs_as_FALSE_if_not_removed"/>
    <testcase time="0.00300000000000011" classname="compare_variables" name="s_compare_for_logical_handles_NAs_as_FALSE_if_not_removed"/>
    <testcase time="0.0830000000000002" classname="compare_variables" name="compare_vars_works_with_default_settings_in_rtables_layout_pipeline"/>
    <testcase time="0.0749999999999993" classname="compare_variables" name="compare_vars_works_with_default_settings_in_rtables_layout_pipeline"/>
    <testcase time="0.0700000000000003" classname="compare_variables" name="compare_vars_works_with_custom_settings"/>
    <testcase time="0.0630000000000006" classname="compare_variables" name="compare_vars_works_with_custom_settings"/>
    <testcase time="0.0609999999999999" classname="compare_variables" name="compare_vars_na_str_argument_works_as_expected"/>
    <testcase time="0.0589999999999993" classname="compare_variables" name="compare_vars_na_str_argument_works_as_expected"/>
  </testsuite>
  <testsuite name="control_logistic" timestamp="2024-10-17T14:46:04Z" hostname="226d6849429d" tests="4" skipped="0" failures="0" errors="0" time="0.038">
    <testcase time="0.00699999999999967" classname="control_logistic" name="control_logistic_works_with_customized_parameters"/>
    <testcase time="0.0190000000000001" classname="control_logistic" name="control_logistic_works_with_customized_parameters"/>
    <testcase time="0.00699999999999967" classname="control_logistic" name="control_logistic_fails_wrong_inputs"/>
    <testcase time="0.00499999999999901" classname="control_logistic" name="control_logistic_fails_wrong_inputs"/>
  </testsuite>
  <testsuite name="control_step" timestamp="2024-10-17T14:46:05Z" hostname="226d6849429d" tests="5" skipped="0" failures="0" errors="0" time="0.042">
    <testcase time="0.00700000000000145" classname="control_step" name="control_step_works_with_customized_parameters"/>
    <testcase time="0.0190000000000001" classname="control_step" name="control_step_works_with_customized_parameters"/>
    <testcase time="0.00699999999999967" classname="control_step" name="control_step_fails_wrong_inputs"/>
    <testcase time="0.00499999999999901" classname="control_step" name="control_step_fails_wrong_inputs"/>
    <testcase time="0.00400000000000134" classname="control_step" name="control_step_fails_wrong_inputs"/>
  </testsuite>
  <testsuite name="control_survival" timestamp="2024-10-17T14:46:05Z" hostname="226d6849429d" tests="14" skipped="0" failures="0" errors="0" time="0.122">
    <testcase time="0.00799999999999912" classname="control_survival" name="control_coxph_works_with_customized_parameters"/>
    <testcase time="0.0250000000000004" classname="control_survival" name="control_coxph_works_with_customized_parameters"/>
    <testcase time="0.00699999999999967" classname="control_survival" name="control_coxph_fails_wrong_inputs"/>
    <testcase time="0.00500000000000078" classname="control_survival" name="control_coxph_fails_wrong_inputs"/>
    <testcase time="0.00399999999999956" classname="control_survival" name="control_surv_time_works_with_customized_parameters"/>
    <testcase time="0.0190000000000001" classname="control_survival" name="control_surv_time_works_with_customized_parameters"/>
    <testcase time="0.00799999999999912" classname="control_survival" name="control_surv_time_fails_wrong_inputs"/>
    <testcase time="0.00400000000000134" classname="control_survival" name="control_surv_time_fails_wrong_inputs"/>
    <testcase time="0.00399999999999956" classname="control_survival" name="control_surv_time_fails_wrong_inputs"/>
    <testcase time="0.00399999999999956" classname="control_survival" name="control_surv_timepoint_works_with_customized_parameters"/>
    <testcase time="0.0190000000000001" classname="control_survival" name="control_surv_timepoint_works_with_customized_parameters"/>
    <testcase time="0.00699999999999967" classname="control_survival" name="control_surv_timepoint_fails_wrong_inputs"/>
    <testcase time="0.00400000000000134" classname="control_survival" name="control_surv_timepoint_fails_wrong_inputs"/>
    <testcase time="0.00399999999999956" classname="control_survival" name="control_surv_timepoint_fails_wrong_inputs"/>
  </testsuite>
  <testsuite name="count_cumulative" timestamp="2024-10-17T14:46:05Z" hostname="226d6849429d" tests="14" skipped="0" failures="0" errors="0" time="0.413">
    <testcase time="0.0080000000000009" classname="count_cumulative" name="h_count_cumulative_works_with_healthy_input_and_default_arguments"/>
    <testcase time="0.0190000000000019" classname="count_cumulative" name="h_count_cumulative_works_with_healthy_input_and_default_arguments"/>
    <testcase time="0.00399999999999778" classname="count_cumulative" name="h_count_cumulative_works_with_customized_arguments"/>
    <testcase time="0.0200000000000031" classname="count_cumulative" name="h_count_cumulative_works_with_customized_arguments"/>
    <testcase time="0.00499999999999901" classname="count_cumulative" name="s_count_cumulative_works_with_healthy_input_and_default_arguments"/>
    <testcase time="0.0210000000000008" classname="count_cumulative" name="s_count_cumulative_works_with_healthy_input_and_default_arguments"/>
    <testcase time="0.00799999999999912" classname="count_cumulative" name="s_count_cumulative_works_with_customized_arguments"/>
    <testcase time="0.0279999999999987" classname="count_cumulative" name="s_count_cumulative_works_with_customized_arguments"/>
    <testcase time="0.0350000000000001" classname="count_cumulative" name="count_cumulative_works_with_default_arguments"/>
    <testcase time="0.0459999999999994" classname="count_cumulative" name="count_cumulative_works_with_default_arguments"/>
    <testcase time="0.0350000000000001" classname="count_cumulative" name="count_cumulative_works_with_customized_arguments"/>
    <testcase time="0.0470000000000006" classname="count_cumulative" name="count_cumulative_works_with_customized_arguments"/>
    <testcase time="0.0749999999999993" classname="count_cumulative" name="count_cumulative_works_with_denom_argument_specified"/>
    <testcase time="0.0620000000000012" classname="count_cumulative" name="count_cumulative_works_with_denom_argument_specified"/>
  </testsuite>
  <testsuite name="count_missed_doses" timestamp="2024-10-17T14:46:05Z" hostname="226d6849429d" tests="12" skipped="0" failures="0" errors="0" time="0.331">
    <testcase time="0.00900000000000034" classname="count_missed_doses" name="s_count_nonmissing_works_with_numeric_input"/>
    <testcase time="0.0189999999999984" classname="count_missed_doses" name="s_count_nonmissing_works_with_numeric_input"/>
    <testcase time="0.00400000000000134" classname="count_missed_doses" name="s_count_nonmissing_also_works_with_character_input"/>
    <testcase time="0.0190000000000019" classname="count_missed_doses" name="s_count_nonmissing_also_works_with_character_input"/>
    <testcase time="0.00499999999999901" classname="count_missed_doses" name="d_count_missed_doses_works_as_expected"/>
    <testcase time="0.0249999999999986" classname="count_missed_doses" name="d_count_missed_doses_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="count_missed_doses" name="s_count_missed_doses_works_as_expected"/>
    <testcase time="0.0190000000000019" classname="count_missed_doses" name="s_count_missed_doses_works_as_expected"/>
    <testcase time="0.0410000000000004" classname="count_missed_doses" name="count_missed_doses_works_as_expected"/>
    <testcase time="0.0500000000000007" classname="count_missed_doses" name="count_missed_doses_works_as_expected"/>
    <testcase time="0.0700000000000003" classname="count_missed_doses" name="count_missed_doses_works_with_denom_argument_specified"/>
    <testcase time="0.0649999999999977" classname="count_missed_doses" name="count_missed_doses_works_with_denom_argument_specified"/>
  </testsuite>
  <testsuite name="count_occurrences" timestamp="2024-10-17T14:46:05Z" hostname="226d6849429d" tests="33" skipped="0" failures="0" errors="0" time="2.266">
    <testcase time="0.0100000000000016" classname="count_occurrences" name="s_count_occurrences_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0199999999999996" classname="count_occurrences" name="s_count_occurrences_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.00600000000000023" classname="count_occurrences" name="s_count_occurrences_drops_non_appearing_levels_by_default"/>
    <testcase time="0.00600000000000023" classname="count_occurrences" name="s_count_occurrences_keeps_non_appearing_levels_if_requested"/>
    <testcase time="0.00199999999999889" classname="count_occurrences" name="s_count_occurrences_keeps_non_appearing_levels_if_requested"/>
    <testcase time="0.00300000000000011" classname="count_occurrences" name="s_count_occurrences_keeps_non_appearing_levels_if_requested"/>
    <testcase time="0.00799999999999912" classname="count_occurrences" name="s_count_occurrences_fails_when_it_receives_empty_.df_row_and_drop_TRUE"/>
    <testcase time="0.00700000000000145" classname="count_occurrences" name="s_count_occurrences_functions_as_expected_when_requesting_different_denominator"/>
    <testcase time="0.0199999999999996" classname="count_occurrences" name="s_count_occurrences_functions_as_expected_when_requesting_different_denominator"/>
    <testcase time="0.00799999999999912" classname="count_occurrences" name="a_count_occurrences_works_with_healthy_input."/>
    <testcase time="0.00300000000000011" classname="count_occurrences" name="a_count_occurrences_works_with_healthy_input."/>
    <testcase time="0.00700000000000145" classname="count_occurrences" name="a_count_occurrences_works_with_custom_input."/>
    <testcase time="0.027000000000001" classname="count_occurrences" name="a_count_occurrences_works_with_custom_input."/>
    <testcase time="0.0429999999999993" classname="count_occurrences" name="count_occurrences_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0519999999999996" classname="count_occurrences" name="count_occurrences_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0279999999999987" classname="count_occurrences" name="count_occurrences_functions_as_expected_with_label_row_specified"/>
    <testcase time="0.0470000000000006" classname="count_occurrences" name="count_occurrences_functions_as_expected_with_label_row_specified"/>
    <testcase time="0.0839999999999996" classname="count_occurrences" name="count_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0949999999999989" classname="count_occurrences" name="count_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.126000000000001" classname="count_occurrences" name="count_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.163" classname="count_occurrences" name="count_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.144000000000002" classname="count_occurrences" name="count_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.141999999999999" classname="count_occurrences" name="count_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0700000000000003" classname="count_occurrences" name="summarize_occurrences_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0679999999999978" classname="count_occurrences" name="summarize_occurrences_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.114000000000001" classname="count_occurrences" name="summarize_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0829999999999984" classname="count_occurrences" name="summarize_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.137" classname="count_occurrences" name="summarize_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.126000000000001" classname="count_occurrences" name="summarize_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.245000000000001" classname="count_occurrences" name="summarize_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.157" classname="count_occurrences" name="summarize_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.125" classname="count_occurrences" name="summarize_occurrences_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0899999999999999" classname="count_occurrences" name="summarize_occurrences_works_as_expected_with_risk_difference_column"/>
  </testsuite>
  <testsuite name="count_occurrences_by_grade" timestamp="2024-10-17T14:46:08Z" hostname="226d6849429d" tests="44" skipped="0" failures="0" errors="0" time="2.243">
    <testcase time="0.0109999999999992" classname="count_occurrences_by_grade" name="h_append_grade_groups_works_with_valid_input"/>
    <testcase time="0.0199999999999996" classname="count_occurrences_by_grade" name="h_append_grade_groups_works_with_valid_input"/>
    <testcase time="0.00400000000000134" classname="count_occurrences_by_grade" name="h_append_grade_groups_works_with_valid_input_with_revers_order_and_one_element_grade_groups"/>
    <testcase time="0.0199999999999996" classname="count_occurrences_by_grade" name="h_append_grade_groups_works_with_valid_input_with_revers_order_and_one_element_grade_groups"/>
    <testcase time="0.0069999999999979" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_and_default_arguments_for_grade"/>
    <testcase time="0.0240000000000009" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_and_default_arguments_for_grade"/>
    <testcase time="0.00400000000000134" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_and_default_arguments_for_grade"/>
    <testcase time="0.0210000000000008" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_and_default_arguments_for_grade"/>
    <testcase time="0.0069999999999979" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_sorts_grade_levels_so_that_missing_level_appears_last"/>
    <testcase time="0.0180000000000007" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_sorts_grade_levels_so_that_missing_level_appears_last"/>
    <testcase time="0.00700000000000145" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_for_grade_grouping"/>
    <testcase time="0.0189999999999984" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_for_grade_grouping"/>
    <testcase time="0.00199999999999889" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_for_grade_grouping"/>
    <testcase time="0.0190000000000019" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_for_grade_grouping"/>
    <testcase time="0.00300000000000011" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_for_grade_grouping"/>
    <testcase time="0.0199999999999996" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_for_grade_grouping"/>
    <testcase time="0.00600000000000023" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_for_intensity_and_custom_arguments"/>
    <testcase time="0.0189999999999984" classname="count_occurrences_by_grade" name="s_count_occurrences_by_grade_works_with_valid_input_for_intensity_and_custom_arguments"/>
    <testcase time="0.0770000000000017" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_default_arguments_for_intensity"/>
    <testcase time="0.0500000000000007" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_default_arguments_for_intensity"/>
    <testcase time="0.0489999999999995" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_default_arguments_for_intensity"/>
    <testcase time="0.0629999999999988" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_default_arguments_for_intensity"/>
    <testcase time="0.0689999999999991" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_label_works_when_more_than_one_variables_are_analyzed"/>
    <testcase time="0.0690000000000026" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_label_works_when_more_than_one_variables_are_analyzed"/>
    <testcase time="0.0619999999999976" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_custom_arguments_for_grade"/>
    <testcase time="0.0609999999999999" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_custom_arguments_for_grade"/>
    <testcase time="0.0410000000000004" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_custom_arguments_for_grade"/>
    <testcase time="0.0579999999999998" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_custom_arguments_for_grade"/>
    <testcase time="0.054000000000002" classname="count_occurrences_by_grade" name="summarize_occurrences_by_grade_works_with_default_arguments_for_intensity"/>
    <testcase time="0.0549999999999997" classname="count_occurrences_by_grade" name="summarize_occurrences_by_grade_works_with_default_arguments_for_intensity"/>
    <testcase time="0.0889999999999986" classname="count_occurrences_by_grade" name="summarize_occurrences_by_grade_works_with_default_arguments_for_intensity"/>
    <testcase time="0.0700000000000003" classname="count_occurrences_by_grade" name="summarize_occurrences_by_grade_works_with_default_arguments_for_intensity"/>
    <testcase time="0.0809999999999995" classname="count_occurrences_by_grade" name="summarize_occurrences_by_grade_works_with_custom_arguments_for_grade"/>
    <testcase time="0.0850000000000009" classname="count_occurrences_by_grade" name="summarize_occurrences_by_grade_works_with_custom_arguments_for_grade"/>
    <testcase time="0.0670000000000002" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_trim_levels_in_group_split_function"/>
    <testcase time="0.0640000000000001" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_trim_levels_in_group_split_function"/>
    <testcase time="0.315999999999999" classname="count_occurrences_by_grade" name="summarize__and_count_occurrences_by_grade_works_with_pagination_and_sorting"/>
    <testcase time="0.032" classname="count_occurrences_by_grade" name="summarize__and_count_occurrences_by_grade_works_with_pagination_and_sorting"/>
    <testcase time="0.0800000000000018" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0729999999999968" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0750000000000028" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0749999999999993" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.122" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_denom_argument_specified"/>
    <testcase time="0.0749999999999993" classname="count_occurrences_by_grade" name="count_occurrences_by_grade_works_with_denom_argument_specified"/>
  </testsuite>
  <testsuite name="count_patients_events_in_cols" timestamp="2024-10-17T14:46:10Z" hostname="226d6849429d" tests="8" skipped="0" failures="0" errors="0" time="0.238">
    <testcase time="0.0100000000000016" classname="count_patients_events_in_cols" name="s_count_patients_and_multiple_events_works_as_expected"/>
    <testcase time="0.0199999999999996" classname="count_patients_events_in_cols" name="s_count_patients_and_multiple_events_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="count_patients_events_in_cols" name="s_count_patients_and_multiple_events_can_have_empty_stats_if_requested"/>
    <testcase time="0.0190000000000019" classname="count_patients_events_in_cols" name="s_count_patients_and_multiple_events_can_have_empty_stats_if_requested"/>
    <testcase time="0.046999999999997" classname="count_patients_events_in_cols" name="summarize_patients_events_in_cols_works_well_with_default_arguments"/>
    <testcase time="0.0660000000000025" classname="count_patients_events_in_cols" name="summarize_patients_events_in_cols_works_well_with_default_arguments"/>
    <testcase time="0.0289999999999999" classname="count_patients_events_in_cols" name="summarize_patients_events_in_cols_works_well_with_custom_arguments"/>
    <testcase time="0.041999999999998" classname="count_patients_events_in_cols" name="summarize_patients_events_in_cols_works_well_with_custom_arguments"/>
  </testsuite>
  <testsuite name="count_patients_with_event" timestamp="2024-10-17T14:46:10Z" hostname="226d6849429d" tests="14" skipped="0" failures="0" errors="0" time="0.561">
    <testcase time="0.00900000000000034" classname="count_patients_with_event" name="s_count_patients_with_event_handles_NA"/>
    <testcase time="0.0190000000000019" classname="count_patients_with_event" name="s_count_patients_with_event_handles_NA"/>
    <testcase time="0.00499999999999901" classname="count_patients_with_event" name="s_count_patients_with_event_handles_multiple_columns"/>
    <testcase time="0.0189999999999984" classname="count_patients_with_event" name="s_count_patients_with_event_handles_multiple_columns"/>
    <testcase time="0.0650000000000013" classname="count_patients_with_event" name="count_patients_with_event_works_as_expected"/>
    <testcase time="0.0470000000000006" classname="count_patients_with_event" name="count_patients_with_event_works_as_expected"/>
    <testcase time="0.0500000000000007" classname="count_patients_with_event" name="count_patients_with_event_works_as_expected_for_different_column_count"/>
    <testcase time="0.0679999999999978" classname="count_patients_with_event" name="count_patients_with_event_works_as_expected_for_different_column_count"/>
    <testcase time="0.00700000000000145" classname="count_patients_with_event" name="s_count_patients_with_event_works_with_factor_filters"/>
    <testcase time="0.0219999999999985" classname="count_patients_with_event" name="s_count_patients_with_event_works_with_factor_filters"/>
    <testcase time="0.0630000000000024" classname="count_patients_with_event" name="count_patients_with_flags_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0569999999999986" classname="count_patients_with_event" name="count_patients_with_flags_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0710000000000015" classname="count_patients_with_event" name="count_patients_with_flags_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0589999999999975" classname="count_patients_with_event" name="count_patients_with_flags_works_as_expected_with_risk_difference_column"/>
  </testsuite>
  <testsuite name="count_patients_with_flags" timestamp="2024-10-17T14:46:11Z" hostname="226d6849429d" tests="30" skipped="0" failures="0" errors="0" time="1.332">
    <testcase time="0.0109999999999992" classname="count_patients_with_flags" name="s_count_patients_with_flags_handles_NA"/>
    <testcase time="0.0200000000000031" classname="count_patients_with_flags" name="s_count_patients_with_flags_handles_NA"/>
    <testcase time="0.00499999999999901" classname="count_patients_with_flags" name="s_count_patients_with_flags_handles_multiple_columns"/>
    <testcase time="0.0199999999999996" classname="count_patients_with_flags" name="s_count_patients_with_flags_handles_multiple_columns"/>
    <testcase time="0.00799999999999912" classname="count_patients_with_flags" name="s_count_patients_with_flags_custom_variable_label_behaviour_works"/>
    <testcase time="0.0199999999999996" classname="count_patients_with_flags" name="s_count_patients_with_flags_custom_variable_label_behaviour_works"/>
    <testcase time="0.00400000000000134" classname="count_patients_with_flags" name="s_count_patients_with_flags_custom_variable_label_behaviour_works"/>
    <testcase time="0.027000000000001" classname="count_patients_with_flags" name="s_count_patients_with_flags_custom_variable_label_behaviour_works"/>
    <testcase time="0.00300000000000011" classname="count_patients_with_flags" name="s_count_patients_with_flags_custom_variable_label_behaviour_works"/>
    <testcase time="0.0199999999999996" classname="count_patients_with_flags" name="s_count_patients_with_flags_custom_variable_label_behaviour_works"/>
    <testcase time="0.00400000000000134" classname="count_patients_with_flags" name="s_count_patients_with_flags_custom_variable_label_behaviour_works"/>
    <testcase time="0.0190000000000019" classname="count_patients_with_flags" name="s_count_patients_with_flags_custom_variable_label_behaviour_works"/>
    <testcase time="0.0579999999999998" classname="count_patients_with_flags" name="count_patients_with_flags_works_as_expected"/>
    <testcase time="0.046999999999997" classname="count_patients_with_flags" name="count_patients_with_flags_works_as_expected"/>
    <testcase time="0.0680000000000014" classname="count_patients_with_flags" name="count_patients_with_flags_works_as_expected_when_specifying_table_names"/>
    <testcase time="0.0539999999999985" classname="count_patients_with_flags" name="count_patients_with_flags_works_as_expected_when_specifying_table_names"/>
    <testcase time="0.093" classname="count_patients_with_flags" name="count_patients_with_flags_works_with_label_row_specified"/>
    <testcase time="0.0690000000000026" classname="count_patients_with_flags" name="count_patients_with_flags_works_with_label_row_specified"/>
    <testcase time="0.0589999999999975" classname="count_patients_with_flags" name="count_patients_with_flags_custom_variable_label_behaviour_works_with_var_labels_specified"/>
    <testcase time="0.0720000000000027" classname="count_patients_with_flags" name="count_patients_with_flags_custom_variable_label_behaviour_works_with_var_labels_specified"/>
    <testcase time="0.0539999999999985" classname="count_patients_with_flags" name="count_patients_with_flags_custom_variable_label_behaviour_works_with_var_labels_specified"/>
    <testcase time="0.0620000000000012" classname="count_patients_with_flags" name="count_patients_with_flags_custom_variable_label_behaviour_works_with_var_labels_specified"/>
    <testcase time="0.0679999999999978" classname="count_patients_with_flags" name="count_patients_with_flags_custom_variable_label_behaviour_works_with_var_labels_specified"/>
    <testcase time="0.0620000000000012" classname="count_patients_with_flags" name="count_patients_with_flags_custom_variable_label_behaviour_works_with_var_labels_specified"/>
    <testcase time="0.0539999999999985" classname="count_patients_with_flags" name="count_patients_with_flags_custom_variable_label_behaviour_works_with_var_labels_specified"/>
    <testcase time="0.0720000000000027" classname="count_patients_with_flags" name="count_patients_with_flags_custom_variable_label_behaviour_works_with_var_labels_specified"/>
    <testcase time="0.0719999999999992" classname="count_patients_with_flags" name="count_patients_with_flags_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0599999999999987" classname="count_patients_with_flags" name="count_patients_with_flags_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0800000000000018" classname="count_patients_with_flags" name="count_patients_with_flags_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0670000000000002" classname="count_patients_with_flags" name="count_patients_with_flags_works_as_expected_with_risk_difference_column"/>
  </testsuite>
  <testsuite name="count_values" timestamp="2024-10-17T14:46:12Z" hostname="226d6849429d" tests="24" skipped="0" failures="0" errors="0" time="0.449">
    <testcase time="0.00900000000000034" classname="count_values" name="s_count_values_works_for_character_input_without_NAs"/>
    <testcase time="0.0199999999999996" classname="count_values" name="s_count_values_works_for_character_input_without_NAs"/>
    <testcase time="0.000999999999997669" classname="count_values" name="s_count_values_works_for_character_input_without_NAs"/>
    <testcase time="0.0259999999999998" classname="count_values" name="s_count_values_works_for_character_input_without_NAs"/>
    <testcase time="0.00600000000000023" classname="count_values" name="s_count_values_works_for_character_input_with_NAs"/>
    <testcase time="0.022000000000002" classname="count_values" name="s_count_values_works_for_character_input_with_NAs"/>
    <testcase time="0.00199999999999889" classname="count_values" name="s_count_values_works_for_character_input_with_NAs"/>
    <testcase time="0.0190000000000019" classname="count_values" name="s_count_values_works_for_character_input_with_NAs"/>
    <testcase time="0.00499999999999901" classname="count_values" name="s_count_values_can_pass_options_to_s_summary_s_logical_method"/>
    <testcase time="0.0189999999999984" classname="count_values" name="s_count_values_can_pass_options_to_s_summary_s_logical_method"/>
    <testcase time="0.00400000000000134" classname="count_values" name="s_count_values_for_factor_gives_same_result_as_for_character"/>
    <testcase time="0.0199999999999996" classname="count_values" name="s_count_values_for_factor_gives_same_result_as_for_character"/>
    <testcase time="0.00499999999999901" classname="count_values" name="s_count_values_for_factor_gives_the_same_result_as_for_character_for_values_not_in_factor_level"/>
    <testcase time="0.0190000000000019" classname="count_values" name="s_count_values_for_factor_gives_the_same_result_as_for_character_for_values_not_in_factor_level"/>
    <testcase time="0.0259999999999998" classname="count_values" name="count_values_works_as_expected_with_a_single_value"/>
    <testcase time="0.0360000000000014" classname="count_values" name="count_values_works_as_expected_with_a_single_value"/>
    <testcase time="0.0459999999999994" classname="count_values" name="count_values_works_as_expected_with_multiple_values_and_variables"/>
    <testcase time="0.0440000000000005" classname="count_values" name="count_values_works_as_expected_with_multiple_values_and_variables"/>
    <testcase time="0.00399999999999778" classname="count_values" name="s_count_values_for_logical_vector"/>
    <testcase time="0.0199999999999996" classname="count_values" name="s_count_values_for_logical_vector"/>
    <testcase time="0.00500000000000256" classname="count_values" name="s_count_values_for_logical_vector_with_NA"/>
    <testcase time="0.0189999999999984" classname="count_values" name="s_count_values_for_logical_vector_with_NA"/>
    <testcase time="0.0259999999999998" classname="count_values" name="count_values_works_as_expected_with_multiple_values_and_variables"/>
    <testcase time="0.0459999999999994" classname="count_values" name="count_values_works_as_expected_with_multiple_values_and_variables"/>
  </testsuite>
  <testsuite name="coxph" timestamp="2024-10-17T14:46:13Z" hostname="226d6849429d" tests="23" skipped="0" failures="0" errors="0" time="0.306">
    <testcase time="0.00900000000000034" classname="coxph" name="univariate_works_correctly"/>
    <testcase time="0.00100000000000122" classname="coxph" name="univariate_works_correctly"/>
    <testcase time="0.0199999999999996" classname="coxph" name="univariate_works_correctly"/>
    <testcase time="0.00700000000000145" classname="coxph" name="univariate_works_correctly"/>
    <testcase time="0.000999999999997669" classname="coxph" name="univariate_works_correctly"/>
    <testcase time="0.0199999999999996" classname="coxph" name="univariate_works_correctly"/>
    <testcase time="0.00500000000000256" classname="coxph" name="rht_works_correctly"/>
    <testcase time="0.000999999999997669" classname="coxph" name="rht_works_correctly"/>
    <testcase time="0.0199999999999996" classname="coxph" name="rht_works_correctly"/>
    <testcase time="0.017000000000003" classname="coxph" name="estimate_coef_works_correctly"/>
    <testcase time="0.0189999999999984" classname="coxph" name="estimate_coef_works_correctly"/>
    <testcase time="0.00100000000000122" classname="coxph" name="estimate_coef_works_correctly"/>
    <testcase time="0.0189999999999984" classname="coxph" name="estimate_coef_works_correctly"/>
    <testcase time="0.027000000000001" classname="coxph" name="try_car_anova_works_correctly"/>
    <testcase time="0.0259999999999998" classname="coxph" name="try_car_anova_works_correctly"/>
    <testcase time="0.00199999999999889" classname="coxph" name="try_car_anova_works_correctly"/>
    <testcase time="0.0229999999999997" classname="coxph" name="try_car_anova_works_correctly"/>
    <testcase time="0.00700000000000145" classname="coxph" name="check_formula_returns_correct_error"/>
    <testcase time="0.00799999999999912" classname="coxph" name="check_covariate_formulas_works_correctly"/>
    <testcase time="0.00499999999999901" classname="coxph" name="name_covariate_names_works_correctly"/>
    <testcase time="0.00800000000000267" classname="coxph" name="check_increments_gives_correct_warning"/>
    <testcase time="0.0299999999999976" classname="coxph" name="s_cox_multivariate_works_correctly_with_character_input"/>
    <testcase time="0.0300000000000011" classname="coxph" name="s_cox_multivariate_works_correctly_with_character_input"/>
  </testsuite>
  <testsuite name="coxreg" timestamp="2024-10-17T14:46:13Z" hostname="226d6849429d" tests="74" skipped="0" failures="0" errors="0" time="1.113">
    <testcase time="0.0210000000000008" classname="coxreg" name="h_coxreg_univar_formulas_creates_formulas_with_covariate"/>
    <testcase time="0.0279999999999987" classname="coxreg" name="h_coxreg_univar_formulas_creates_formulas_with_covariate"/>
    <testcase time="0.00600000000000023" classname="coxreg" name="h_coxreg_univar_formulas_creates_formulas_with_strata"/>
    <testcase time="0.022000000000002" classname="coxreg" name="h_coxreg_univar_formulas_creates_formulas_with_strata"/>
    <testcase time="0.00499999999999901" classname="coxreg" name="h_coxreg_univar_formulas_creates_formula_for_reference_when_treatment_is_only_considered"/>
    <testcase time="0.0180000000000007" classname="coxreg" name="h_coxreg_univar_formulas_creates_formula_for_reference_when_treatment_is_only_considered"/>
    <testcase time="0.00499999999999901" classname="coxreg" name="h_coxreg_univar_formulas_creates_formulas_with_interactions"/>
    <testcase time="0.0289999999999999" classname="coxreg" name="h_coxreg_univar_formulas_creates_formulas_with_interactions"/>
    <testcase time="0.00499999999999901" classname="coxreg" name="h_coxreg_univar_formulas_creates_formula_without_treatment_arm"/>
    <testcase time="0.0190000000000019" classname="coxreg" name="h_coxreg_univar_formulas_creates_formula_without_treatment_arm"/>
    <testcase time="0.00799999999999912" classname="coxreg" name="h_coxreg_univar_formulas_fails_when_requesting_interaction_without_treatment_arm"/>
    <testcase time="0.00700000000000145" classname="coxreg" name="h_coxreg_univar_formulas_fails_when_requesting_interaction_without_covariates"/>
    <testcase time="0.00499999999999901" classname="coxreg" name="h_coxreg_univar_formulas_creates_formulas_with_multiple_strata"/>
    <testcase time="0.0189999999999984" classname="coxreg" name="h_coxreg_univar_formulas_creates_formulas_with_multiple_strata"/>
    <testcase time="0.0199999999999996" classname="coxreg" name="h_coxreg_multivar_extract_extracts_correct_coxph_results_when_covariate_names_overlap"/>
    <testcase time="0.0199999999999996" classname="coxreg" name="h_coxreg_multivar_extract_extracts_correct_coxph_results_when_covariate_names_overlap"/>
    <testcase time="0.0140000000000029" classname="coxreg" name="h_coxreg_multivar_extract_extracts_correct_coxph_results_when_covariate_is_a_factor"/>
    <testcase time="0.0199999999999996" classname="coxreg" name="h_coxreg_multivar_extract_extracts_correct_coxph_results_when_covariate_is_a_factor"/>
    <testcase time="0.00499999999999901" classname="coxreg" name="h_coxreg_multivar_formula_creates_formula_without_covariate"/>
    <testcase time="0.0190000000000019" classname="coxreg" name="h_coxreg_multivar_formula_creates_formula_without_covariate"/>
    <testcase time="0.00499999999999901" classname="coxreg" name="h_coxreg_multivar_formula_creates_formulas_with_a_strata"/>
    <testcase time="0.0279999999999987" classname="coxreg" name="h_coxreg_multivar_formula_creates_formulas_with_a_strata"/>
    <testcase time="0.00499999999999901" classname="coxreg" name="h_coxreg_multivar_formula_creates_formulas_with_multiple_strata"/>
    <testcase time="0.0200000000000031" classname="coxreg" name="h_coxreg_multivar_formula_creates_formulas_with_multiple_strata"/>
    <testcase time="0.00399999999999778" classname="coxreg" name="h_coxreg_multivar_formula_creates_formula_with_covariate"/>
    <testcase time="0.0199999999999996" classname="coxreg" name="h_coxreg_multivar_formula_creates_formula_with_covariate"/>
    <testcase time="0.00400000000000134" classname="coxreg" name="h_coxreg_multivar_formula_creates_formula_without_treatment_arm"/>
    <testcase time="0.0189999999999984" classname="coxreg" name="h_coxreg_multivar_formula_creates_formula_without_treatment_arm"/>
    <testcase time="0.00400000000000134" classname="coxreg" name="h_coxreg_multivar_formula_creates_formulas_with_multiple_strata_and_without_arm"/>
    <testcase time="0.0199999999999996" classname="coxreg" name="h_coxreg_multivar_formula_creates_formulas_with_multiple_strata_and_without_arm"/>
    <testcase time="0.00399999999999778" classname="coxreg" name="control_coxreg_returns_a_standard_list_of_parameters"/>
    <testcase time="0.0190000000000019" classname="coxreg" name="control_coxreg_returns_a_standard_list_of_parameters"/>
    <testcase time="0.0159999999999982" classname="coxreg" name="fit_coxreg_univar_returns_model_results_as_expected"/>
    <testcase time="0.0330000000000013" classname="coxreg" name="fit_coxreg_univar_returns_model_results_as_expected"/>
    <testcase time="0.0180000000000007" classname="coxreg" name="fit_coxreg_univar_runs_with_non_represented_level_of_a_factor"/>
    <testcase time="0.0120000000000005" classname="coxreg" name="fit_coxreg_univar_is_stopped_when_there_are_not_2_arms"/>
    <testcase time="0.00799999999999912" classname="coxreg" name="fit_coxreg_univar_is_stopped_when_likelihood_method_is_used_together_with_strata"/>
    <testcase time="0.0100000000000016" classname="coxreg" name="fit_coxreg_univar_works_without_treatment_arm"/>
    <testcase time="0.000999999999997669" classname="coxreg" name="fit_coxreg_univar_works_without_treatment_arm"/>
    <testcase time="0.0199999999999996" classname="coxreg" name="fit_coxreg_univar_works_without_treatment_arm"/>
    <testcase time="0.00700000000000145" classname="coxreg" name="tidy.summary.coxph_method_tidies_up_the_Cox_regression_model"/>
    <testcase time="0.0199999999999996" classname="coxreg" name="tidy.summary.coxph_method_tidies_up_the_Cox_regression_model"/>
    <testcase time="0.0109999999999992" classname="coxreg" name="h_coxreg_univar_extract_extracts_coxph_results"/>
    <testcase time="0.0199999999999996" classname="coxreg" name="h_coxreg_univar_extract_extracts_coxph_results"/>
    <testcase time="0.0229999999999997" classname="coxreg" name="muffled_car_anova_muffles_notes_about_dropped_strata_term"/>
    <testcase time="0.0120000000000005" classname="coxreg" name="muffled_car_anova_muffles_notes_about_dropped_strata_term"/>
    <testcase time="0.0210000000000008" classname="coxreg" name="muffled_car_anova_gives_a_hint_in_the_error_message_when_an_error_occurs"/>
    <testcase time="0.0489999999999995" classname="coxreg" name="tidy.coxreg.univar_method_tidies_up_the_univariate_Cox_regression_model"/>
    <testcase time="0.0360000000000014" classname="coxreg" name="tidy.coxreg.univar_method_tidies_up_the_univariate_Cox_regression_model"/>
    <testcase time="0.0279999999999987" classname="coxreg" name="tidy.coxreg.univar_method_works_with_only_numeric_covariates_with_strata"/>
    <testcase time="0.0210000000000008" classname="coxreg" name="tidy.coxreg.univar_method_works_with_only_numeric_covariates_with_strata"/>
    <testcase time="0.0300000000000011" classname="coxreg" name="tidy.coxreg.univar_method_works_without_treatment_arm"/>
    <testcase time="0.000999999999997669" classname="coxreg" name="tidy.coxreg.univar_method_works_without_treatment_arm"/>
    <testcase time="0.0210000000000008" classname="coxreg" name="tidy.coxreg.univar_method_works_without_treatment_arm"/>
    <testcase time="0.0190000000000019" classname="coxreg" name="h_coxreg_extract_interaction_works_with_factor_as_covariate"/>
    <testcase time="0.00399999999999778" classname="coxreg" name="h_coxreg_extract_interaction_works_with_factor_as_covariate"/>
    <testcase time="0.0150000000000006" classname="coxreg" name="h_coxreg_inter_effect_works_with_numerics_as_covariate"/>
    <testcase time="0.00300000000000011" classname="coxreg" name="h_coxreg_inter_effect_works_with_numerics_as_covariate"/>
    <testcase time="0.00600000000000023" classname="coxreg" name="h_coxreg_inter_effect_works_with_numerics_as_covariate"/>
    <testcase time="0.0150000000000006" classname="coxreg" name="h_coxreg_inter_effect.numerics_works_with_____in_effect_levels"/>
    <testcase time="0.0120000000000005" classname="coxreg" name="h_coxreg_inter_effect.numerics_works_with_____in_effect_levels"/>
    <testcase time="0.0109999999999992" classname="coxreg" name="h_coxreg_inter_effect.numerics_works_with_____in_effect_levels"/>
    <testcase time="0.0219999999999985" classname="coxreg" name="h_coxreg_inter_effect_works_with_character_covariate"/>
    <testcase time="0.00400000000000134" classname="coxreg" name="h_coxreg_inter_effect_works_with_character_covariate"/>
    <testcase time="0.00799999999999912" classname="coxreg" name="h_coxreg_inter_effect_works_with_character_covariate"/>
    <testcase time="0.0120000000000005" classname="coxreg" name="h_coxreg_inter_estimations_results_identical_to_soon_deprecated_estimate_coef"/>
    <testcase time="0.0139999999999993" classname="coxreg" name="fit_coxreg_multivar_returns_model_results_as_expected"/>
    <testcase time="0.0199999999999996" classname="coxreg" name="fit_coxreg_multivar_returns_model_results_as_expected"/>
    <testcase time="0.00900000000000034" classname="coxreg" name="fit_coxreg_multivar_is_stopped_when_likelihood_method_is_used_together_with_strata"/>
    <testcase time="0.0109999999999992" classname="coxreg" name="fit_coxreg_multivar_works_correctly_also_without_treatment_arm"/>
    <testcase time="0.00199999999999889" classname="coxreg" name="fit_coxreg_multivar_works_correctly_also_without_treatment_arm"/>
    <testcase time="0.00300000000000011" classname="coxreg" name="fit_coxreg_multivar_works_correctly_also_without_treatment_arm"/>
    <testcase time="0.0360000000000014" classname="coxreg" name="tidy.coxreg.multivar_method_tidies_up_the_multivariate_Cox_regression_model"/>
    <testcase time="0.0219999999999985" classname="coxreg" name="tidy.coxreg.multivar_method_tidies_up_the_multivariate_Cox_regression_model"/>
  </testsuite>
  <testsuite name="decorate_grob" timestamp="2024-10-17T14:46:14Z" hostname="226d6849429d" tests="15" skipped="1" failures="0" errors="0" time="0.732">
    <testcase time="0.0190000000000019" classname="decorate_grob" name="decorate_grob_returns_no_warnings_when_creating_an_empty_plot"/>
    <testcase time="0.0189999999999984" classname="decorate_grob" name="decorate_grob_returns_no_warnings_when_creating_a_non_empty_plot"/>
    <testcase time="0.0330000000000013" classname="decorate_grob" name="split_string_works_with_default_settings"/>
    <testcase time="0.0210000000000008" classname="decorate_grob" name="decorate_grob_factory_returns_page_warning_correctly"/>
    <testcase time="0.492000000000001" classname="decorate_grob" name="decorate_grob_set_returns_no_warnings_when_creating_a_non_empty_plot"/>
    <testcase time="0.0539999999999985" classname="decorate_grob" name="decorate_grob_set_returns_no_warnings_when_creating_a_non_empty_plot"/>
    <testcase time="0.0479999999999983" classname="decorate_grob" name="text_wrapping_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="decorate_grob" name="text_wrapping_works_as_expected">
      <skipped message="Reason: On CI ('test-decorate_grob.R:124:3')"/>
    </testcase>
    <testcase time="0.0189999999999984" classname="decorate_grob" name="Edge_cases_work_for_titles_and_footers_in_split_text_grob"/>
    <testcase time="0.00100000000000122" classname="decorate_grob" name="Edge_cases_work_for_titles_and_footers_in_split_text_grob"/>
    <testcase time="0.00199999999999889" classname="decorate_grob" name="Edge_cases_work_for_titles_and_footers_in_split_text_grob"/>
    <testcase time="0.00200000000000244" classname="decorate_grob" name="Edge_cases_work_for_titles_and_footers_in_split_text_grob"/>
    <testcase time="0.000999999999997669" classname="decorate_grob" name="Edge_cases_work_for_titles_and_footers_in_split_text_grob"/>
    <testcase time="0.0160000000000018" classname="decorate_grob" name="Wrapping_works_consistently"/>
    <testcase time="0.00300000000000011" classname="decorate_grob" name="Wrapping_works_consistently"/>
  </testsuite>
  <testsuite name="desctools_binom_diff" timestamp="2024-10-17T14:46:15Z" hostname="226d6849429d" tests="10" skipped="0" failures="0" errors="0" time="0.206">
    <testcase time="0.0169999999999995" classname="desctools_binom_diff" name="desctools_binom_produces_correct_output"/>
    <testcase time="0.0240000000000009" classname="desctools_binom_diff" name="desctools_binom_produces_correct_output"/>
    <testcase time="0.0109999999999992" classname="desctools_binom_diff" name="desctools_binom_produces_correct_output_for_all_methods"/>
    <testcase time="0.0199999999999996" classname="desctools_binom_diff" name="desctools_binom_produces_correct_output_for_all_methods"/>
    <testcase time="0.00499999999999901" classname="desctools_binom_diff" name="desctools_binomci_produces_correct_output_with_default_settings"/>
    <testcase time="0.0190000000000019" classname="desctools_binom_diff" name="desctools_binomci_produces_correct_output_with_default_settings"/>
    <testcase time="0.00499999999999901" classname="desctools_binom_diff" name="desctools_binomci_produces_correct_output_with_custom_settings"/>
    <testcase time="0.0199999999999996" classname="desctools_binom_diff" name="desctools_binomci_produces_correct_output_with_custom_settings"/>
    <testcase time="0.0629999999999988" classname="desctools_binom_diff" name="desctools_binomci_produces_correct_output_for_all_methods"/>
    <testcase time="0.022000000000002" classname="desctools_binom_diff" name="desctools_binomci_produces_correct_output_for_all_methods"/>
  </testsuite>
  <testsuite name="df_explicit_na" timestamp="2024-10-17T14:46:15Z" hostname="226d6849429d" tests="19" skipped="0" failures="0" errors="0" time="0.2">
    <testcase time="0.0109999999999992" classname="df_explicit_na" name="Default_fill_in_of_missing_values_and_conversion_to_factor_works_as_expected"/>
    <testcase time="0.0199999999999996" classname="df_explicit_na" name="Default_fill_in_of_missing_values_and_conversion_to_factor_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="df_explicit_na" name="Default_fill_in_of_missing_values_and_conversion_to_factor_works_as_expected"/>
    <testcase time="0.0190000000000019" classname="df_explicit_na" name="Default_fill_in_of_missing_values_and_conversion_to_factor_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="df_explicit_na" name="Default_settings_work_when_input_data_does_not_have_labels"/>
    <testcase time="0.0200000000000031" classname="df_explicit_na" name="Default_settings_work_when_input_data_does_not_have_labels"/>
    <testcase time="0.00600000000000023" classname="df_explicit_na" name="Only_replace_missing_values_without_modifying_character_or_logical_variables"/>
    <testcase time="0.0199999999999996" classname="df_explicit_na" name="Only_replace_missing_values_without_modifying_character_or_logical_variables"/>
    <testcase time="0.00499999999999901" classname="df_explicit_na" name="Conversion_to_factor_works_with_some_variables_omitted"/>
    <testcase time="0.0199999999999996" classname="df_explicit_na" name="Conversion_to_factor_works_with_some_variables_omitted"/>
    <testcase time="0.0130000000000017" classname="df_explicit_na" name="Only_convert_logical_variables_but_not_character_variables"/>
    <testcase time="0.0239999999999974" classname="df_explicit_na" name="Only_convert_logical_variables_but_not_character_variables"/>
    <testcase time="0.00800000000000267" classname="df_explicit_na" name="Check_Errors"/>
    <testcase time="0.00499999999999901" classname="df_explicit_na" name="Check_Errors"/>
    <testcase time="0.00399999999999778" classname="df_explicit_na" name="Check_Errors"/>
    <testcase time="0.00400000000000134" classname="df_explicit_na" name="Check_Errors"/>
    <testcase time="0.00499999999999901" classname="df_explicit_na" name="Check_Errors"/>
    <testcase time="0.00400000000000134" classname="df_explicit_na" name="df_explicit_na_just_returns_unmodified_data_if_all_columns_are_omitted"/>
    <testcase time="0.00300000000000011" classname="df_explicit_na" name="df_explicit_na_just_returns_unmodified_data_if_all_columns_are_omitted"/>
  </testsuite>
  <testsuite name="estimate_multinom_rsp" timestamp="2024-10-17T14:46:15Z" hostname="226d6849429d" tests="10" skipped="0" failures="0" errors="0" time="0.221">
    <testcase time="0.00799999999999912" classname="estimate_multinom_rsp" name="d_onco_rsp_label_provide_right_response_labels"/>
    <testcase time="0.0199999999999996" classname="estimate_multinom_rsp" name="d_onco_rsp_label_provide_right_response_labels"/>
    <testcase time="0.00500000000000256" classname="estimate_multinom_rsp" name="d_onco_rsp_label_describe_label_with_x_being_a_factor"/>
    <testcase time="0.0189999999999984" classname="estimate_multinom_rsp" name="d_onco_rsp_label_describe_label_with_x_being_a_factor"/>
    <testcase time="0.00700000000000145" classname="estimate_multinom_rsp" name="s_length_proportion_works_as_expected_with_healthy_input"/>
    <testcase time="0.0069999999999979" classname="estimate_multinom_rsp" name="s_length_proportion_fails_with_bad_input"/>
    <testcase time="0.00500000000000256" classname="estimate_multinom_rsp" name="s_length_proportion_fails_with_bad_input"/>
    <testcase time="0.00399999999999778" classname="estimate_multinom_rsp" name="s_length_proportion_fails_with_bad_input"/>
    <testcase time="0.0869999999999997" classname="estimate_multinom_rsp" name="estimate_multinomial_response_returns_right_result"/>
    <testcase time="0.0590000000000011" classname="estimate_multinom_rsp" name="estimate_multinomial_response_returns_right_result"/>
  </testsuite>
  <testsuite name="estimate_proportion" timestamp="2024-10-17T14:46:15Z" hostname="226d6849429d" tests="41" skipped="0" failures="0" errors="0" time="0.766">
    <testcase time="0.0109999999999992" classname="estimate_proportion" name="prop_wilson_returns_right_result"/>
    <testcase time="0.0190000000000019" classname="estimate_proportion" name="prop_wilson_returns_right_result"/>
    <testcase time="0.00499999999999901" classname="estimate_proportion" name="strata_normal_quantile_works_with_general_factor_table"/>
    <testcase time="0.0289999999999999" classname="estimate_proportion" name="strata_normal_quantile_works_with_general_factor_table"/>
    <testcase time="0.00600000000000023" classname="estimate_proportion" name="update_weights_strat_wilson_works_with_general_inputs"/>
    <testcase time="0.0199999999999996" classname="estimate_proportion" name="update_weights_strat_wilson_works_with_general_inputs"/>
    <testcase time="0.00600000000000023" classname="estimate_proportion" name="update_weights_strat_wilson_convergence_test"/>
    <testcase time="0.0189999999999984" classname="estimate_proportion" name="update_weights_strat_wilson_convergence_test"/>
    <testcase time="0.00500000000000256" classname="estimate_proportion" name="update_weights_strat_wilson_convergence_test"/>
    <testcase time="0.00600000000000023" classname="estimate_proportion" name="prop_strat_wilson_returns_right_results"/>
    <testcase time="0.0199999999999996" classname="estimate_proportion" name="prop_strat_wilson_returns_right_results"/>
    <testcase time="0.00600000000000023" classname="estimate_proportion" name="prop_strat_wilson_returns_right_result_with_inserted_weights"/>
    <testcase time="0.0189999999999984" classname="estimate_proportion" name="prop_strat_wilson_returns_right_result_with_inserted_weights"/>
    <testcase time="0.00499999999999901" classname="estimate_proportion" name="prop_clopper_pearson_returns_right_result"/>
    <testcase time="0.0190000000000019" classname="estimate_proportion" name="prop_clopper_pearson_returns_right_result"/>
    <testcase time="0.00400000000000134" classname="estimate_proportion" name="prop_wald_returns_right_result"/>
    <testcase time="0.0269999999999975" classname="estimate_proportion" name="prop_wald_returns_right_result"/>
    <testcase time="0.00100000000000122" classname="estimate_proportion" name="prop_wald_returns_right_result"/>
    <testcase time="0.0219999999999985" classname="estimate_proportion" name="prop_wald_returns_right_result"/>
    <testcase time="0.00499999999999901" classname="estimate_proportion" name="prop_agresti_coull_returns_right_result"/>
    <testcase time="0.0190000000000019" classname="estimate_proportion" name="prop_agresti_coull_returns_right_result"/>
    <testcase time="0.00499999999999901" classname="estimate_proportion" name="prop_jeffreys_returns_right_result"/>
    <testcase time="0.0189999999999984" classname="estimate_proportion" name="prop_jeffreys_returns_right_result"/>
    <testcase time="0.00700000000000145" classname="estimate_proportion" name="prop_strat_wilson_output_matches_equivalent_SAS_function_output"/>
    <testcase time="0.0190000000000019" classname="estimate_proportion" name="prop_strat_wilson_output_matches_equivalent_SAS_function_output"/>
    <testcase time="0.00499999999999901" classname="estimate_proportion" name="s_proportion_returns_right_result"/>
    <testcase time="0.0199999999999996" classname="estimate_proportion" name="s_proportion_returns_right_result"/>
    <testcase time="0.00400000000000134" classname="estimate_proportion" name="_s_proportion_works_with_Jeffreys_CI"/>
    <testcase time="0.0199999999999996" classname="estimate_proportion" name="_s_proportion_works_with_Jeffreys_CI"/>
    <testcase time="0.00199999999999889" classname="estimate_proportion" name="_s_proportion_works_with_Jeffreys_CI"/>
    <testcase time="0.0289999999999999" classname="estimate_proportion" name="_s_proportion_works_with_Jeffreys_CI"/>
    <testcase time="0.00499999999999901" classname="estimate_proportion" name="_s_proportion_works_with_Agresti_Coull_CI"/>
    <testcase time="0.0199999999999996" classname="estimate_proportion" name="_s_proportion_works_with_Agresti_Coull_CI"/>
    <testcase time="0.00200000000000244" classname="estimate_proportion" name="_s_proportion_works_with_Agresti_Coull_CI"/>
    <testcase time="0.0199999999999996" classname="estimate_proportion" name="_s_proportion_works_with_Agresti_Coull_CI"/>
    <testcase time="0.0839999999999996" classname="estimate_proportion" name="_estimate_proportion_is_compatible_with_rtables_"/>
    <testcase time="0.0309999999999988" classname="estimate_proportion" name="_estimate_proportion_is_compatible_with_rtables_"/>
    <testcase time="0.0770000000000017" classname="estimate_proportion" name="_estimate_proportion_and_strat_wilson_is_compatible_with_rtables_"/>
    <testcase time="0.0199999999999996" classname="estimate_proportion" name="_estimate_proportion_and_strat_wilson_is_compatible_with_rtables_"/>
    <testcase time="0.0829999999999984" classname="estimate_proportion" name="_estimate_proportion_and_strat_wilson_with_equal_weights_and_specific_number_of_interactions_works_with_rtables_"/>
    <testcase time="0.0210000000000008" classname="estimate_proportion" name="_estimate_proportion_and_strat_wilson_with_equal_weights_and_specific_number_of_interactions_works_with_rtables_"/>
  </testsuite>
  <testsuite name="fit_rsp_step" timestamp="2024-10-17T14:46:16Z" hostname="226d6849429d" tests="22" skipped="0" failures="0" errors="0" time="0.424">
    <testcase time="0.161000000000001" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_default_options"/>
    <testcase time="0.00199999999999889" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_default_options"/>
    <testcase time="0.00199999999999889" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_default_options"/>
    <testcase time="0.0199999999999996" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_default_options"/>
    <testcase time="0.00200000000000244" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_default_options"/>
    <testcase time="0.0189999999999984" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_default_options"/>
    <testcase time="0.0229999999999997" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.00100000000000122" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.00100000000000122" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.0199999999999996" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.000999999999997669" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.0310000000000024" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.0280000000000022" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_strata"/>
    <testcase time="0.000999999999997669" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_strata"/>
    <testcase time="0.00100000000000122" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_strata"/>
    <testcase time="0.0199999999999996" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_strata"/>
    <testcase time="0.00200000000000244" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_strata"/>
    <testcase time="0.0189999999999984" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_strata"/>
    <testcase time="0.0629999999999988" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_null_bandwidth"/>
    <testcase time="0.00100000000000122" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_null_bandwidth"/>
    <testcase time="0.00300000000000011" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_null_bandwidth"/>
    <testcase time="0.00300000000000011" classname="fit_rsp_step" name="fit_rsp_step_works_as_expected_with_null_bandwidth"/>
  </testsuite>
  <testsuite name="fit_survival_step" timestamp="2024-10-17T14:46:17Z" hostname="226d6849429d" tests="18" skipped="0" failures="0" errors="0" time="0.418">
    <testcase time="0.175999999999998" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_default_options"/>
    <testcase time="0.00100000000000122" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_default_options"/>
    <testcase time="0.00100000000000122" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_default_options"/>
    <testcase time="0.032" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_default_options"/>
    <testcase time="0.00199999999999889" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_default_options"/>
    <testcase time="0.0199999999999996" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_default_options"/>
    <testcase time="0.022000000000002" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.000999999999997669" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.00200000000000244" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.0189999999999984" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.00199999999999889" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.0190000000000019" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_global_model_fit"/>
    <testcase time="0.0769999999999982" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_null_bandwidth"/>
    <testcase time="0.00100000000000122" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_null_bandwidth"/>
    <testcase time="0.00199999999999889" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_null_bandwidth"/>
    <testcase time="0.0199999999999996" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_null_bandwidth"/>
    <testcase time="0.00200000000000244" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_null_bandwidth"/>
    <testcase time="0.0189999999999984" classname="fit_survival_step" name="fit_survival_step_works_as_expected_with_null_bandwidth"/>
  </testsuite>
  <testsuite name="formatting_functions" timestamp="2024-10-17T14:46:17Z" hostname="226d6849429d" tests="58" skipped="0" failures="0" errors="0" time="0.769">
    <testcase time="0.0100000000000016" classname="formatting_functions" name="format_fraction_works_with_healthy_inputs"/>
    <testcase time="0.0189999999999984" classname="formatting_functions" name="format_fraction_works_with_healthy_inputs"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="format_fraction_works_with_0_numerator_input"/>
    <testcase time="0.0190000000000019" classname="formatting_functions" name="format_fraction_works_with_0_numerator_input"/>
    <testcase time="0.00400000000000134" classname="formatting_functions" name="format_fraction_fixed_dp_works_with_healthy_inputs"/>
    <testcase time="0.0189999999999984" classname="formatting_functions" name="format_fraction_fixed_dp_works_with_healthy_inputs"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="format_fraction_fixed_dp_works_with_whole_number_percentages"/>
    <testcase time="0.0289999999999999" classname="formatting_functions" name="format_fraction_fixed_dp_works_with_whole_number_percentages"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="format_fraction_fixed_dp_works_with_0_numerator_input"/>
    <testcase time="0.0199999999999996" classname="formatting_functions" name="format_fraction_fixed_dp_works_with_0_numerator_input"/>
    <testcase time="0.00500000000000256" classname="formatting_functions" name="format_count_fraction_works_with_healthy_inputs"/>
    <testcase time="0.0189999999999984" classname="formatting_functions" name="format_count_fraction_works_with_healthy_inputs"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="format_count_fraction_works_with_count_of_0"/>
    <testcase time="0.0200000000000031" classname="formatting_functions" name="format_count_fraction_works_with_count_of_0"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="format_count_fraction_works_with_NA_input"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="format_count_fraction_fixed_dp_works_with_healthy_inputs"/>
    <testcase time="0.0190000000000019" classname="formatting_functions" name="format_count_fraction_fixed_dp_works_with_healthy_inputs"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="format_count_fraction_fixed_dp_works_with_healthy_inputs"/>
    <testcase time="0.0189999999999984" classname="formatting_functions" name="format_count_fraction_fixed_dp_works_with_healthy_inputs"/>
    <testcase time="0.00500000000000256" classname="formatting_functions" name="format_count_fraction_fixed_dp_works_with_count_of_0"/>
    <testcase time="0.0279999999999987" classname="formatting_functions" name="format_count_fraction_fixed_dp_works_with_count_of_0"/>
    <testcase time="0.00600000000000023" classname="formatting_functions" name="format_count_fraction_lt10_works_with_healthy_inputs"/>
    <testcase time="0.0219999999999985" classname="formatting_functions" name="format_count_fraction_lt10_works_with_healthy_inputs"/>
    <testcase time="0.00400000000000134" classname="formatting_functions" name="format_count_fraction_lt10_works_with_count_less_than_10"/>
    <testcase time="0.0199999999999996" classname="formatting_functions" name="format_count_fraction_lt10_works_with_count_less_than_10"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="format_count_fraction_lt10_works_with_NA_input"/>
    <testcase time="0.00800000000000267" classname="formatting_functions" name="format_fraction_fails_with_bad_inputs"/>
    <testcase time="0.00399999999999778" classname="formatting_functions" name="format_fraction_fails_with_bad_inputs"/>
    <testcase time="0.00600000000000023" classname="formatting_functions" name="format_xx_works_with_easy_inputs"/>
    <testcase time="0.0190000000000019" classname="formatting_functions" name="format_xx_works_with_easy_inputs"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="format_sigfig_works_with_easy_inputs"/>
    <testcase time="0.0199999999999996" classname="formatting_functions" name="format_sigfig_works_with_easy_inputs"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="format_sigfig_works_with_different_format_types"/>
    <testcase time="0.0190000000000019" classname="formatting_functions" name="format_sigfig_works_with_different_format_types"/>
    <testcase time="0.00199999999999889" classname="formatting_functions" name="format_sigfig_works_with_different_format_types"/>
    <testcase time="0.0300000000000011" classname="formatting_functions" name="format_sigfig_works_with_different_format_types"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="format_fraction_threshold_works_with_easy_inputs"/>
    <testcase time="0.0199999999999996" classname="formatting_functions" name="format_fraction_threshold_works_with_easy_inputs"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="h_get_format_threshold_works_with_easy_inputs"/>
    <testcase time="0.0190000000000019" classname="formatting_functions" name="h_get_format_threshold_works_with_easy_inputs"/>
    <testcase time="0.00199999999999889" classname="formatting_functions" name="h_get_format_threshold_works_with_easy_inputs"/>
    <testcase time="0.0190000000000019" classname="formatting_functions" name="h_get_format_threshold_works_with_easy_inputs"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="h_format_threshold_works_with_easy_inputs"/>
    <testcase time="0.0189999999999984" classname="formatting_functions" name="h_format_threshold_works_with_easy_inputs"/>
    <testcase time="0.00500000000000256" classname="formatting_functions" name="format_extreme_values_works_with_easy_inputs"/>
    <testcase time="0.0199999999999996" classname="formatting_functions" name="format_extreme_values_works_with_easy_inputs"/>
    <testcase time="0.00399999999999778" classname="formatting_functions" name="format_extreme_values_ci_works_with_easy_inputs"/>
    <testcase time="0.0280000000000022" classname="formatting_functions" name="format_extreme_values_ci_works_with_easy_inputs"/>
    <testcase time="0.0069999999999979" classname="formatting_functions" name="format_extreme_values_ci_works_with_easy_inputs"/>
    <testcase time="0.00400000000000134" classname="formatting_functions" name="format_extreme_values_ci_works_with_easy_inputs"/>
    <testcase time="0.00300000000000011" classname="formatting_functions" name="format_extreme_values_ci_works_with_easy_inputs"/>
    <testcase time="0.00600000000000023" classname="formatting_functions" name="format_extreme_values_ci_works_with_easy_inputs"/>
    <testcase time="0.00400000000000134" classname="formatting_functions" name="format_extreme_values_ci_works_with_easy_inputs"/>
    <testcase time="0.0459999999999994" classname="formatting_functions" name="formats_with_nominator_to_denominator_are_always_formatted_as_1"/>
    <testcase time="0.00600000000000023" classname="formatting_functions" name="formats_with_nominator_to_denominator_are_always_formatted_as_1"/>
    <testcase time="0.00499999999999901" classname="formatting_functions" name="formats_with_nominator_to_denominator_are_always_formatted_as_1"/>
    <testcase time="0.0339999999999989" classname="formatting_functions" name="auto_formatting_works_with_NA_values"/>
    <testcase time="0.0579999999999998" classname="formatting_functions" name="auto_formatting_works_with_NA_values"/>
  </testsuite>
  <testsuite name="g_forest" timestamp="2024-10-17T14:46:18Z" hostname="226d6849429d" tests="21" skipped="3" failures="0" errors="0" time="3.42">
    <testcase time="0.98" classname="g_forest" name="g_forest_default_plot_works"/>
    <testcase time="0.00100000000000122" classname="g_forest" name="g_forest_default_plot_works">
      <skipped message="Reason: On CI ('test-g_forest.R:23:3')"/>
    </testcase>
    <testcase time="0.303000000000001" classname="g_forest" name="g_forest_works_with_custom_arguments"/>
    <testcase time="0.000999999999997669" classname="g_forest" name="g_forest_works_with_custom_arguments">
      <skipped message="Reason: On CI ('test-g_forest.R:58:3')"/>
    </testcase>
    <testcase time="0.587" classname="g_forest" name="g_forest_as_list_argument_works"/>
    <testcase time="0.00200000000000244" classname="g_forest" name="g_forest_as_list_argument_works">
      <skipped message="Reason: On CI ('test-g_forest.R:98:3')"/>
    </testcase>
    <testcase time="0.968" classname="g_forest" name="g_forest_argument_deprecation_warnings_work"/>
    <testcase time="0.00100000000000122" classname="g_forest" name="g_forest_argument_deprecation_warnings_work"/>
    <testcase time="0.00100000000000122" classname="g_forest" name="g_forest_argument_deprecation_warnings_work"/>
    <testcase time="0.000999999999997669" classname="g_forest" name="g_forest_argument_deprecation_warnings_work"/>
    <testcase time="0.00100000000000122" classname="g_forest" name="g_forest_argument_deprecation_warnings_work"/>
    <testcase time="0.457000000000001" classname="g_forest" name="forest_grob_works"/>
    <testcase time="0.000999999999997669" classname="g_forest" name="forest_grob_works"/>
    <testcase time="0.00100000000000477" classname="g_forest" name="forest_grob_works"/>
    <testcase time="0.000999999999997669" classname="g_forest" name="forest_grob_works"/>
    <testcase time="0.000999999999997669" classname="g_forest" name="forest_grob_works"/>
    <testcase time="0.00200000000000244" classname="g_forest" name="forest_grob_works"/>
    <testcase time="0.000999999999997669" classname="g_forest" name="forest_grob_works"/>
    <testcase time="0.106999999999999" classname="g_forest" name="forest_viewport_works"/>
    <testcase time="0.00200000000000244" classname="g_forest" name="forest_viewport_works"/>
    <testcase time="0.000999999999997669" classname="g_forest" name="forest_viewport_works"/>
  </testsuite>
  <testsuite name="g_km" timestamp="2024-10-17T14:46:21Z" hostname="226d6849429d" tests="27" skipped="9" failures="0" errors="0" time="3.389">
    <testcase time="0.370000000000005" classname="g_km" name="g_km_default_plot_works"/>
    <testcase time="0.000999999999997669" classname="g_km" name="g_km_default_plot_works">
      <skipped message="Reason: On CI ('test-g_km.R:17:3')"/>
    </testcase>
    <testcase time="0.375" classname="g_km" name="g_km_works_with_title_footnotes_and_annotation"/>
    <testcase time="0.00200000000000244" classname="g_km" name="g_km_works_with_title_footnotes_and_annotation">
      <skipped message="Reason: On CI ('test-g_km.R:30:3')"/>
    </testcase>
    <testcase time="0.392999999999994" classname="g_km" name="g_km_default_plot_witch_ci_ribbon_TRUE_works"/>
    <testcase time="0.00100000000000477" classname="g_km" name="g_km_default_plot_witch_ci_ribbon_TRUE_works">
      <skipped message="Reason: On CI ('test-g_km.R:42:3')"/>
    </testcase>
    <testcase time="0.234000000000002" classname="g_km" name="g_km_plot_with_in_group_labels_works"/>
    <testcase time="0.000999999999997669" classname="g_km" name="g_km_plot_with_in_group_labels_works">
      <skipped message="Reason: On CI ('test-g_km.R:64:3')"/>
    </testcase>
    <testcase time="0.0319999999999965" classname="g_km" name="g_km_ylim_parameter_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="g_km" name="g_km_ylim_parameter_works_as_expected">
      <skipped message="Reason: On CI ('test-g_km.R:79:3')"/>
    </testcase>
    <testcase time="0.341999999999999" classname="g_km" name="annot_at_risk_title_parameter_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="g_km" name="annot_at_risk_title_parameter_works_as_expected">
      <skipped message="Reason: On CI ('test-g_km.R:116:3')"/>
    </testcase>
    <testcase time="0.466999999999999" classname="g_km" name="ref_group_coxph_parameter_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="g_km" name="ref_group_coxph_parameter_works_as_expected">
      <skipped message="Reason: On CI ('test-g_km.R:130:3')"/>
    </testcase>
    <testcase time="0.378999999999998" classname="g_km" name="g_km_works_with_custom_arguments"/>
    <testcase time="0.00200000000000244" classname="g_km" name="g_km_works_with_custom_arguments">
      <skipped message="Reason: On CI ('test-g_km.R:149:3')"/>
    </testcase>
    <testcase time="0.268999999999998" classname="g_km" name="g_km_as_list_argument_works"/>
    <testcase time="0.000999999999997669" classname="g_km" name="g_km_as_list_argument_works">
      <skipped message="Reason: On CI ('test-g_km.R:164:3')"/>
    </testcase>
    <testcase time="0.508000000000003" classname="g_km" name="g_km_argument_deprecation_warnings_work"/>
    <testcase time="0.000999999999997669" classname="g_km" name="g_km_argument_deprecation_warnings_work"/>
    <testcase time="0.00200000000000244" classname="g_km" name="g_km_argument_deprecation_warnings_work"/>
    <testcase time="0.000999999999997669" classname="g_km" name="g_km_argument_deprecation_warnings_work"/>
    <testcase time="0.00100000000000477" classname="g_km" name="g_km_argument_deprecation_warnings_work"/>
    <testcase time="0.000999999999997669" classname="g_km" name="g_km_argument_deprecation_warnings_work"/>
    <testcase time="0.000999999999997669" classname="g_km" name="g_km_argument_deprecation_warnings_work"/>
    <testcase time="0.00100000000000477" classname="g_km" name="g_km_argument_deprecation_warnings_work"/>
    <testcase time="0.000999999999997669" classname="g_km" name="g_km_argument_deprecation_warnings_work"/>
  </testsuite>
  <testsuite name="g_lineplot" timestamp="2024-10-17T14:46:25Z" hostname="226d6849429d" tests="17" skipped="6" failures="0" errors="0" time="1.791">
    <testcase time="0.0529999999999973" classname="g_lineplot" name="g_lineplot_works_with_default_settings"/>
    <testcase time="0.00100000000000477" classname="g_lineplot" name="g_lineplot_works_with_default_settings">
      <skipped message="Reason: On CI ('test-g_lineplot.R:9:3')"/>
    </testcase>
    <testcase time="0.314999999999998" classname="g_lineplot" name="g_lineplot_works_with_custom_settings_and_statistics_table"/>
    <testcase time="0.000999999999997669" classname="g_lineplot" name="g_lineplot_works_with_custom_settings_and_statistics_table">
      <skipped message="Reason: On CI ('test-g_lineplot.R:30:3')"/>
    </testcase>
    <testcase time="0.306000000000004" classname="g_lineplot" name="g_lineplot_works_with_cohort_id_specified"/>
    <testcase time="0.000999999999997669" classname="g_lineplot" name="g_lineplot_works_with_cohort_id_specified">
      <skipped message="Reason: On CI ('test-g_lineplot.R:50:3')"/>
    </testcase>
    <testcase time="0.295000000000002" classname="g_lineplot" name="g_lineplot_maintains_factor_levels_in_legend"/>
    <testcase time="0.000999999999997669" classname="g_lineplot" name="g_lineplot_maintains_factor_levels_in_legend">
      <skipped message="Reason: On CI ('test-g_lineplot.R:69:3')"/>
    </testcase>
    <testcase time="0.0720000000000027" classname="g_lineplot" name="g_lineplot_does_not_produce_a_warning_if_group_var_has_6_levels"/>
    <testcase time="0.204999999999998" classname="g_lineplot" name="g_lineplot_works_with_facet_var_specified">
      <skipped message="Reason: On CI ('test-g_lineplot.R:99:3')"/>
    </testcase>
    <testcase time="0.0499999999999972" classname="g_lineplot" name="g_lineplot_xticks_xlim_and_ylim_arguments_work">
      <skipped message="Reason: On CI ('test-g_lineplot.R:112:3')"/>
    </testcase>
    <testcase time="0.0130000000000052" classname="g_lineplot" name="control_lineplot_vars_works"/>
    <testcase time="0.0759999999999934" classname="g_lineplot" name="g_lineplot_works_with_no_strata_group_var_and_allows_points_when_only_one_strata_is_provided"/>
    <testcase time="0.034000000000006" classname="g_lineplot" name="g_lineplot_works_with_no_strata_group_var_and_allows_points_when_only_one_strata_is_provided"/>
    <testcase time="0.0329999999999941" classname="g_lineplot" name="g_lineplot_works_with_no_strata_group_var_and_allows_points_when_only_one_strata_is_provided"/>
    <testcase time="0.0519999999999996" classname="g_lineplot" name="linetype_works_as_well_as_col_with_manual_scaling_and_other_options_errorbar_width_"/>
    <testcase time="0.283000000000001" classname="g_lineplot" name="NA_values_are_removed_also_from_the_table_plot"/>
  </testsuite>
  <testsuite name="g_step" timestamp="2024-10-17T14:46:26Z" hostname="226d6849429d" tests="22" skipped="2" failures="0" errors="0" time="0.305">
    <testcase time="0.0650000000000048" classname="g_step" name="g_step_works_with_default_settings"/>
    <testcase time="0.000999999999997669" classname="g_step" name="g_step_works_with_default_settings">
      <skipped message="Reason: On CI ('test-g_step.R:18:3')"/>
    </testcase>
    <testcase time="0.0379999999999967" classname="g_step" name="g_step_works_with_custom_settings"/>
    <testcase time="0.00100000000000477" classname="g_step" name="g_step_works_with_custom_settings">
      <skipped message="Reason: On CI ('test-g_step.R:28:3')"/>
    </testcase>
    <testcase time="0.0129999999999981" classname="g_step" name="tidy.step_works_as_expected_for_survival_STEP_results"/>
    <testcase time="0.00200000000000244" classname="g_step" name="tidy.step_works_as_expected_for_survival_STEP_results"/>
    <testcase time="0.019999999999996" classname="g_step" name="tidy.step_works_as_expected_for_survival_STEP_results"/>
    <testcase time="0.00100000000000477" classname="g_step" name="tidy.step_works_as_expected_for_survival_STEP_results"/>
    <testcase time="0.019999999999996" classname="g_step" name="tidy.step_works_as_expected_for_survival_STEP_results"/>
    <testcase time="0.00200000000000244" classname="g_step" name="tidy.step_works_as_expected_for_survival_STEP_results"/>
    <testcase time="0.00300000000000011" classname="g_step" name="tidy.step_works_as_expected_for_survival_STEP_results"/>
    <testcase time="0.0339999999999989" classname="g_step" name="tidy.step_works_as_expected_for_response_STEP_results"/>
    <testcase time="0.00300000000000011" classname="g_step" name="tidy.step_works_as_expected_for_response_STEP_results"/>
    <testcase time="0.0399999999999991" classname="g_step" name="tidy.step_works_as_expected_for_response_STEP_results"/>
    <testcase time="0.00200000000000244" classname="g_step" name="tidy.step_works_as_expected_for_response_STEP_results"/>
    <testcase time="0.027000000000001" classname="g_step" name="tidy.step_works_as_expected_for_response_STEP_results"/>
    <testcase time="0.00299999999999301" classname="g_step" name="tidy.step_works_as_expected_for_response_STEP_results"/>
    <testcase time="0.00300000000000011" classname="g_step" name="tidy.step_works_as_expected_for_response_STEP_results"/>
    <testcase time="0.00800000000000267" classname="g_step" name="tidy.step_gives_expected_warnings_when_there_are_NAs_in_y_variables"/>
    <testcase time="0.00500000000000256" classname="g_step" name="tidy.step_gives_expected_warnings_when_there_are_NAs_in_y_variables"/>
    <testcase time="0.00900000000000034" classname="g_step" name="tidy.step_gives_expected_warnings_when_there_are_very_large_values_in_y_variables"/>
    <testcase time="0.00499999999999545" classname="g_step" name="tidy.step_gives_expected_warnings_when_there_are_very_large_values_in_y_variables"/>
  </testsuite>
  <testsuite name="g_waterfall" timestamp="2024-10-17T14:46:27Z" hostname="226d6849429d" tests="4" skipped="2" failures="0" errors="0" time="0.038">
    <testcase time="0.0130000000000052" classname="g_waterfall" name="g_waterfall_default_plot_works"/>
    <testcase time="0.000999999999997669" classname="g_waterfall" name="g_waterfall_default_plot_works">
      <skipped message="Reason: On CI ('test-g_waterfall.R:7:3')"/>
    </testcase>
    <testcase time="0.0229999999999961" classname="g_waterfall" name="g_waterfall_plot_with_labels_and_colors_works"/>
    <testcase time="0.00100000000000477" classname="g_waterfall" name="g_waterfall_plot_with_labels_and_colors_works">
      <skipped message="Reason: On CI ('test-g_waterfall.R:29:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="h_adsl_adlb_merge_using_worst_flag" timestamp="2024-10-17T14:46:27Z" hostname="226d6849429d" tests="6" skipped="0" failures="0" errors="0" time="0.275">
    <testcase time="0.0279999999999987" classname="h_adsl_adlb_merge_using_worst_flag" name="h_adsl_adlb_merge_using_worst_flag_generates_missing_for_patients_without_any_lab"/>
    <testcase time="0.0429999999999993" classname="h_adsl_adlb_merge_using_worst_flag" name="h_adsl_adlb_merge_using_worst_flag_generates_missing_for_patients_without_any_lab"/>
    <testcase time="0.0489999999999995" classname="h_adsl_adlb_merge_using_worst_flag" name="h_adsl_adlb_merge_using_worst_flag_generates_missing_for_patients_missing_baseline_lab"/>
    <testcase time="0.0429999999999993" classname="h_adsl_adlb_merge_using_worst_flag" name="h_adsl_adlb_merge_using_worst_flag_generates_missing_for_patients_missing_post_baseline_lab"/>
    <testcase time="0.0530000000000044" classname="h_adsl_adlb_merge_using_worst_flag" name="h_adsl_adlb_merge_using_worst_flag_generates_missing_for_patients_without_any_worst_flagged_post_baseline_values"/>
    <testcase time="0.0589999999999975" classname="h_adsl_adlb_merge_using_worst_flag" name="h_adsl_adlb_merge_using_worst_flag_generates_missing_and_by_visit_lab_results"/>
  </testsuite>
  <testsuite name="h_format_row" timestamp="2024-10-17T14:46:27Z" hostname="226d6849429d" tests="4" skipped="0" failures="0" errors="0" time="0.05">
    <testcase time="0.00800000000000267" classname="h_format_row" name="h_format_row_returns_the_correct_dataframe"/>
    <testcase time="0.019999999999996" classname="h_format_row" name="h_format_row_returns_the_correct_dataframe"/>
    <testcase time="0.00200000000000244" classname="h_format_row" name="h_format_row_returns_the_correct_dataframe"/>
    <testcase time="0.019999999999996" classname="h_format_row" name="h_format_row_returns_the_correct_dataframe"/>
  </testsuite>
  <testsuite name="h_incidence_rate" timestamp="2024-10-17T14:46:27Z" hostname="226d6849429d" tests="10" skipped="0" failures="0" errors="0" time="0.138">
    <testcase time="0.00800000000000267" classname="h_incidence_rate" name="h_incidence_rate_normal_works_as_expected_with_healthy_input"/>
    <testcase time="0.0189999999999984" classname="h_incidence_rate" name="h_incidence_rate_normal_works_as_expected_with_healthy_input"/>
    <testcase time="0.0110000000000028" classname="h_incidence_rate" name="h_incidence_rate_normal_log_works_as_expected_with_healthy_input"/>
    <testcase time="0.027000000000001" classname="h_incidence_rate" name="h_incidence_rate_normal_log_works_as_expected_with_healthy_input"/>
    <testcase time="0.00499999999999545" classname="h_incidence_rate" name="h_incidence_rate_exact_works_as_expected_with_healthy_input"/>
    <testcase time="0.0190000000000055" classname="h_incidence_rate" name="h_incidence_rate_exact_works_as_expected_with_healthy_input"/>
    <testcase time="0.00499999999999545" classname="h_incidence_rate" name="h_incidence_rate_byar_works_as_expected_with_healthy_input"/>
    <testcase time="0.0189999999999984" classname="h_incidence_rate" name="h_incidence_rate_byar_works_as_expected_with_healthy_input"/>
    <testcase time="0.00500000000000256" classname="h_incidence_rate" name="h_incidence_rate_works_as_expected_with_healthy_input"/>
    <testcase time="0.0200000000000031" classname="h_incidence_rate" name="h_incidence_rate_works_as_expected_with_healthy_input"/>
  </testsuite>
  <testsuite name="h_km" timestamp="2024-10-17T14:46:27Z" hostname="226d6849429d" tests="40" skipped="0" failures="0" errors="0" time="0.763">
    <testcase time="0.0109999999999957" classname="h_km" name="control_surv_med_annot_works_with_default_settings"/>
    <testcase time="0.0200000000000031" classname="h_km" name="control_surv_med_annot_works_with_default_settings"/>
    <testcase time="0.00399999999999778" classname="h_km" name="control_coxph_annot_works_with_default_settings"/>
    <testcase time="0.0309999999999988" classname="h_km" name="control_coxph_annot_works_with_default_settings"/>
    <testcase time="0.0130000000000052" classname="h_km" name="h_xticks_works_with_default_settings"/>
    <testcase time="0.0209999999999937" classname="h_km" name="h_xticks_works_with_default_settings"/>
    <testcase time="0.00900000000000034" classname="h_km" name="h_xticks_works_with_xticks_number"/>
    <testcase time="0.0200000000000031" classname="h_km" name="h_xticks_works_with_xticks_number"/>
    <testcase time="0.00500000000000256" classname="h_km" name="h_xticks_works_with_xticks_numeric"/>
    <testcase time="0.019999999999996" classname="h_km" name="h_xticks_works_with_xticks_numeric"/>
    <testcase time="0.00800000000000267" classname="h_km" name="h_xticks_returns_error_when_xticks_non_numeric"/>
    <testcase time="0.00999999999999801" classname="h_km" name="h_xticks_works_with_max_time_only"/>
    <testcase time="0.0200000000000031" classname="h_km" name="h_xticks_works_with_max_time_only"/>
    <testcase time="0.00500000000000256" classname="h_km" name="h_xticks_works_with_xticks_numeric_when_max_time_is_not_NULL"/>
    <testcase time="0.0339999999999989" classname="h_km" name="h_xticks_works_with_xticks_numeric_when_max_time_is_not_NULL"/>
    <testcase time="0.0109999999999957" classname="h_km" name="h_xticks_works_with_xticks_number_when_max_time_is_not_NULL"/>
    <testcase time="0.0200000000000031" classname="h_km" name="h_xticks_works_with_xticks_number_when_max_time_is_not_NULL"/>
    <testcase time="0.00800000000000267" classname="h_km" name="h_tbl_median_surv_estimates_median_survival_time_with_CI"/>
    <testcase time="0.019999999999996" classname="h_km" name="h_tbl_median_surv_estimates_median_survival_time_with_CI"/>
    <testcase time="0.0200000000000031" classname="h_km" name="h_tbl_coxph_pairwise_estimates_HR_CI_and_pvalue"/>
    <testcase time="0.0210000000000008" classname="h_km" name="h_tbl_coxph_pairwise_estimates_HR_CI_and_pvalue"/>
    <testcase time="0.0169999999999959" classname="h_km" name="h_tbl_coxph_pairwise_estimates_HR_CI_and_pvalue"/>
    <testcase time="0.0330000000000013" classname="h_km" name="h_tbl_coxph_pairwise_estimates_HR_CI_and_pvalue"/>
    <testcase time="0.0110000000000028" classname="h_km" name="h_data_plot_works_as_expected"/>
    <testcase time="0.0209999999999937" classname="h_km" name="h_data_plot_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="h_km" name="h_data_plot_works_as_expected"/>
    <testcase time="0.0120000000000005" classname="h_km" name="h_data_plot_respects_the_ordering_of_the_arm_variable_factor_levels"/>
    <testcase time="0.0210000000000008" classname="h_km" name="h_data_plot_respects_the_ordering_of_the_arm_variable_factor_levels"/>
    <testcase time="0.000999999999997669" classname="h_km" name="h_data_plot_respects_the_ordering_of_the_arm_variable_factor_levels"/>
    <testcase time="0.00100000000000477" classname="h_km" name="h_data_plot_respects_the_ordering_of_the_arm_variable_factor_levels"/>
    <testcase time="0.00900000000000034" classname="h_km" name="h_data_plot_adds_rows_that_have_time_0_and_estimate_1"/>
    <testcase time="0.0219999999999985" classname="h_km" name="h_data_plot_adds_rows_that_have_time_0_and_estimate_1"/>
    <testcase time="0.00300000000000011" classname="h_km" name="h_data_plot_adds_rows_that_have_time_0_and_estimate_1"/>
    <testcase time="0.0409999999999968" classname="h_km" name="h_ggkm_h_decompose_gg_h_grob_y_annot_and_h_km_layout_return_deprecation_warnings"/>
    <testcase time="0.097999999999999" classname="h_km" name="h_ggkm_h_decompose_gg_h_grob_y_annot_and_h_km_layout_return_deprecation_warnings"/>
    <testcase time="0.0140000000000029" classname="h_km" name="h_ggkm_h_decompose_gg_h_grob_y_annot_and_h_km_layout_return_deprecation_warnings"/>
    <testcase time="0.0180000000000007" classname="h_km" name="h_ggkm_h_decompose_gg_h_grob_y_annot_and_h_km_layout_return_deprecation_warnings"/>
    <testcase time="0.0450000000000017" classname="h_km" name="h_grob_median_surv_return_deprecation_warning"/>
    <testcase time="0.0219999999999985" classname="h_km" name="h_grob_tbl_at_risk_return_deprecation_warning"/>
    <testcase time="0.0409999999999968" classname="h_km" name="h_grob_coxph_returns_error_when_only_one_arm"/>
  </testsuite>
  <testsuite name="h_logistic_regression" timestamp="2024-10-17T14:46:28Z" hostname="226d6849429d" tests="88" skipped="0" failures="0" errors="0" time="1.065">
    <testcase time="0.0230000000000032" classname="h_logistic_regression" name="h_get_interaction_vars_works_as_expected"/>
    <testcase time="0.027000000000001" classname="h_logistic_regression" name="h_get_interaction_vars_works_as_expected"/>
    <testcase time="0.0109999999999957" classname="h_logistic_regression" name="h_interaction_coef_name_works_as_expected"/>
    <testcase time="0.0249999999999986" classname="h_logistic_regression" name="h_interaction_coef_name_works_as_expected"/>
    <testcase time="0.00900000000000034" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.00199999999999534" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.0210000000000008" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.00199999999999534" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cat_interaction_works_as_expected"/>
    <testcase time="0.00800000000000267" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.00199999999999534" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.00100000000000477" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.00200000000000244" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.0200000000000031" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.00199999999999534" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.00100000000000477" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.0200000000000031" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.007000000000005" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.0279999999999987" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.00200000000000244" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.019999999999996" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.00200000000000244" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.0189999999999984" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_median_increment"/>
    <testcase time="0.00900000000000034" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_custom_increments"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_custom_increments"/>
    <testcase time="0.00100000000000477" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_custom_increments"/>
    <testcase time="0.00199999999999534" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_custom_increments"/>
    <testcase time="0.0200000000000031" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_custom_increments"/>
    <testcase time="0.000999999999997669" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_custom_increments"/>
    <testcase time="0.00200000000000244" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_custom_increments"/>
    <testcase time="0.0200000000000031" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_custom_increments"/>
    <testcase time="0.00499999999999545" classname="h_logistic_regression" name="h_or_cont_interaction_works_as_expected_with_custom_increments"/>
    <testcase time="0.0140000000000029" classname="h_logistic_regression" name="h_or_interaction_works_as_expected"/>
    <testcase time="0.0069999999999979" classname="h_logistic_regression" name="h_or_interaction_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="h_logistic_regression" name="h_simple_term_labels_works_correctly_with_factor_input"/>
    <testcase time="0.0240000000000009" classname="h_logistic_regression" name="h_simple_term_labels_works_correctly_with_factor_input"/>
    <testcase time="0.00600000000000023" classname="h_logistic_regression" name="h_interaction_term_labels_works_correctly_with_factor_input"/>
    <testcase time="0.0189999999999984" classname="h_logistic_regression" name="h_interaction_term_labels_works_correctly_with_factor_input"/>
    <testcase time="0.00500000000000256" classname="h_logistic_regression" name="h_interaction_term_labels_works_correctly_when_any_term_can_be_fulfilled"/>
    <testcase time="0.019999999999996" classname="h_logistic_regression" name="h_interaction_term_labels_works_correctly_when_any_term_can_be_fulfilled"/>
    <testcase time="0.0130000000000052" classname="h_logistic_regression" name="h_glm_simple_term_extract_works_for_factor_and_numeric_variables"/>
    <testcase time="0.0219999999999985" classname="h_logistic_regression" name="h_glm_simple_term_extract_works_for_factor_and_numeric_variables"/>
    <testcase time="0.00199999999999534" classname="h_logistic_regression" name="h_glm_simple_term_extract_works_for_factor_and_numeric_variables"/>
    <testcase time="0.0300000000000011" classname="h_logistic_regression" name="h_glm_simple_term_extract_works_for_factor_and_numeric_variables"/>
    <testcase time="0.0130000000000052" classname="h_logistic_regression" name="h_glm_simple_term_extract_can_extract_continuous_variable_results_from_clogit_objects"/>
    <testcase time="0.00300000000000011" classname="h_logistic_regression" name="h_glm_simple_term_extract_can_extract_continuous_variable_results_from_clogit_objects"/>
    <testcase time="0.019999999999996" classname="h_logistic_regression" name="h_glm_simple_term_extract_can_extract_continuous_variable_results_from_clogit_objects"/>
    <testcase time="0.0159999999999982" classname="h_logistic_regression" name="h_glm_interaction_extract_works_for_categorical_interaction"/>
    <testcase time="0.0330000000000013" classname="h_logistic_regression" name="h_glm_interaction_extract_works_for_categorical_interaction"/>
    <testcase time="0.0180000000000007" classname="h_logistic_regression" name="h_glm_interaction_extract_works_for_continuous_interaction"/>
    <testcase time="0.0320000000000036" classname="h_logistic_regression" name="h_glm_interaction_extract_works_for_continuous_interaction"/>
    <testcase time="0.0219999999999985" classname="h_logistic_regression" name="h_logistic_simple_terms_works"/>
    <testcase time="0.0450000000000017" classname="h_logistic_regression" name="h_logistic_simple_terms_works"/>
    <testcase time="0.0149999999999935" classname="h_logistic_regression" name="h_logistic_simple_terms_works"/>
    <testcase time="0.0320000000000036" classname="h_logistic_regression" name="h_logistic_simple_terms_works"/>
    <testcase time="0.0150000000000006" classname="h_logistic_regression" name="h_logistic_simple_terms_can_extract_continuous_variable_results_from_clogit_objects"/>
    <testcase time="0.00300000000000011" classname="h_logistic_regression" name="h_logistic_simple_terms_can_extract_continuous_variable_results_from_clogit_objects"/>
    <testcase time="0.0289999999999964" classname="h_logistic_regression" name="h_logistic_simple_terms_can_extract_continuous_variable_results_from_clogit_objects"/>
    <testcase time="0.0230000000000032" classname="h_logistic_regression" name="h_glm_inter_term_extract_works_as_expected_with_categorical_interaction"/>
    <testcase time="0.0349999999999966" classname="h_logistic_regression" name="h_glm_inter_term_extract_works_as_expected_with_categorical_interaction"/>
    <testcase time="0.0330000000000013" classname="h_logistic_regression" name="h_glm_inter_term_extract_works_as_expected_with_continuous_interaction"/>
    <testcase time="0.0129999999999981" classname="h_logistic_regression" name="h_glm_inter_term_extract_works_as_expected_with_continuous_interaction"/>
    <testcase time="0.0420000000000016" classname="h_logistic_regression" name="h_logistic_inter_terms_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="h_logistic_regression" name="h_logistic_inter_terms_works_as_expected"/>
    <testcase time="0.0210000000000008" classname="h_logistic_regression" name="h_logistic_inter_terms_works_as_expected"/>
    <testcase time="0.00199999999999534" classname="h_logistic_regression" name="h_logistic_inter_terms_works_as_expected"/>
    <testcase time="0.0190000000000055" classname="h_logistic_regression" name="h_logistic_inter_terms_works_as_expected"/>
    <testcase time="0.0249999999999986" classname="h_logistic_regression" name="h_logistic_inter_terms_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="h_logistic_regression" name="h_logistic_inter_terms_works_as_expected"/>
    <testcase time="0.019999999999996" classname="h_logistic_regression" name="h_logistic_inter_terms_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="h_logistic_regression" name="h_logistic_inter_terms_works_as_expected"/>
    <testcase time="0.0300000000000011" classname="h_logistic_regression" name="h_logistic_inter_terms_works_as_expected"/>
  </testsuite>
  <testsuite name="h_map_for_count_abnormal" timestamp="2024-10-17T14:46:29Z" hostname="226d6849429d" tests="14" skipped="0" failures="0" errors="0" time="0.241">
    <testcase time="0.019999999999996" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_default_method_with_healthy_single_input"/>
    <testcase time="0.0200000000000031" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_default_method_with_healthy_single_input"/>
    <testcase time="0.0120000000000005" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_range_method_with_healthy_single_input"/>
    <testcase time="0.019999999999996" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_range_method_with_healthy_single_input"/>
    <testcase time="0.00999999999999801" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_default_method_with_unused_LOW_LOW_HIGH_HIGH_input"/>
    <testcase time="0.0200000000000031" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_default_method_with_unused_LOW_LOW_HIGH_HIGH_input"/>
    <testcase time="0.0120000000000005" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_range_method_with_unused_LOW_LOW_HIGH_HIGH_input"/>
    <testcase time="0.0279999999999987" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_range_method_with_unused_LOW_LOW_HIGH_HIGH_input"/>
    <testcase time="0.0150000000000006" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_default_method_with_unused_LOW_LOW_HIGH_HIGH_input"/>
    <testcase time="0.0219999999999985" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_default_method_with_unused_LOW_LOW_HIGH_HIGH_input"/>
    <testcase time="0.0110000000000028" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_range_method_with_unused_LOW_LOW_HIGH_HIGH_input"/>
    <testcase time="0.019999999999996" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_range_method_with_unused_LOW_LOW_HIGH_HIGH_input"/>
    <testcase time="0.0110000000000028" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_range_method_with_unused_LOW_LOW_HIGH_HIGH_input"/>
    <testcase time="0.0200000000000031" classname="h_map_for_count_abnormal" name="h_map_for_count_abnormal_returns_the_correct_map_for_range_method_with_unused_LOW_LOW_HIGH_HIGH_input"/>
  </testsuite>
  <testsuite name="h_pkparam_sort" timestamp="2024-10-17T14:46:29Z" hostname="226d6849429d" tests="4" skipped="0" failures="0" errors="0" time="0.071">
    <testcase time="0.0109999999999957" classname="h_pkparam_sort" name="h_pkparam_sort_with_PARAMCD"/>
    <testcase time="0.0200000000000031" classname="h_pkparam_sort" name="h_pkparam_sort_with_PARAMCD"/>
    <testcase time="0.0139999999999958" classname="h_pkparam_sort" name="h_pkparam_sort_with_out_PARAMCD"/>
    <testcase time="0.0260000000000034" classname="h_pkparam_sort" name="h_pkparam_sort_with_out_PARAMCD"/>
  </testsuite>
  <testsuite name="h_response_biomarkers_subgroups" timestamp="2024-10-17T14:46:29Z" hostname="226d6849429d" tests="10" skipped="0" failures="0" errors="0" time="0.267">
    <testcase time="0.0110000000000028" classname="h_response_biomarkers_subgroups" name="h_rsp_to_logistic_variables_works_as_expected"/>
    <testcase time="0.019999999999996" classname="h_response_biomarkers_subgroups" name="h_rsp_to_logistic_variables_works_as_expected"/>
    <testcase time="0.0189999999999984" classname="h_response_biomarkers_subgroups" name="h_logistic_mult_cont_df_works_as_expected"/>
    <testcase time="0.0210000000000008" classname="h_response_biomarkers_subgroups" name="h_logistic_mult_cont_df_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="h_response_biomarkers_subgroups" name="h_logistic_mult_cont_df_returns_missing_values_if_data_is_empty_0_rows_"/>
    <testcase time="0.0300000000000011" classname="h_response_biomarkers_subgroups" name="h_logistic_mult_cont_df_returns_missing_values_if_data_is_empty_0_rows_"/>
    <testcase time="0.027000000000001" classname="h_response_biomarkers_subgroups" name="h_logistic_mult_cont_df_also_works_with_response_not_being_called_rsp"/>
    <testcase time="0.0279999999999987" classname="h_response_biomarkers_subgroups" name="h_logistic_mult_cont_df_also_works_with_response_not_being_called_rsp"/>
    <testcase time="0.0450000000000017" classname="h_response_biomarkers_subgroups" name="h_tab_rsp_one_biomarker_works_as_expected"/>
    <testcase time="0.0599999999999952" classname="h_response_biomarkers_subgroups" name="h_tab_rsp_one_biomarker_works_as_expected"/>
  </testsuite>
  <testsuite name="h_response_subgroups" timestamp="2024-10-17T14:46:30Z" hostname="226d6849429d" tests="29" skipped="0" failures="0" errors="0" time="0.625">
    <testcase time="0.0330000000000013" classname="h_response_subgroups" name="h_proportion_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0200000000000031" classname="h_response_subgroups" name="h_proportion_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.00600000000000023" classname="h_response_subgroups" name="h_proportion_df_functions_as_expected_when_0_responses_in_one_group"/>
    <testcase time="0.019999999999996" classname="h_response_subgroups" name="h_proportion_df_functions_as_expected_when_0_responses_in_one_group"/>
    <testcase time="0.007000000000005" classname="h_response_subgroups" name="h_proportion_df_fails_with_wrong_input"/>
    <testcase time="0.00600000000000023" classname="h_response_subgroups" name="h_proportion_df_functions_when_0_obs_in_one_arm"/>
    <testcase time="0.019999999999996" classname="h_response_subgroups" name="h_proportion_df_functions_when_0_obs_in_one_arm"/>
    <testcase time="0.0279999999999987" classname="h_response_subgroups" name="h_proportion_subgroups_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0280000000000058" classname="h_response_subgroups" name="h_proportion_subgroups_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.00600000000000023" classname="h_response_subgroups" name="h_proportion_subgroups_df_functions_as_expected_when_subgroups_is_NULL."/>
    <testcase time="0.019999999999996" classname="h_response_subgroups" name="h_proportion_subgroups_df_functions_as_expected_when_subgroups_is_NULL."/>
    <testcase time="0.0249999999999986" classname="h_response_subgroups" name="h_proportion_subgroups_df_works_as_expected_with_groups_lists"/>
    <testcase time="0.0210000000000008" classname="h_response_subgroups" name="h_proportion_subgroups_df_works_as_expected_with_groups_lists"/>
    <testcase time="0.00800000000000267" classname="h_response_subgroups" name="h_odds_ratio_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0349999999999966" classname="h_response_subgroups" name="h_odds_ratio_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0110000000000028" classname="h_response_subgroups" name="h_odds_ratio_df_functions_as_expected_with_valid_input_and_non_default_arguments"/>
    <testcase time="0.0279999999999987" classname="h_response_subgroups" name="h_odds_ratio_df_functions_as_expected_with_valid_input_and_non_default_arguments"/>
    <testcase time="0.0140000000000029" classname="h_response_subgroups" name="h_odds_ratio_df_functions_as_expected_with_strata"/>
    <testcase time="0.019999999999996" classname="h_response_subgroups" name="h_odds_ratio_df_functions_as_expected_with_strata"/>
    <testcase time="0.00600000000000023" classname="h_response_subgroups" name="h_odds_ratio_df_functions_when_0_obs_in_one_arm"/>
    <testcase time="0.0200000000000031" classname="h_response_subgroups" name="h_odds_ratio_df_functions_when_0_obs_in_one_arm"/>
    <testcase time="0.0309999999999988" classname="h_response_subgroups" name="h_odds_ratio_subgroups_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0300000000000011" classname="h_response_subgroups" name="h_odds_ratio_subgroups_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0109999999999957" classname="h_response_subgroups" name="h_odds_ratio_subgroups_df_functions_as_expected_when_subgroups_is_NULL."/>
    <testcase time="0.0240000000000009" classname="h_response_subgroups" name="h_odds_ratio_subgroups_df_functions_as_expected_when_subgroups_is_NULL."/>
    <testcase time="0.0510000000000019" classname="h_response_subgroups" name="h_odds_ratio_subgroups_df_functions_as_expected_with_strata"/>
    <testcase time="0.0219999999999985" classname="h_response_subgroups" name="h_odds_ratio_subgroups_df_functions_as_expected_with_strata"/>
    <testcase time="0.0500000000000043" classname="h_response_subgroups" name="h_odds_ratio_subgroups_df_works_as_expected_with_groups_lists"/>
    <testcase time="0.0239999999999938" classname="h_response_subgroups" name="h_odds_ratio_subgroups_df_works_as_expected_with_groups_lists"/>
  </testsuite>
  <testsuite name="h_stack_by_baskets" timestamp="2024-10-17T14:46:30Z" hostname="226d6849429d" tests="14" skipped="0" failures="0" errors="0" time="0.202">
    <testcase time="0.0230000000000032" classname="h_stack_by_baskets" name="h_stack_by_baskets_returns_the_correct_dataframe"/>
    <testcase time="0.0210000000000008" classname="h_stack_by_baskets" name="h_stack_by_baskets_returns_the_correct_dataframe"/>
    <testcase time="0.00800000000000267" classname="h_stack_by_baskets" name="h_stack_by_baskets_fails_when_selecting_Standardized_Customized_query_names_that_do_not_start_with_SMQ_or_CQ_"/>
    <testcase time="0.00799999999999557" classname="h_stack_by_baskets" name="h_stack_by_baskets_fails_when_selecting_Standardized_Customized_query_names_that_do_not_end_with_NAM_"/>
    <testcase time="0.0069999999999979" classname="h_stack_by_baskets" name="h_stack_by_baskets_returns_an_empty_dataframe_with_desired_variables_and_labels_when_there_are_no_adverse_events_falling_within_any_of_the_baskets_selected"/>
    <testcase time="0.0200000000000031" classname="h_stack_by_baskets" name="h_stack_by_baskets_returns_an_empty_dataframe_with_desired_variables_and_labels_when_there_are_no_adverse_events_falling_within_any_of_the_baskets_selected"/>
    <testcase time="0.00200000000000244" classname="h_stack_by_baskets" name="h_stack_by_baskets_returns_an_empty_dataframe_with_desired_variables_and_labels_when_there_are_no_adverse_events_falling_within_any_of_the_baskets_selected"/>
    <testcase time="0.0319999999999965" classname="h_stack_by_baskets" name="h_stack_by_baskets_returns_an_empty_dataframe_with_desired_variables_and_labels_when_there_are_no_adverse_events_falling_within_any_of_the_baskets_selected"/>
    <testcase time="0.00200000000000244" classname="h_stack_by_baskets" name="h_stack_by_baskets_returns_an_empty_dataframe_with_desired_variables_and_labels_when_there_are_no_adverse_events_falling_within_any_of_the_baskets_selected"/>
    <testcase time="0.0249999999999986" classname="h_stack_by_baskets" name="h_stack_by_baskets_returns_an_empty_dataframe_with_desired_variables_and_labels_when_there_are_no_adverse_events_falling_within_any_of_the_baskets_selected"/>
    <testcase time="0.00200000000000244" classname="h_stack_by_baskets" name="h_stack_by_baskets_returns_an_empty_dataframe_with_desired_variables_and_labels_when_there_are_no_adverse_events_falling_within_any_of_the_baskets_selected"/>
    <testcase time="0.019999999999996" classname="h_stack_by_baskets" name="h_stack_by_baskets_returns_an_empty_dataframe_with_desired_variables_and_labels_when_there_are_no_adverse_events_falling_within_any_of_the_baskets_selected"/>
    <testcase time="0.0100000000000051" classname="h_stack_by_baskets" name="The_levels_of_the_SMQ_column_does_also_include_the_options_from_aag_summary_not_observed_in_ADAE"/>
    <testcase time="0.0219999999999985" classname="h_stack_by_baskets" name="The_levels_of_the_SMQ_column_does_also_include_the_options_from_aag_summary_not_observed_in_ADAE"/>
  </testsuite>
  <testsuite name="h_step" timestamp="2024-10-17T14:46:30Z" hostname="226d6849429d" tests="82" skipped="0" failures="0" errors="0" time="0.965">
    <testcase time="0.0159999999999982" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.000999999999997669" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.00100000000000477" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.0219999999999985" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.00300000000000011" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.00199999999999534" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.0330000000000013" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.00399999999999778" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.00400000000000489" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.00199999999999534" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.0219999999999985" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.0210000000000008" classname="h_step" name="h_step_window_works_as_expected_for_percentiles"/>
    <testcase time="0.00500000000000256" classname="h_step" name="h_step_window_works_as_expected_for_actual_biomarker_values"/>
    <testcase time="0.00199999999999534" classname="h_step" name="h_step_window_works_as_expected_for_actual_biomarker_values"/>
    <testcase time="0.0200000000000031" classname="h_step" name="h_step_window_works_as_expected_for_actual_biomarker_values"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_window_works_as_expected_for_actual_biomarker_values"/>
    <testcase time="0.00199999999999534" classname="h_step" name="h_step_window_works_as_expected_for_actual_biomarker_values"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_window_works_as_expected_for_actual_biomarker_values"/>
    <testcase time="0.0210000000000008" classname="h_step" name="h_step_window_works_as_expected_for_actual_biomarker_values"/>
    <testcase time="0.00300000000000011" classname="h_step" name="h_step_window_works_as_expected_for_actual_biomarker_values"/>
    <testcase time="0.00600000000000023" classname="h_step" name="h_step_window_also_works_for_bandwidth_NULL_"/>
    <testcase time="0.00199999999999534" classname="h_step" name="h_step_window_also_works_for_bandwidth_NULL_"/>
    <testcase time="0.00300000000000011" classname="h_step" name="h_step_window_also_works_for_bandwidth_NULL_"/>
    <testcase time="0.00300000000000011" classname="h_step" name="h_step_window_also_works_for_bandwidth_NULL_"/>
    <testcase time="0.017000000000003" classname="h_step" name="h_step_trt_effect_works_for_Cox_models_without_interaction"/>
    <testcase time="0.0139999999999958" classname="h_step" name="h_step_trt_effect_works_for_Cox_models_with_interaction"/>
    <testcase time="0.007000000000005" classname="h_step" name="h_step_trt_effect_works_for_Cox_models_with_interaction"/>
    <testcase time="0.00199999999999534" classname="h_step" name="h_step_trt_effect_works_for_Cox_models_with_interaction"/>
    <testcase time="0.0220000000000056" classname="h_step" name="h_step_trt_effect_works_for_Cox_models_with_interaction"/>
    <testcase time="0.00999999999999801" classname="h_step" name="h_step_trt_effect_works_for_Cox_models_with_strata"/>
    <testcase time="0.00300000000000011" classname="h_step" name="h_step_trt_effect_works_for_Cox_models_with_strata"/>
    <testcase time="0.00900000000000034" classname="h_step" name="h_step_trt_effect_works_for_logistic_regression_models_without_interaction"/>
    <testcase time="0.0150000000000006" classname="h_step" name="h_step_trt_effect_works_for_logistic_regression_models_with_interaction"/>
    <testcase time="0.0069999999999979" classname="h_step" name="h_step_trt_effect_works_for_logistic_regression_models_with_interaction"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_trt_effect_works_for_logistic_regression_models_with_interaction"/>
    <testcase time="0.0309999999999988" classname="h_step" name="h_step_trt_effect_works_for_logistic_regression_models_with_interaction"/>
    <testcase time="0.0559999999999974" classname="h_step" name="h_step_trt_effect_works_for_conditional_logistic_regression_without_interaction"/>
    <testcase time="0.118000000000002" classname="h_step" name="h_step_trt_effect_works_for_conditional_logistic_regression_with_interaction"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_trt_effect_works_for_conditional_logistic_regression_with_interaction"/>
    <testcase time="0.029999999999994" classname="h_step" name="h_step_trt_effect_works_for_conditional_logistic_regression_with_interaction"/>
    <testcase time="0.0100000000000051" classname="h_step" name="h_step_survival_formula_works_correctly_without_covariates_or_strata"/>
    <testcase time="0.00399999999999778" classname="h_step" name="h_step_survival_formula_works_correctly_without_covariates_or_strata"/>
    <testcase time="0.00900000000000034" classname="h_step" name="h_step_survival_formula_works_correctly_with_covariates"/>
    <testcase time="0.0069999999999979" classname="h_step" name="h_step_survival_formula_works_correctly_with_strata"/>
    <testcase time="0.0120000000000005" classname="h_step" name="h_step_survival_est_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_survival_est_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_survival_est_works_as_expected"/>
    <testcase time="0.019999999999996" classname="h_step" name="h_step_survival_est_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_survival_est_works_as_expected"/>
    <testcase time="0.019999999999996" classname="h_step" name="h_step_survival_est_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_survival_est_works_as_expected"/>
    <testcase time="0.0200000000000031" classname="h_step" name="h_step_survival_est_works_as_expected"/>
    <testcase time="0.0149999999999935" classname="h_step" name="h_step_survival_est_gives_a_readable_warning_when_fitting_warnings_occur"/>
    <testcase time="0.0130000000000052" classname="h_step" name="h_step_rsp_formula_works_correctly_without_covariates"/>
    <testcase time="0.00399999999999778" classname="h_step" name="h_step_rsp_formula_works_correctly_without_covariates"/>
    <testcase time="0.00900000000000034" classname="h_step" name="h_step_rsp_formula_works_correctly_with_covariates"/>
    <testcase time="0.00900000000000034" classname="h_step" name="h_step_rsp_formula_works_correctly_with_different_response_definition"/>
    <testcase time="0.00900000000000034" classname="h_step" name="h_step_rsp_formula_works_correctly_with_strata"/>
    <testcase time="0.00399999999999778" classname="h_step" name="h_step_rsp_formula_works_correctly_with_strata"/>
    <testcase time="0.0110000000000028" classname="h_step" name="h_step_rsp_est_works_as_expected_without_strata"/>
    <testcase time="0.00300000000000011" classname="h_step" name="h_step_rsp_est_works_as_expected_without_strata"/>
    <testcase time="0.00199999999999534" classname="h_step" name="h_step_rsp_est_works_as_expected_without_strata"/>
    <testcase time="0.0200000000000031" classname="h_step" name="h_step_rsp_est_works_as_expected_without_strata"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_rsp_est_works_as_expected_without_strata"/>
    <testcase time="0.0189999999999984" classname="h_step" name="h_step_rsp_est_works_as_expected_without_strata"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_rsp_est_works_as_expected_without_strata"/>
    <testcase time="0.019999999999996" classname="h_step" name="h_step_rsp_est_works_as_expected_without_strata"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_rsp_est_works_as_expected_without_strata"/>
    <testcase time="0.0189999999999984" classname="h_step" name="h_step_rsp_est_works_as_expected_without_strata"/>
    <testcase time="0.0230000000000032" classname="h_step" name="h_step_rsp_est_works_as_expected_with_strata"/>
    <testcase time="0.00399999999999778" classname="h_step" name="h_step_rsp_est_works_as_expected_with_strata"/>
    <testcase time="0.00300000000000011" classname="h_step" name="h_step_rsp_est_works_as_expected_with_strata"/>
    <testcase time="0.0229999999999961" classname="h_step" name="h_step_rsp_est_works_as_expected_with_strata"/>
    <testcase time="0.00200000000000244" classname="h_step" name="h_step_rsp_est_works_as_expected_with_strata"/>
    <testcase time="0.0200000000000031" classname="h_step" name="h_step_rsp_est_works_as_expected_with_strata"/>
    <testcase time="0.00199999999999534" classname="h_step" name="h_step_rsp_est_works_as_expected_with_strata"/>
    <testcase time="0.0230000000000032" classname="h_step" name="h_step_rsp_est_works_as_expected_with_strata"/>
    <testcase time="0.00199999999999534" classname="h_step" name="h_step_rsp_est_works_as_expected_with_strata"/>
    <testcase time="0.0210000000000008" classname="h_step" name="h_step_rsp_est_works_as_expected_with_strata"/>
    <testcase time="0.0180000000000007" classname="h_step" name="h_step_rsp_est_gives_a_readable_warning_when_fitting_warnings_occur"/>
  </testsuite>
  <testsuite name="h_survival_biomarkers_subgroups" timestamp="2024-10-17T14:46:31Z" hostname="226d6849429d" tests="12" skipped="0" failures="0" errors="0" time="0.254">
    <testcase time="0.0200000000000031" classname="h_survival_biomarkers_subgroups" name="h_surv_to_coxreg_variables_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="h_survival_biomarkers_subgroups" name="h_surv_to_coxreg_variables_works_as_expected"/>
    <testcase time="0.0280000000000058" classname="h_survival_biomarkers_subgroups" name="h_surv_to_coxreg_variables_works_as_expected"/>
    <testcase time="0.0389999999999944" classname="h_survival_biomarkers_subgroups" name="h_coxreg_mult_cont_df_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="h_survival_biomarkers_subgroups" name="h_coxreg_mult_cont_df_works_as_expected"/>
    <testcase time="0.0219999999999985" classname="h_survival_biomarkers_subgroups" name="h_coxreg_mult_cont_df_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="h_survival_biomarkers_subgroups" name="h_coxreg_mult_cont_df_returns_missing_values_if_data_is_empty_0_rows_"/>
    <testcase time="0.000999999999997669" classname="h_survival_biomarkers_subgroups" name="h_coxreg_mult_cont_df_returns_missing_values_if_data_is_empty_0_rows_"/>
    <testcase time="0.0210000000000008" classname="h_survival_biomarkers_subgroups" name="h_coxreg_mult_cont_df_returns_missing_values_if_data_is_empty_0_rows_"/>
    <testcase time="0.0609999999999999" classname="h_survival_biomarkers_subgroups" name="h_tab_surv_one_biomarker_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="h_survival_biomarkers_subgroups" name="h_tab_surv_one_biomarker_works_as_expected"/>
    <testcase time="0.0529999999999973" classname="h_survival_biomarkers_subgroups" name="h_tab_surv_one_biomarker_works_as_expected"/>
  </testsuite>
  <testsuite name="h_survival_duration_subgroups" timestamp="2024-10-17T14:46:32Z" hostname="226d6849429d" tests="38" skipped="0" failures="0" errors="0" time="0.827">
    <testcase time="0.0210000000000008" classname="h_survival_duration_subgroups" name="h_survtime_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.019999999999996" classname="h_survival_duration_subgroups" name="h_survtime_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0180000000000007" classname="h_survival_duration_subgroups" name="h_survtime_df_functions_as_expected_when_median_is_NA"/>
    <testcase time="0.027000000000001" classname="h_survival_duration_subgroups" name="h_survtime_df_functions_as_expected_when_median_is_NA"/>
    <testcase time="0.00800000000000267" classname="h_survival_duration_subgroups" name="h_survtime_df_functions_as_expected_when_0_records_in_one_group"/>
    <testcase time="0.019999999999996" classname="h_survival_duration_subgroups" name="h_survtime_df_functions_as_expected_when_0_records_in_one_group"/>
    <testcase time="0.00800000000000267" classname="h_survival_duration_subgroups" name="h_survtime_df_fails_with_wrong_input"/>
    <testcase time="0.0069999999999979" classname="h_survival_duration_subgroups" name="h_split_by_subgroups_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0219999999999985" classname="h_survival_duration_subgroups" name="h_split_by_subgroups_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.007000000000005" classname="h_survival_duration_subgroups" name="h_split_by_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.0189999999999984" classname="h_survival_duration_subgroups" name="h_split_by_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.00100000000000477" classname="h_survival_duration_subgroups" name="h_split_by_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.0339999999999989" classname="h_survival_duration_subgroups" name="h_split_by_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.0519999999999996" classname="h_survival_duration_subgroups" name="h_survtime_subgroups_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0219999999999985" classname="h_survival_duration_subgroups" name="h_survtime_subgroups_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0110000000000028" classname="h_survival_duration_subgroups" name="h_survtime_subgroups_df_functions_as_expected_when_subgroups_is_NULL."/>
    <testcase time="0.0210000000000008" classname="h_survival_duration_subgroups" name="h_survtime_subgroups_df_functions_as_expected_when_subgroups_is_NULL."/>
    <testcase time="0.0649999999999977" classname="h_survival_duration_subgroups" name="h_survtime_subgroups_df_works_as_expected_with_groups_lists"/>
    <testcase time="0.0210000000000008" classname="h_survival_duration_subgroups" name="h_survtime_subgroups_df_works_as_expected_with_groups_lists"/>
    <testcase time="0.00999999999999801" classname="h_survival_duration_subgroups" name="h_coxph_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0210000000000008" classname="h_survival_duration_subgroups" name="h_coxph_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0110000000000028" classname="h_survival_duration_subgroups" name="h_coxph_df_functions_as_expected_with_one_stratification_factor"/>
    <testcase time="0.0209999999999937" classname="h_survival_duration_subgroups" name="h_coxph_df_functions_as_expected_with_one_stratification_factor"/>
    <testcase time="0.0210000000000008" classname="h_survival_duration_subgroups" name="h_coxph_df_functions_as_expected_with_multiple_stratification_factors"/>
    <testcase time="0.0279999999999987" classname="h_survival_duration_subgroups" name="h_coxph_df_functions_as_expected_with_multiple_stratification_factors"/>
    <testcase time="0.007000000000005" classname="h_survival_duration_subgroups" name="h_coxph_df_functions_as_expected_when_0_records_in_one_group"/>
    <testcase time="0.0210000000000008" classname="h_survival_duration_subgroups" name="h_coxph_df_functions_as_expected_when_0_records_in_one_group"/>
    <testcase time="0.0429999999999993" classname="h_survival_duration_subgroups" name="h_coxph_subgroups_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0210000000000008" classname="h_survival_duration_subgroups" name="h_coxph_subgroups_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0329999999999941" classname="h_survival_duration_subgroups" name="h_coxph_subgroups_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.00200000000000244" classname="h_survival_duration_subgroups" name="h_coxph_subgroups_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0230000000000032" classname="h_survival_duration_subgroups" name="h_coxph_subgroups_df_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0300000000000011" classname="h_survival_duration_subgroups" name="h_coxph_subgroups_df_functions_as_expected_with_stratification_factors"/>
    <testcase time="0.0209999999999937" classname="h_survival_duration_subgroups" name="h_coxph_subgroups_df_functions_as_expected_with_stratification_factors"/>
    <testcase time="0.0100000000000051" classname="h_survival_duration_subgroups" name="h_coxph_subgroups_df_functions_as_expected_when_subgroups_is_NULL."/>
    <testcase time="0.0210000000000008" classname="h_survival_duration_subgroups" name="h_coxph_subgroups_df_functions_as_expected_when_subgroups_is_NULL."/>
    <testcase time="0.0589999999999975" classname="h_survival_duration_subgroups" name="h_coxph_subgroups_df_works_as_expected_with_groups_lists"/>
    <testcase time="0.019999999999996" classname="h_survival_duration_subgroups" name="h_coxph_subgroups_df_works_as_expected_with_groups_lists"/>
  </testsuite>
  <testsuite name="imputation_rule" timestamp="2024-10-17T14:46:32Z" hostname="226d6849429d" tests="8" skipped="0" failures="0" errors="0" time="0.196">
    <testcase time="0.0290000000000035" classname="imputation_rule" name="imputation_rule_works_correctly_for_1_3_imputation_rule"/>
    <testcase time="0.0210000000000008" classname="imputation_rule" name="imputation_rule_works_correctly_for_1_3_imputation_rule"/>
    <testcase time="0.0279999999999987" classname="imputation_rule" name="imputation_rule_works_correctly_for_1_3_imputation_rule"/>
    <testcase time="0.0300000000000011" classname="imputation_rule" name="imputation_rule_works_correctly_for_1_3_imputation_rule"/>
    <testcase time="0.0249999999999986" classname="imputation_rule" name="imputation_rule_works_correctly_for_1_2_imputation_rule"/>
    <testcase time="0.0210000000000008" classname="imputation_rule" name="imputation_rule_works_correctly_for_1_2_imputation_rule"/>
    <testcase time="0.0210000000000008" classname="imputation_rule" name="imputation_rule_works_correctly_for_1_2_imputation_rule"/>
    <testcase time="0.0210000000000008" classname="imputation_rule" name="imputation_rule_works_correctly_for_1_2_imputation_rule"/>
  </testsuite>
  <testsuite name="incidence_rate" timestamp="2024-10-17T14:46:33Z" hostname="226d6849429d" tests="20" skipped="0" failures="0" errors="0" time="0.675">
    <testcase time="0.00999999999999801" classname="incidence_rate" name="control_incidence_rate_works_with_customized_parameters"/>
    <testcase time="0.0330000000000013" classname="incidence_rate" name="control_incidence_rate_works_with_customized_parameters"/>
    <testcase time="0.0109999999999957" classname="incidence_rate" name="control_incidence_rate_fails_with_wrong_input"/>
    <testcase time="0.00400000000000489" classname="incidence_rate" name="control_incidence_rate_fails_with_wrong_input"/>
    <testcase time="0.00399999999999778" classname="incidence_rate" name="control_incidence_rate_fails_with_wrong_input"/>
    <testcase time="0.00500000000000256" classname="incidence_rate" name="control_incidence_rate_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="incidence_rate" name="s_incidence_rate_works_as_expected_with_healthy_input"/>
    <testcase time="0.0200000000000031" classname="incidence_rate" name="s_incidence_rate_works_as_expected_with_healthy_input"/>
    <testcase time="0.00600000000000023" classname="incidence_rate" name="a_incidence_rate_works_with_default_arguments"/>
    <testcase time="0.0219999999999985" classname="incidence_rate" name="a_incidence_rate_works_with_default_arguments"/>
    <testcase time="0.00500000000000256" classname="incidence_rate" name="a_incidence_rate_works_with_customized_arguments"/>
    <testcase time="0.0210000000000008" classname="incidence_rate" name="a_incidence_rate_works_with_customized_arguments"/>
    <testcase time="0.0589999999999975" classname="incidence_rate" name="estimate_incidence_rate_works_as_expected_with_default_input"/>
    <testcase time="0.0529999999999973" classname="incidence_rate" name="estimate_incidence_rate_works_as_expected_with_default_input"/>
    <testcase time="0.0489999999999995" classname="incidence_rate" name="estimate_incidence_rate_works_as_expected_with_custom_input"/>
    <testcase time="0.0510000000000019" classname="incidence_rate" name="estimate_incidence_rate_works_as_expected_with_custom_input"/>
    <testcase time="0.0840000000000032" classname="incidence_rate" name="estimate_incidence_rate_works_with_default_arguments_with_summarize_TRUE"/>
    <testcase time="0.0700000000000003" classname="incidence_rate" name="estimate_incidence_rate_works_with_default_arguments_with_summarize_TRUE"/>
    <testcase time="0.0949999999999989" classname="incidence_rate" name="estimate_incidence_rate_works_with_custom_arguments_with_summarize_TRUE"/>
    <testcase time="0.0679999999999978" classname="incidence_rate" name="estimate_incidence_rate_works_with_custom_arguments_with_summarize_TRUE"/>
  </testsuite>
  <testsuite name="individual_patient_plot" timestamp="2024-10-17T14:46:33Z" hostname="226d6849429d" tests="7" skipped="0" failures="0" errors="0" time="0.153">
    <testcase time="0.0300000000000011" classname="individual_patient_plot" name="h_g_ipp_works_correctly"/>
    <testcase time="0.017000000000003" classname="individual_patient_plot" name="h_g_ipp_works_with_default_color_palette"/>
    <testcase time="0.00900000000000034" classname="individual_patient_plot" name="g_ipp_default_plot_works_with_plotting_choices_all_in_one"/>
    <testcase time="0.019999999999996" classname="individual_patient_plot" name="g_ipp_default_plot_works_with_plotting_choices_split_by_max_obs"/>
    <testcase time="0.00300000000000011" classname="individual_patient_plot" name="g_ipp_default_plot_works_with_plotting_choices_split_by_max_obs"/>
    <testcase time="0.0690000000000026" classname="individual_patient_plot" name="g_ipp_default_plot_works_with_plotting_choices_separate_by_obs"/>
    <testcase time="0.00499999999999545" classname="individual_patient_plot" name="g_ipp_default_plot_works_with_plotting_choices_separate_by_obs"/>
  </testsuite>
  <testsuite name="logistic_regression" timestamp="2024-10-17T14:46:33Z" hostname="226d6849429d" tests="28" skipped="0" failures="0" errors="0" time="2.231">
    <testcase time="0.0300000000000011" classname="logistic_regression" name="fit_logistic_works_with_default_paramters"/>
    <testcase time="0.007000000000005" classname="logistic_regression" name="fit_logistic_works_with_default_paramters"/>
    <testcase time="0.00299999999999301" classname="logistic_regression" name="fit_logistic_works_with_default_paramters"/>
    <testcase time="0.0120000000000005" classname="logistic_regression" name="fit_logistic_works_with_covariates_and_interaction"/>
    <testcase time="0.0140000000000029" classname="logistic_regression" name="fit_logistic_works_with_covariates_and_interaction"/>
    <testcase time="0.00399999999999778" classname="logistic_regression" name="fit_logistic_works_with_covariates_and_interaction"/>
    <testcase time="0.0110000000000028" classname="logistic_regression" name="fit_logistic_works_with_different_response_definition"/>
    <testcase time="0.0120000000000005" classname="logistic_regression" name="fit_logistic_works_with_a_single_stratification_variable"/>
    <testcase time="0.00200000000000244" classname="logistic_regression" name="fit_logistic_works_with_a_single_stratification_variable"/>
    <testcase time="0.00399999999999778" classname="logistic_regression" name="fit_logistic_works_with_a_single_stratification_variable"/>
    <testcase time="0.0129999999999981" classname="logistic_regression" name="fit_logistic_works_with_two_stratification_variables"/>
    <testcase time="0.00200000000000244" classname="logistic_regression" name="fit_logistic_works_with_two_stratification_variables"/>
    <testcase time="0.00399999999999778" classname="logistic_regression" name="fit_logistic_works_with_two_stratification_variables"/>
    <testcase time="0.0240000000000009" classname="logistic_regression" name="tidy.glm_works_as_expected_for_simple_case"/>
    <testcase time="0.0330000000000013" classname="logistic_regression" name="tidy.glm_works_as_expected_for_simple_case"/>
    <testcase time="0.044000000000004" classname="logistic_regression" name="tidy.glm_works_as_expected_for_interaction_case"/>
    <testcase time="0.0229999999999961" classname="logistic_regression" name="tidy.glm_works_as_expected_for_interaction_case"/>
    <testcase time="0.000999999999997669" classname="logistic_regression" name="tidy.glm_works_as_expected_for_interaction_case"/>
    <testcase time="0.0480000000000018" classname="logistic_regression" name="logistic_regression_cols_works_as_expected"/>
    <testcase time="0.0799999999999983" classname="logistic_regression" name="logistic_regression_cols_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="logistic_regression" name="logistic_summary_by_flag_works"/>
    <testcase time="0.00500000000000256" classname="logistic_regression" name="logistic_summary_by_flag_works"/>
    <testcase time="0.553999999999995" classname="logistic_regression" name="summarize_logistic_works_as_expected_for_interaction_model_with_continuous_variable"/>
    <testcase time="0.177" classname="logistic_regression" name="summarize_logistic_works_as_expected_for_interaction_model_with_continuous_variable"/>
    <testcase time="0.607000000000006" classname="logistic_regression" name="summarize_logistic_works_as_expected_for_interaction_model_with_categorical_variable"/>
    <testcase time="0.192999999999998" classname="logistic_regression" name="summarize_logistic_works_as_expected_for_interaction_model_with_categorical_variable"/>
    <testcase time="0.213999999999999" classname="logistic_regression" name="summarize_logistic_works_as_expected_for_simple_model_without_interactions"/>
    <testcase time="0.104999999999997" classname="logistic_regression" name="summarize_logistic_works_as_expected_for_simple_model_without_interactions"/>
  </testsuite>
  <testsuite name="make_afun" timestamp="2024-10-17T14:46:36Z" hostname="226d6849429d" tests="34" skipped="0" failures="0" errors="0" time="0.49">
    <testcase time="0.0120000000000005" classname="make_afun" name="make_afun_works_with_healthy_input_statistics_function_taking_df_"/>
    <testcase time="0.00100000000000477" classname="make_afun" name="make_afun_works_with_healthy_input_statistics_function_taking_df_"/>
    <testcase time="0.00399999999999778" classname="make_afun" name="make_afun_works_with_healthy_input_statistics_function_taking_df_"/>
    <testcase time="0.00300000000000011" classname="make_afun" name="make_afun_works_with_healthy_input_statistics_function_taking_df_"/>
    <testcase time="0.0249999999999986" classname="make_afun" name="make_afun_works_with_healthy_input_statistics_function_taking_df_"/>
    <testcase time="0.00200000000000244" classname="make_afun" name="make_afun_works_with_healthy_input_statistics_function_taking_df_"/>
    <testcase time="0.019999999999996" classname="make_afun" name="make_afun_works_with_healthy_input_statistics_function_taking_df_"/>
    <testcase time="0.00500000000000256" classname="make_afun" name="make_afun_processes_additional_rtables_arguments_correctly"/>
    <testcase time="0.000999999999997669" classname="make_afun" name="make_afun_processes_additional_rtables_arguments_correctly"/>
    <testcase time="0.00300000000000011" classname="make_afun" name="make_afun_processes_additional_rtables_arguments_correctly"/>
    <testcase time="0.00300000000000011" classname="make_afun" name="make_afun_processes_additional_rtables_arguments_correctly"/>
    <testcase time="0.0210000000000008" classname="make_afun" name="make_afun_processes_additional_rtables_arguments_correctly"/>
    <testcase time="0.00500000000000256" classname="make_afun" name="make_afun_works_with_healthy_input_function_taking_x_"/>
    <testcase time="0.000999999999997669" classname="make_afun" name="make_afun_works_with_healthy_input_function_taking_x_"/>
    <testcase time="0.00300000000000011" classname="make_afun" name="make_afun_works_with_healthy_input_function_taking_x_"/>
    <testcase time="0.00200000000000244" classname="make_afun" name="make_afun_works_with_healthy_input_function_taking_x_"/>
    <testcase time="0.0289999999999964" classname="make_afun" name="make_afun_works_with_healthy_input_function_taking_x_"/>
    <testcase time="0.00400000000000489" classname="make_afun" name="make_afun_works_with_healthy_input_function_taking_x_"/>
    <testcase time="0.0319999999999965" classname="make_afun" name="make_afun_works_with_healthy_input_function_taking_x_"/>
    <testcase time="0.0069999999999979" classname="make_afun" name="make_afun_produces_empty_cells_and_keeps_labels_when_applied_to_empty_character"/>
    <testcase time="0.00100000000000477" classname="make_afun" name="make_afun_produces_empty_cells_and_keeps_labels_when_applied_to_empty_character"/>
    <testcase time="0.00300000000000011" classname="make_afun" name="make_afun_produces_empty_cells_and_keeps_labels_when_applied_to_empty_character"/>
    <testcase time="0.00199999999999534" classname="make_afun" name="make_afun_produces_empty_cells_and_keeps_labels_when_applied_to_empty_character"/>
    <testcase time="0.0210000000000008" classname="make_afun" name="make_afun_produces_empty_cells_and_keeps_labels_when_applied_to_empty_character"/>
    <testcase time="0.00200000000000244" classname="make_afun" name="make_afun_produces_empty_cells_and_keeps_labels_when_applied_to_empty_character"/>
    <testcase time="0.0210000000000008" classname="make_afun" name="make_afun_produces_empty_cells_and_keeps_labels_when_applied_to_empty_character"/>
    <testcase time="0.0319999999999965" classname="make_afun" name="make_afun_produces_empty_cells_and_keeps_labels_when_applied_to_empty_character"/>
    <testcase time="0.0670000000000002" classname="make_afun" name="make_afun_produces_empty_cells_and_keeps_labels_when_applied_to_empty_character"/>
    <testcase time="0.0370000000000061" classname="make_afun" name="make_afun_by_default_removes_results_from_.in_ref_col_"/>
    <testcase time="0.0569999999999951" classname="make_afun" name="make_afun_by_default_removes_results_from_.in_ref_col_"/>
    <testcase time="0.00800000000000267" classname="make_afun" name="make_afun_works_with_nested_lists"/>
    <testcase time="0.0289999999999964" classname="make_afun" name="make_afun_works_with_nested_lists"/>
    <testcase time="0.00600000000000023" classname="make_afun" name="make_afun_can_subset_on_non_nested_results_when_unnesting_took_place"/>
    <testcase time="0.0210000000000008" classname="make_afun" name="make_afun_can_subset_on_non_nested_results_when_unnesting_took_place"/>
  </testsuite>
  <testsuite name="odds_ratio" timestamp="2024-10-17T14:46:36Z" hostname="226d6849429d" tests="21" skipped="0" failures="0" errors="0" time="0.691">
    <testcase time="0.0120000000000005" classname="odds_ratio" name="or_glm_estimates_right_OR_and_CI"/>
    <testcase time="0.0189999999999984" classname="odds_ratio" name="or_glm_estimates_right_OR_and_CI"/>
    <testcase time="0.00199999999999534" classname="odds_ratio" name="or_glm_estimates_right_OR_and_CI"/>
    <testcase time="0.0200000000000031" classname="odds_ratio" name="or_glm_estimates_right_OR_and_CI"/>
    <testcase time="0.00900000000000034" classname="odds_ratio" name="or_clogit_estimates_right_OR_and_CI"/>
    <testcase time="0.0309999999999988" classname="odds_ratio" name="or_clogit_estimates_right_OR_and_CI"/>
    <testcase time="0.00999999999999801" classname="odds_ratio" name="s_odds_ratio_estimates_right_OR_and_CI_unstratified_analysis_"/>
    <testcase time="0.0250000000000057" classname="odds_ratio" name="s_odds_ratio_estimates_right_OR_and_CI_unstratified_analysis_"/>
    <testcase time="0.00999999999999801" classname="odds_ratio" name="s_odds_ratio_estimates_right_OR_and_CI_stratified_analysis_"/>
    <testcase time="0.019999999999996" classname="odds_ratio" name="s_odds_ratio_estimates_right_OR_and_CI_stratified_analysis_"/>
    <testcase time="0.0140000000000029" classname="odds_ratio" name="s_odds_ratio_returns_error_for_incorrect_groups"/>
    <testcase time="0.0850000000000009" classname="odds_ratio" name="estimate_odds_ratio_estimates_right_OR_and_CI_unstratified_analysis_"/>
    <testcase time="0.0499999999999972" classname="odds_ratio" name="estimate_odds_ratio_estimates_right_OR_and_CI_unstratified_analysis_"/>
    <testcase time="0.0399999999999991" classname="odds_ratio" name="estimate_odds_ratio_estimates_right_OR_and_CI_stratified_analysis_"/>
    <testcase time="0.0660000000000025" classname="odds_ratio" name="estimate_odds_ratio_estimates_right_OR_and_CI_stratified_analysis_"/>
    <testcase time="0.0439999999999969" classname="odds_ratio" name="estimate_odds_ratio_works_with_strata_and_combined_groups"/>
    <testcase time="0.0519999999999996" classname="odds_ratio" name="estimate_odds_ratio_works_with_strata_and_combined_groups"/>
    <testcase time="0.0190000000000055" classname="odds_ratio" name="s_odds_ratio_method_argument_works"/>
    <testcase time="0.0749999999999957" classname="odds_ratio" name="s_odds_ratio_method_argument_works"/>
    <testcase time="0.044000000000004" classname="odds_ratio" name="estimate_odds_ratio_method_argument_works"/>
    <testcase time="0.0439999999999969" classname="odds_ratio" name="estimate_odds_ratio_method_argument_works"/>
  </testsuite>
  <testsuite name="prop_diff" timestamp="2024-10-17T14:46:37Z" hostname="226d6849429d" tests="43" skipped="0" failures="0" errors="0" time="0.769">
    <testcase time="0.0110000000000028" classname="prop_diff" name="_prop_diff_ha_proportion_difference_by_Anderson_Hauck_"/>
    <testcase time="0.0319999999999965" classname="prop_diff" name="_prop_diff_ha_proportion_difference_by_Anderson_Hauck_"/>
    <testcase time="0.00300000000000011" classname="prop_diff" name="_prop_diff_ha_proportion_difference_by_Anderson_Hauck_"/>
    <testcase time="0.0260000000000034" classname="prop_diff" name="_prop_diff_ha_proportion_difference_by_Anderson_Hauck_"/>
    <testcase time="0.00600000000000023" classname="prop_diff" name="_prop_diff_nc_proportion_difference_by_Newcombe_"/>
    <testcase time="0.0189999999999984" classname="prop_diff" name="_prop_diff_nc_proportion_difference_by_Newcombe_"/>
    <testcase time="0.00300000000000011" classname="prop_diff" name="_prop_diff_nc_proportion_difference_by_Newcombe_"/>
    <testcase time="0.0200000000000031" classname="prop_diff" name="_prop_diff_nc_proportion_difference_by_Newcombe_"/>
    <testcase time="0.00499999999999545" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_with_correction_"/>
    <testcase time="0.0200000000000031" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_with_correction_"/>
    <testcase time="0.00199999999999534" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_with_correction_"/>
    <testcase time="0.0290000000000035" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_with_correction_"/>
    <testcase time="0.00300000000000011" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_with_correction_"/>
    <testcase time="0.0279999999999987" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_with_correction_"/>
    <testcase time="0.00500000000000256" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_without_correction_"/>
    <testcase time="0.019999999999996" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_without_correction_"/>
    <testcase time="0.00200000000000244" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_without_correction_"/>
    <testcase time="0.019999999999996" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_without_correction_"/>
    <testcase time="0.00200000000000244" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_without_correction_"/>
    <testcase time="0.0189999999999984" classname="prop_diff" name="_prop_diff_wald_proportion_difference_by_Wald_s_test_without_correction_"/>
    <testcase time="0.00600000000000023" classname="prop_diff" name="_prop_diff_cmh_proportion_difference_by_CMH_"/>
    <testcase time="0.0280000000000058" classname="prop_diff" name="_prop_diff_cmh_proportion_difference_by_CMH_"/>
    <testcase time="0.0069999999999979" classname="prop_diff" name="_prop_diff_cmh_proportion_difference_by_CMH_"/>
    <testcase time="0.0069999999999979" classname="prop_diff" name="prop_diff_cmh_works_correctly_when_some_strata_don_t_have_both_groups"/>
    <testcase time="0.00399999999999778" classname="prop_diff" name="prop_diff_cmh_works_correctly_when_some_strata_don_t_have_both_groups"/>
    <testcase time="0.00300000000000011" classname="prop_diff" name="prop_diff_cmh_works_correctly_when_some_strata_don_t_have_both_groups"/>
    <testcase time="0.00200000000000244" classname="prop_diff" name="prop_diff_cmh_works_correctly_when_some_strata_don_t_have_both_groups"/>
    <testcase time="0.0249999999999986" classname="prop_diff" name="prop_diff_cmh_works_correctly_when_some_strata_don_t_have_both_groups"/>
    <testcase time="0.0110000000000028" classname="prop_diff" name="_prop_strat_nc_proportion_difference_by_stratified_Newcombe_with_cmh_weights"/>
    <testcase time="0.00300000000000011" classname="prop_diff" name="_prop_strat_nc_proportion_difference_by_stratified_Newcombe_with_cmh_weights"/>
    <testcase time="0.0109999999999957" classname="prop_diff" name="_prop_strat_nc_proportion_difference_by_stratified_Newcombe_with_wilson_h_weights"/>
    <testcase time="0.00300000000000011" classname="prop_diff" name="_prop_strat_nc_proportion_difference_by_stratified_Newcombe_with_wilson_h_weights"/>
    <testcase time="0.00900000000000034" classname="prop_diff" name="prop_diff_strat_nc_output_matches_equivalent_SAS_function_output"/>
    <testcase time="0.0200000000000031" classname="prop_diff" name="prop_diff_strat_nc_output_matches_equivalent_SAS_function_output"/>
    <testcase time="0.0730000000000004" classname="prop_diff" name="_estimate_proportion_diff_is_compatible_with_rtables_"/>
    <testcase time="0.0459999999999994" classname="prop_diff" name="_estimate_proportion_diff_is_compatible_with_rtables_"/>
    <testcase time="0.046999999999997" classname="prop_diff" name="_estimate_proportion_diff_and_cmh_is_compatible_with_rtables_"/>
    <testcase time="0.0590000000000046" classname="prop_diff" name="_estimate_proportion_diff_and_cmh_is_compatible_with_rtables_"/>
    <testcase time="0.0579999999999998" classname="prop_diff" name="_estimate_proportion_diff_and_strat_newcombe_is_compatible_with_rtables_"/>
    <testcase time="0.0069999999999979" classname="prop_diff" name="s_proportion_diff_works_with_no_strata"/>
    <testcase time="0.0320000000000036" classname="prop_diff" name="s_proportion_diff_works_with_no_strata"/>
    <testcase time="0.00900000000000034" classname="prop_diff" name="s_proportion_diff_works_with_strata"/>
    <testcase time="0.0239999999999938" classname="prop_diff" name="s_proportion_diff_works_with_strata"/>
  </testsuite>
  <testsuite name="prune_occurrences" timestamp="2024-10-17T14:46:39Z" hostname="226d6849429d" tests="41" skipped="0" failures="0" errors="0" time="2.354">
    <testcase time="1.58000000000001" classname="prune_occurrences" name="keep_rows_works_in_a_special_case_identical_to_standard_pruning"/>
    <testcase time="0.0309999999999988" classname="prune_occurrences" name="keep_rows_works_in_a_special_case_identical_to_standard_pruning"/>
    <testcase time="0.0069999999999979" classname="prune_occurrences" name="keep_rows_prunes_everything_if_condition_is_always_FALSE_"/>
    <testcase time="0.0140000000000029" classname="prune_occurrences" name="keep_rows_keeps_everything_if_condition_is_always_TRUE_"/>
    <testcase time="0.0150000000000006" classname="prune_occurrences" name="keep_content_rows_works_as_expected"/>
    <testcase time="0.0559999999999974" classname="prune_occurrences" name="has_count_in_cols_result_works_in_a_special_case_identical_to_standard_pruning"/>
    <testcase time="0.0140000000000029" classname="prune_occurrences" name="has_count_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.0499999999999972" classname="prune_occurrences" name="has_count_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_count_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_count_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_count_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.0140000000000029" classname="prune_occurrences" name="has_count_in_any_col_result_performs_comparisons_correctly"/>
    <testcase time="0.0499999999999972" classname="prune_occurrences" name="has_count_in_any_col_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_count_in_any_col_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_count_in_any_col_result_performs_comparisons_correctly"/>
    <testcase time="0.00400000000000489" classname="prune_occurrences" name="has_count_in_any_col_result_performs_comparisons_correctly"/>
    <testcase time="0.0749999999999957" classname="prune_occurrences" name="has_fraction_in_cols_result_works_in_a_special_case_identical_to_standard_pruning"/>
    <testcase time="0.0150000000000006" classname="prune_occurrences" name="has_fraction_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.0549999999999997" classname="prune_occurrences" name="has_fraction_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.00200000000000244" classname="prune_occurrences" name="has_fraction_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.0189999999999984" classname="prune_occurrences" name="has_fraction_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_fraction_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_fraction_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_fraction_in_cols_result_performs_comparisons_correctly"/>
    <testcase time="0.0140000000000029" classname="prune_occurrences" name="has_fraction_in_any_col_result_performs_comparisons_correctly"/>
    <testcase time="0.0489999999999995" classname="prune_occurrences" name="has_fraction_in_any_col_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_fraction_in_any_col_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_fraction_in_any_col_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_fraction_in_any_col_result_performs_comparisons_correctly"/>
    <testcase time="0.0139999999999958" classname="prune_occurrences" name="has_fractions_difference_result_performs_comparisons_correctly"/>
    <testcase time="0.0489999999999995" classname="prune_occurrences" name="has_fractions_difference_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_fractions_difference_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_fractions_difference_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_fractions_difference_result_performs_comparisons_correctly"/>
    <testcase time="0.0140000000000029" classname="prune_occurrences" name="has_counts_difference_result_performs_comparisons_correctly"/>
    <testcase time="0.0489999999999995" classname="prune_occurrences" name="has_counts_difference_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_counts_difference_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_counts_difference_result_performs_comparisons_correctly"/>
    <testcase time="0.00300000000000011" classname="prune_occurrences" name="has_counts_difference_result_performs_comparisons_correctly"/>
    <testcase time="0.0339999999999989" classname="prune_occurrences" name="combination_of_pruning_functions_works"/>
    <testcase time="0.0790000000000006" classname="prune_occurrences" name="combination_of_pruning_functions_works"/>
  </testsuite>
  <testsuite name="response_biomarkers_subgroups" timestamp="2024-10-17T14:46:40Z" hostname="226d6849429d" tests="20" skipped="0" failures="0" errors="0" time="1.433">
    <testcase time="0.0609999999999999" classname="response_biomarkers_subgroups" name="extract_rsp_biomarkers_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.00200000000000244" classname="response_biomarkers_subgroups" name="extract_rsp_biomarkers_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0229999999999961" classname="response_biomarkers_subgroups" name="extract_rsp_biomarkers_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0570000000000022" classname="response_biomarkers_subgroups" name="extract_rsp_biomarkers_works_as_expected_with_other_custom_options"/>
    <testcase time="0.000999999999997669" classname="response_biomarkers_subgroups" name="extract_rsp_biomarkers_works_as_expected_with_other_custom_options"/>
    <testcase time="0.0210000000000008" classname="response_biomarkers_subgroups" name="extract_rsp_biomarkers_works_as_expected_with_other_custom_options"/>
    <testcase time="0.00200000000000244" classname="response_biomarkers_subgroups" name="extract_rsp_biomarkers_works_as_expected_with_other_custom_options"/>
    <testcase time="0.00300000000000011" classname="response_biomarkers_subgroups" name="extract_rsp_biomarkers_works_as_expected_with_other_custom_options"/>
    <testcase time="0.323999999999998" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_works_as_expected_with_valid_input"/>
    <testcase time="0.137" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_works_as_expected_with_valid_input"/>
    <testcase time="0.00199999999999534" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_works_as_expected_with_valid_input"/>
    <testcase time="0.0200000000000031" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_works_as_expected_with_valid_input"/>
    <testcase time="0.0110000000000028" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.106999999999999" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.0799999999999983" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.0589999999999975" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_works_with_only_a_single_biomarker_in_the_data_frame"/>
    <testcase time="0.00200000000000244" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_works_with_only_a_single_biomarker_in_the_data_frame"/>
    <testcase time="0.0670000000000002" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_works_with_only_a_single_biomarker_in_the_data_frame"/>
    <testcase time="0.319000000000003" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_na_str_argument_works_as_expected"/>
    <testcase time="0.134999999999998" classname="response_biomarkers_subgroups" name="tabulate_rsp_biomarkers_na_str_argument_works_as_expected"/>
  </testsuite>
  <testsuite name="response_subgroups" timestamp="2024-10-17T14:46:41Z" hostname="226d6849429d" tests="34" skipped="0" failures="0" errors="0" time="4.515">
    <testcase time="0.0670000000000002" classname="response_subgroups" name="extract_rsp_subgroups_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0229999999999961" classname="response_subgroups" name="extract_rsp_subgroups_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.00900000000000034" classname="response_subgroups" name="extract_rsp_subgroups_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.0210000000000008" classname="response_subgroups" name="extract_rsp_subgroups_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.0549999999999997" classname="response_subgroups" name="extract_rsp_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.0210000000000008" classname="response_subgroups" name="extract_rsp_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.00200000000000244" classname="response_subgroups" name="extract_rsp_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.0189999999999984" classname="response_subgroups" name="extract_rsp_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.0739999999999981" classname="response_subgroups" name="extract_rsp_subgroups_functions_as_expected_with_strata"/>
    <testcase time="0.0230000000000032" classname="response_subgroups" name="extract_rsp_subgroups_functions_as_expected_with_strata"/>
    <testcase time="0.0319999999999965" classname="response_subgroups" name="a_response_subgroups_functions_as_expected_with_valid_input"/>
    <testcase time="0.0450000000000017" classname="response_subgroups" name="a_response_subgroups_functions_as_expected_with_valid_input"/>
    <testcase time="0.381" classname="response_subgroups" name="tabulate_rsp_subgroups_functions_as_expected_with_valid_input"/>
    <testcase time="0.117000000000004" classname="response_subgroups" name="tabulate_rsp_subgroups_functions_as_expected_with_valid_input"/>
    <testcase time="0.381" classname="response_subgroups" name="tabulate_rsp_subgroups_correctly_calculates_column_indices"/>
    <testcase time="0.019999999999996" classname="response_subgroups" name="tabulate_rsp_subgroups_correctly_calculates_column_indices"/>
    <testcase time="0.0949999999999989" classname="response_subgroups" name="tabulate_rsp_subgroups_correctly_calculates_column_indices"/>
    <testcase time="0.0200000000000031" classname="response_subgroups" name="tabulate_rsp_subgroups_correctly_calculates_column_indices"/>
    <testcase time="0.279000000000003" classname="response_subgroups" name="tabulate_rsp_subgroups_functions_as_expected_with_valid_input_extreme_values_in_OR_table"/>
    <testcase time="0.102999999999994" classname="response_subgroups" name="tabulate_rsp_subgroups_functions_as_expected_with_valid_input_extreme_values_in_OR_table"/>
    <testcase time="0.164000000000001" classname="response_subgroups" name="tabulate_rsp_subgroups_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.0940000000000012" classname="response_subgroups" name="tabulate_rsp_subgroups_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.0690000000000026" classname="response_subgroups" name="tabulate_rsp_subgroups_functions_as_expected_when_0_obs_in_one_arm"/>
    <testcase time="0.317" classname="response_subgroups" name="tabulate_rsp_subgroups_functions_as_expected_when_0_obs_in_one_arm"/>
    <testcase time="0.120999999999995" classname="response_subgroups" name="tabulate_rsp_subgroups_functions_as_expected_when_0_obs_in_one_arm"/>
    <testcase time="0.00400000000000489" classname="response_subgroups" name="d_rsp_subgroups_colvars_functions_as_expected_with_valid_input"/>
    <testcase time="0.019999999999996" classname="response_subgroups" name="d_rsp_subgroups_colvars_functions_as_expected_with_valid_input"/>
    <testcase time="0.384999999999998" classname="response_subgroups" name="tabulate_rsp_subgroups_.formats_argument_works_as_expected"/>
    <testcase time="0.113" classname="response_subgroups" name="tabulate_rsp_subgroups_.formats_argument_works_as_expected"/>
    <testcase time="0.411999999999999" classname="response_subgroups" name="tabulate_rsp_subgroups_na_str_argument_works_as_expected"/>
    <testcase time="0.113999999999997" classname="response_subgroups" name="tabulate_rsp_subgroups_na_str_argument_works_as_expected"/>
    <testcase time="0.417000000000002" classname="response_subgroups" name="tabulate_rsp_subgroups_riskdiff_argument_works_as_expected"/>
    <testcase time="0.131" classname="response_subgroups" name="tabulate_rsp_subgroups_riskdiff_argument_works_as_expected"/>
    <testcase time="0.366999999999997" classname="response_subgroups" name="tabulate_rsp_subgroups_pval_statistic_warning_works_as_expected"/>
  </testsuite>
  <testsuite name="rtables_access" timestamp="2024-10-17T14:46:47Z" hostname="226d6849429d" tests="26" skipped="0" failures="0" errors="0" time="1.719">
    <testcase time="1.045" classname="rtables_access" name="h_row_first_values_works_as_expected"/>
    <testcase time="0.0500000000000043" classname="rtables_access" name="h_row_first_values_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="rtables_access" name="h_row_first_values_works_as_expected"/>
    <testcase time="0.0200000000000031" classname="rtables_access" name="h_row_first_values_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="rtables_access" name="h_row_first_values_works_as_expected"/>
    <testcase time="0.019999999999996" classname="rtables_access" name="h_row_first_values_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="rtables_access" name="h_row_first_values_works_as_expected"/>
    <testcase time="0.019999999999996" classname="rtables_access" name="h_row_first_values_works_as_expected"/>
    <testcase time="0.00400000000000489" classname="rtables_access" name="h_row_first_values_works_as_expected"/>
    <testcase time="0.0129999999999981" classname="rtables_access" name="h_row_counts_works_as_expected"/>
    <testcase time="0.0559999999999974" classname="rtables_access" name="h_row_counts_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="rtables_access" name="h_row_counts_works_as_expected"/>
    <testcase time="0.019999999999996" classname="rtables_access" name="h_row_counts_works_as_expected"/>
    <testcase time="0.0110000000000028" classname="rtables_access" name="h_row_counts_returns_NA_with_empty_analysis_row"/>
    <testcase time="0.0459999999999994" classname="rtables_access" name="h_row_counts_returns_NA_with_empty_analysis_row"/>
    <testcase time="0.00200000000000244" classname="rtables_access" name="h_row_counts_returns_NA_with_empty_analysis_row"/>
    <testcase time="0.0189999999999984" classname="rtables_access" name="h_row_counts_returns_NA_with_empty_analysis_row"/>
    <testcase time="0.0130000000000052" classname="rtables_access" name="h_row_fractions_works_as_expected"/>
    <testcase time="0.0479999999999947" classname="rtables_access" name="h_row_fractions_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="rtables_access" name="h_row_fractions_works_as_expected"/>
    <testcase time="0.0189999999999984" classname="rtables_access" name="h_row_fractions_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="rtables_access" name="h_col_counts_works_as_expected"/>
    <testcase time="0.0189999999999984" classname="rtables_access" name="h_col_counts_works_as_expected"/>
    <testcase time="0.246000000000002" classname="rtables_access" name="is_leaf_table_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="rtables_access" name="is_leaf_table_works_as_expected"/>
    <testcase time="0.0330000000000013" classname="rtables_access" name="h_content_first_row_works_as_expected"/>
  </testsuite>
  <testsuite name="score_occurrences" timestamp="2024-10-17T14:46:48Z" hostname="226d6849429d" tests="13" skipped="0" failures="0" errors="0" time="0.885">
    <testcase time="0.276999999999994" classname="score_occurrences" name="score_occurrences_functions_as_expected"/>
    <testcase time="0.101000000000006" classname="score_occurrences" name="score_occurrences_functions_as_expected"/>
    <testcase time="0.0069999999999979" classname="score_occurrences" name="score_occurrences_functions_as_expected_with_empty_analysis_rows"/>
    <testcase time="0.0959999999999965" classname="score_occurrences" name="score_occurrences_functions_as_expected_with_empty_analysis_rows"/>
    <testcase time="0.00400000000000489" classname="score_occurrences" name="score_occurrences_cols_functions_as_expected"/>
    <testcase time="0.00399999999999778" classname="score_occurrences" name="score_occurrences_cols_functions_as_expected"/>
    <testcase time="0.0919999999999987" classname="score_occurrences" name="score_occurrences_cols_functions_as_expected"/>
    <testcase time="0.0859999999999985" classname="score_occurrences" name="score_occurrences_subtable_functions_as_expected"/>
    <testcase time="0.00300000000000011" classname="score_occurrences" name="score_occurrences_subtable_functions_as_expected"/>
    <testcase time="0.0730000000000004" classname="score_occurrences" name="score_occurrences_subtable_functions_as_expected"/>
    <testcase time="0.0710000000000051" classname="score_occurrences" name="score_occurrences_cont_cols_functions_as_expected"/>
    <testcase time="0.00199999999999534" classname="score_occurrences" name="score_occurrences_cont_cols_functions_as_expected"/>
    <testcase time="0.0690000000000026" classname="score_occurrences" name="score_occurrences_cont_cols_functions_as_expected"/>
  </testsuite>
  <testsuite name="split_cols_by_groups" timestamp="2024-10-17T14:46:49Z" hostname="226d6849429d" tests="34" skipped="0" failures="0" errors="0" time="0.723">
    <testcase time="0.0100000000000051" classname="split_cols_by_groups" name="groups_list_to_df_works_as_expected"/>
    <testcase time="0.0279999999999987" classname="split_cols_by_groups" name="groups_list_to_df_works_as_expected"/>
    <testcase time="0.00799999999999557" classname="split_cols_by_groups" name="combine_groups_combines_character_vectors"/>
    <testcase time="0.00200000000000244" classname="split_cols_by_groups" name="combine_groups_combines_character_vectors"/>
    <testcase time="0.0189999999999984" classname="split_cols_by_groups" name="combine_groups_combines_character_vectors"/>
    <testcase time="0.00500000000000256" classname="split_cols_by_groups" name="combine_groups_combines_factors"/>
    <testcase time="0.00200000000000244" classname="split_cols_by_groups" name="combine_groups_combines_factors"/>
    <testcase time="0.0189999999999984" classname="split_cols_by_groups" name="combine_groups_combines_factors"/>
    <testcase time="0.00499999999999545" classname="split_cols_by_groups" name="combine_groups_combines_factors_with_given_reference"/>
    <testcase time="0.0200000000000031" classname="split_cols_by_groups" name="combine_groups_combines_factors_with_given_reference"/>
    <testcase time="0.00399999999999778" classname="split_cols_by_groups" name="combine_groups_use_good_separator"/>
    <testcase time="0.0200000000000031" classname="split_cols_by_groups" name="combine_groups_use_good_separator"/>
    <testcase time="0.00399999999999778" classname="split_cols_by_groups" name="combine_groups_can_use_multiple_reference"/>
    <testcase time="0.0200000000000031" classname="split_cols_by_groups" name="combine_groups_can_use_multiple_reference"/>
    <testcase time="0.0389999999999944" classname="split_cols_by_groups" name="split_cols_by_groups_manages_combinations_of_columns"/>
    <testcase time="0.0430000000000064" classname="split_cols_by_groups" name="split_cols_by_groups_manages_combinations_of_columns"/>
    <testcase time="0.0349999999999966" classname="split_cols_by_groups" name="split_cols_by_groups_manages_combinations_of_columns_with_reference"/>
    <testcase time="0.0410000000000039" classname="split_cols_by_groups" name="split_cols_by_groups_manages_combinations_of_columns_with_reference"/>
    <testcase time="0.0489999999999995" classname="split_cols_by_groups" name="split_cols_by_groups_equivalent_to_split_cols_by_when_no_groups"/>
    <testcase time="0.054000000000002" classname="split_cols_by_groups" name="split_cols_by_groups_equivalent_to_split_cols_by_when_no_groups"/>
    <testcase time="0.0479999999999947" classname="split_cols_by_groups" name="split_cols_by_groups_equivalent_to_split_cols_by_with_ref_col_but_no_groups"/>
    <testcase time="0.0489999999999995" classname="split_cols_by_groups" name="split_cols_by_groups_equivalent_to_split_cols_by_with_ref_col_but_no_groups"/>
    <testcase time="0.0399999999999991" classname="split_cols_by_groups" name="split_cols_by_groups_manages_combinations_of_columns_with_reference_and_alt_counts_df"/>
    <testcase time="0.0429999999999993" classname="split_cols_by_groups" name="split_cols_by_groups_manages_combinations_of_columns_with_reference_and_alt_counts_df"/>
    <testcase time="0.00800000000000267" classname="split_cols_by_groups" name="combine_counts_combines_character_vectors"/>
    <testcase time="0.00499999999999545" classname="split_cols_by_groups" name="combine_counts_combines_character_vectors"/>
    <testcase time="0.00200000000000244" classname="split_cols_by_groups" name="combine_counts_combines_character_vectors"/>
    <testcase time="0.0189999999999984" classname="split_cols_by_groups" name="combine_counts_combines_character_vectors"/>
    <testcase time="0.00500000000000256" classname="split_cols_by_groups" name="combine_counts_combines_factors"/>
    <testcase time="0.027000000000001" classname="split_cols_by_groups" name="combine_counts_combines_factors"/>
    <testcase time="0.00499999999999545" classname="split_cols_by_groups" name="combine_counts_combines_factors"/>
    <testcase time="0.0200000000000031" classname="split_cols_by_groups" name="combine_counts_combines_factors"/>
    <testcase time="0.00499999999999545" classname="split_cols_by_groups" name="combine_counts_with_groups_list_NULL"/>
    <testcase time="0.0200000000000031" classname="split_cols_by_groups" name="combine_counts_with_groups_list_NULL"/>
  </testsuite>
  <testsuite name="stat" timestamp="2024-10-17T14:46:49Z" hostname="226d6849429d" tests="84" skipped="0" failures="0" errors="0" time="0.935">
    <testcase time="0.00999999999999801" classname="stat" name="stat_mean_ci_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0190000000000055" classname="stat" name="stat_mean_ci_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00199999999999534" classname="stat" name="stat_mean_ci_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_mean_ci_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.000999999999997669" classname="stat" name="stat_mean_ci_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_mean_ci_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.000999999999997669" classname="stat" name="stat_mean_ci_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_ci_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00500000000000256" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00200000000000244" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.000999999999997669" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0190000000000055" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00199999999999534" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.000999999999997669" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00200000000000244" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00199999999999534" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0240000000000009" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00300000000000011" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0210000000000008" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.000999999999997669" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.000999999999997669" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.000999999999997669" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_ci_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00500000000000256" classname="stat" name="stat_mean_pval_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_pval_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00200000000000244" classname="stat" name="stat_mean_pval_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.019999999999996" classname="stat" name="stat_mean_pval_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00100000000000477" classname="stat" name="stat_mean_pval_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_pval_works_for_series_without_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00500000000000256" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00199999999999534" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0190000000000055" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.000999999999997669" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.000999999999997669" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00200000000000244" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00200000000000244" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00200000000000244" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00199999999999534" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.027000000000001" classname="stat" name="stat_mean_pval_works_for_series_with_NAs_including_extreme_case_n_1_and_various_n_min_values_"/>
    <testcase time="0.00600000000000023" classname="stat" name="stat_mean_pval_returns_the_correct_p_value"/>
    <testcase time="0.00400000000000489" classname="stat" name="stat_mean_pval_returns_the_correct_p_value"/>
    <testcase time="0.00499999999999545" classname="stat" name="stat_median_ci_works_for_series_without_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_median_ci_works_for_series_without_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.00199999999999534" classname="stat" name="stat_median_ci_works_for_series_without_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_median_ci_works_for_series_without_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.00200000000000244" classname="stat" name="stat_median_ci_works_for_series_without_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_median_ci_works_for_series_without_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.00500000000000256" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.019999999999996" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.00200000000000244" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.0210000000000008" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.000999999999997669" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.00200000000000244" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.019999999999996" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.000999999999997669" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.00200000000000244" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.0189999999999984" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.00199999999999534" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.00200000000000244" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.019999999999996" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.00100000000000477" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.019999999999996" classname="stat" name="stat_median_ci_works_for_series_with_NAs_including_extreme_case_n_1_"/>
    <testcase time="0.00500000000000256" classname="stat" name="stat_median_ci_works_for_named_numeric_values_when_name_is_missing_"/>
    <testcase time="0.027000000000001" classname="stat" name="stat_median_ci_works_for_named_numeric_values_when_name_is_missing_"/>
    <testcase time="0.00499999999999545" classname="stat" name="stat_propdiff_ci_works_with_names_and_multiple_values_in_x_and_y_"/>
    <testcase time="0.0200000000000031" classname="stat" name="stat_propdiff_ci_works_with_names_and_multiple_values_in_x_and_y_"/>
    <testcase time="0.00600000000000023" classname="stat" name="stat_propdiff_ci_works_with_custom_arguments_"/>
    <testcase time="0.019999999999996" classname="stat" name="stat_propdiff_ci_works_with_custom_arguments_"/>
  </testsuite>
  <testsuite name="summarize_ancova" timestamp="2024-10-17T14:46:50Z" hostname="226d6849429d" tests="20" skipped="0" failures="0" errors="0" time="1.312">
    <testcase time="0.0970000000000013" classname="summarize_ancova" name="h_ancova_works_with_healthy_input"/>
    <testcase time="0.0429999999999993" classname="summarize_ancova" name="h_ancova_works_with_healthy_input"/>
    <testcase time="0.00800000000000267" classname="summarize_ancova" name="h_ancova_fails_wrong_inputs"/>
    <testcase time="0.00500000000000256" classname="summarize_ancova" name="h_ancova_fails_wrong_inputs"/>
    <testcase time="0.0279999999999987" classname="summarize_ancova" name="s_ancova_works_with_healthy_input"/>
    <testcase time="0.019999999999996" classname="summarize_ancova" name="s_ancova_works_with_healthy_input"/>
    <testcase time="0.0260000000000034" classname="summarize_ancova" name="s_ancova_fails_wrong_inputs"/>
    <testcase time="0.0279999999999987" classname="summarize_ancova" name="s_ancova_works_with_interaction_and_.in_ref_col_TRUE"/>
    <testcase time="0.0200000000000031" classname="summarize_ancova" name="s_ancova_works_with_interaction_and_.in_ref_col_TRUE"/>
    <testcase time="0.217999999999996" classname="summarize_ancova" name="summarize_ancova_works_with_healthy_inputs"/>
    <testcase time="0.0810000000000031" classname="summarize_ancova" name="summarize_ancova_works_with_healthy_inputs"/>
    <testcase time="0.180999999999997" classname="summarize_ancova" name="summarize_ancova_works_with_interaction"/>
    <testcase time="0.0069999999999979" classname="summarize_ancova" name="summarize_ancova_works_with_interaction"/>
    <testcase time="0.00300000000000011" classname="summarize_ancova" name="summarize_ancova_works_with_interaction"/>
    <testcase time="0.118000000000002" classname="summarize_ancova" name="summarize_ancova_works_with_irregular_arm_levels"/>
    <testcase time="0.0640000000000001" classname="summarize_ancova" name="summarize_ancova_works_with_irregular_arm_levels"/>
    <testcase time="0.140000000000001" classname="summarize_ancova" name="summarize_ancova_works_with_irregular_arm_levels"/>
    <testcase time="0.0640000000000001" classname="summarize_ancova" name="summarize_ancova_works_with_irregular_arm_levels"/>
    <testcase time="0.100000000000001" classname="summarize_ancova" name="summarize_ancova_works_with_irregular_arm_levels"/>
    <testcase time="0.0609999999999999" classname="summarize_ancova" name="summarize_ancova_works_with_irregular_arm_levels"/>
  </testsuite>
  <testsuite name="summarize_change" timestamp="2024-10-17T14:46:51Z" hostname="226d6849429d" tests="8" skipped="0" failures="0" errors="0" time="0.264">
    <testcase time="0.00999999999999801" classname="summarize_change" name="s_change_from_baseline_handles_empty_data_complete_missing_for_a_visit_"/>
    <testcase time="0.0210000000000008" classname="summarize_change" name="s_change_from_baseline_handles_empty_data_complete_missing_for_a_visit_"/>
    <testcase time="0.00600000000000023" classname="summarize_change" name="s_change_from_baseline_handles_NA_in_baseline_values"/>
    <testcase time="0.0289999999999964" classname="summarize_change" name="s_change_from_baseline_handles_NA_in_baseline_values"/>
    <testcase time="0.00900000000000034" classname="summarize_change" name="s_change_from_baseline_handles_baseline_substitution"/>
    <testcase time="0.0220000000000056" classname="summarize_change" name="s_change_from_baseline_handles_baseline_substitution"/>
    <testcase time="0.0959999999999965" classname="summarize_change" name="summarize_change_works_as_expected"/>
    <testcase time="0.070999999999998" classname="summarize_change" name="summarize_change_works_as_expected"/>
  </testsuite>
  <testsuite name="summarize_colvars" timestamp="2024-10-17T14:46:52Z" hostname="226d6849429d" tests="6" skipped="0" failures="0" errors="0" time="0.625">
    <testcase time="0.105000000000004" classname="summarize_colvars" name="summarize_colvars_works_as_expected_without_column_split_and_default_behavior"/>
    <testcase time="0.080999999999996" classname="summarize_colvars" name="summarize_colvars_works_as_expected_without_column_split_and_default_behavior"/>
    <testcase time="0.127000000000002" classname="summarize_colvars" name="summarize_colvars_works_as_expected_with_column_split"/>
    <testcase time="0.119" classname="summarize_colvars" name="summarize_colvars_works_as_expected_with_column_split"/>
    <testcase time="0.107999999999997" classname="summarize_colvars" name="summarize_colvars_works_when_selecting_statistics_and_custom_formatting"/>
    <testcase time="0.0850000000000009" classname="summarize_colvars" name="summarize_colvars_works_when_selecting_statistics_and_custom_formatting"/>
  </testsuite>
  <testsuite name="summarize_coxreg" timestamp="2024-10-17T14:46:52Z" hostname="226d6849429d" tests="41" skipped="0" failures="0" errors="0" time="5.899">
    <testcase time="0.0530000000000044" classname="summarize_coxreg" name="s_coxreg_converts_tabulated_results_in_a_list"/>
    <testcase time="0.0229999999999961" classname="summarize_coxreg" name="s_coxreg_converts_tabulated_results_in_a_list"/>
    <testcase time="0.0570000000000022" classname="summarize_coxreg" name="s_coxreg_works_with_which_vars_and_var_nms_arguments"/>
    <testcase time="0.0200000000000031" classname="summarize_coxreg" name="s_coxreg_works_with_which_vars_and_var_nms_arguments"/>
    <testcase time="0.0579999999999998" classname="summarize_coxreg" name="s_coxreg_works_with_character_covariates_in_the_univariate_case_when_interaction_TRUE"/>
    <testcase time="0.019999999999996" classname="summarize_coxreg" name="s_coxreg_works_with_character_covariates_in_the_univariate_case_when_interaction_TRUE"/>
    <testcase time="0.0260000000000034" classname="summarize_coxreg" name="a_coxreg_works_as_expected"/>
    <testcase time="0.0210000000000008" classname="summarize_coxreg" name="a_coxreg_works_as_expected"/>
    <testcase time="0.164999999999999" classname="summarize_coxreg" name="summarize_coxreg_adds_the_univariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.0690000000000026" classname="summarize_coxreg" name="summarize_coxreg_adds_the_univariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.00300000000000011" classname="summarize_coxreg" name="summarize_coxreg_adds_the_univariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.196999999999989" classname="summarize_coxreg" name="summarize_coxreg_adds_the_univariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.0870000000000033" classname="summarize_coxreg" name="summarize_coxreg_adds_the_univariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.189000000000007" classname="summarize_coxreg" name="summarize_coxreg_adds_the_univariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.0769999999999982" classname="summarize_coxreg" name="summarize_coxreg_adds_the_univariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.0969999999999942" classname="summarize_coxreg" name="summarize_coxreg_adds_the_univariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.210999999999999" classname="summarize_coxreg" name="summarize_coxreg_.section_div_argument_works"/>
    <testcase time="0.0760000000000076" classname="summarize_coxreg" name="summarize_coxreg_.section_div_argument_works"/>
    <testcase time="0.384999999999991" classname="summarize_coxreg" name="summarize_coxreg_works_with_interactions_in_univariate_case"/>
    <testcase time="0.113" classname="summarize_coxreg" name="summarize_coxreg_works_with_interactions_in_univariate_case"/>
    <testcase time="0.216000000000008" classname="summarize_coxreg" name="summarize_coxreg_at_argument_works_in_univariate_case"/>
    <testcase time="0.102000000000004" classname="summarize_coxreg" name="summarize_coxreg_at_argument_works_in_univariate_case"/>
    <testcase time="0.309999999999988" classname="summarize_coxreg" name="summarize_coxreg_na_str_argument_works"/>
    <testcase time="0.0950000000000131" classname="summarize_coxreg" name="summarize_coxreg_na_str_argument_works"/>
    <testcase time="0.143999999999991" classname="summarize_coxreg" name="summarize_coxreg_works_without_treatment_arm_in_univariate_case"/>
    <testcase time="0.0769999999999982" classname="summarize_coxreg" name="summarize_coxreg_works_without_treatment_arm_in_univariate_case"/>
    <testcase time="0.144000000000005" classname="summarize_coxreg" name="summarize_coxreg_works_with_numeric_covariate_without_treatment_arm_in_univariate_case"/>
    <testcase time="0.0689999999999884" classname="summarize_coxreg" name="summarize_coxreg_works_with_numeric_covariate_without_treatment_arm_in_univariate_case"/>
    <testcase time="0.158000000000001" classname="summarize_coxreg" name="summarize_coxreg_works_with_character_covariate_in_univariate_case_when_interaction_TRUE"/>
    <testcase time="0.078000000000003" classname="summarize_coxreg" name="summarize_coxreg_works_with_character_covariate_in_univariate_case_when_interaction_TRUE"/>
    <testcase time="0.307000000000002" classname="summarize_coxreg" name="summarize_coxreg_works_with_character_covariate_in_univariate_case_when_interaction_TRUE"/>
    <testcase time="0.0939999999999941" classname="summarize_coxreg" name="summarize_coxreg_works_with_character_covariate_in_univariate_case_when_interaction_TRUE"/>
    <testcase time="0.507000000000005" classname="summarize_coxreg" name="summarize_coxreg_adds_the_multivariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.0939999999999941" classname="summarize_coxreg" name="summarize_coxreg_adds_the_multivariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.00300000000000011" classname="summarize_coxreg" name="summarize_coxreg_adds_the_multivariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.503" classname="summarize_coxreg" name="summarize_coxreg_adds_the_multivariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.103999999999999" classname="summarize_coxreg" name="summarize_coxreg_adds_the_multivariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.504000000000005" classname="summarize_coxreg" name="summarize_coxreg_adds_the_multivariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.0940000000000083" classname="summarize_coxreg" name="summarize_coxreg_adds_the_multivariate_Cox_regression_layer_to_rtables"/>
    <testcase time="0.340999999999994" classname="summarize_coxreg" name="warning_error_messages_work"/>
    <testcase time="0.00799999999999557" classname="summarize_coxreg" name="warning_error_messages_work"/>
  </testsuite>
  <testsuite name="summarize_glm_count" timestamp="2024-10-17T14:46:58Z" hostname="226d6849429d" tests="44" skipped="0" failures="0" errors="0" time="1.642">
    <testcase time="0.046999999999997" classname="summarize_glm_count" name="h_glm_poisson_glm_fit_works_with_healthy_input"/>
    <testcase time="0.0210000000000008" classname="summarize_glm_count" name="h_glm_poisson_glm_fit_works_with_healthy_input"/>
    <testcase time="0.034000000000006" classname="summarize_glm_count" name="h_glm_poisson_emmeans_fit_works_with_healthy_input"/>
    <testcase time="0.0210000000000008" classname="summarize_glm_count" name="h_glm_poisson_emmeans_fit_works_with_healthy_input"/>
    <testcase time="0.007000000000005" classname="summarize_glm_count" name="h_glm_poisson_fails_wrong_inputs"/>
    <testcase time="0.00499999999999545" classname="summarize_glm_count" name="h_glm_poisson_fails_wrong_inputs"/>
    <testcase time="0.0319999999999965" classname="summarize_glm_count" name="h_glm_poisson_glm_fit_works_with_healthy_input_with_covariates"/>
    <testcase time="0.019999999999996" classname="summarize_glm_count" name="h_glm_poisson_glm_fit_works_with_healthy_input_with_covariates"/>
    <testcase time="0.0370000000000061" classname="summarize_glm_count" name="h_glm_poisson_emmeans_fit_works_with_healthy_input_with_covariates"/>
    <testcase time="0.0280000000000058" classname="summarize_glm_count" name="h_glm_poisson_emmeans_fit_works_with_healthy_input_with_covariates"/>
    <testcase time="0.0349999999999966" classname="summarize_glm_count" name="h_glm_quasipoisson_glm_fit_works_with_healthy_input"/>
    <testcase time="0.019999999999996" classname="summarize_glm_count" name="h_glm_quasipoisson_glm_fit_works_with_healthy_input"/>
    <testcase time="0.0369999999999919" classname="summarize_glm_count" name="h_glm_quasipoisson_emmeans_fit_works_with_healthy_input"/>
    <testcase time="0.0210000000000008" classname="summarize_glm_count" name="h_glm_quasipoisson_emmeans_fit_works_with_healthy_input"/>
    <testcase time="0.00800000000000978" classname="summarize_glm_count" name="h_glm_quasipoisson_fails_wrong_inputs"/>
    <testcase time="0.00399999999999068" classname="summarize_glm_count" name="h_glm_quasipoisson_fails_wrong_inputs"/>
    <testcase time="0.0480000000000018" classname="summarize_glm_count" name="h_glm_negbin_glm_fit_works_with_healthy_input"/>
    <testcase time="0.0220000000000056" classname="summarize_glm_count" name="h_glm_negbin_glm_fit_works_with_healthy_input"/>
    <testcase time="0.0529999999999973" classname="summarize_glm_count" name="h_glm_negbin_emmeans_fit_works_with_healthy_input"/>
    <testcase time="0.0210000000000008" classname="summarize_glm_count" name="h_glm_negbin_emmeans_fit_works_with_healthy_input"/>
    <testcase time="0.00799999999999557" classname="summarize_glm_count" name="h_glm_negbin_fails_wrong_inputs"/>
    <testcase time="0.00500000000000966" classname="summarize_glm_count" name="h_glm_negbin_fails_wrong_inputs"/>
    <testcase time="0.0299999999999869" classname="summarize_glm_count" name="h_glm_count_glm_fit_works_with_healthy_input"/>
    <testcase time="0.0200000000000102" classname="summarize_glm_count" name="h_glm_count_glm_fit_works_with_healthy_input"/>
    <testcase time="0.0369999999999919" classname="summarize_glm_count" name="h_glm_count_emmeans_fit_works_with_healthy_input"/>
    <testcase time="0.0200000000000102" classname="summarize_glm_count" name="h_glm_count_emmeans_fit_works_with_healthy_input"/>
    <testcase time="0.00799999999999557" classname="summarize_glm_count" name="h_glm_count_fails_wrong_inputs"/>
    <testcase time="0.00499999999999545" classname="summarize_glm_count" name="h_glm_count_fails_wrong_inputs"/>
    <testcase time="0.0600000000000023" classname="summarize_glm_count" name="h_ppmeans_works_with_healthy_input"/>
    <testcase time="0.054000000000002" classname="summarize_glm_count" name="h_ppmeans_works_with_healthy_input"/>
    <testcase time="0.00900000000000034" classname="summarize_glm_count" name="h_ppmeans_works_with_healthy_input"/>
    <testcase time="0.0339999999999918" classname="summarize_glm_count" name="s_glm_count_works_with_healthy_input"/>
    <testcase time="0.0210000000000008" classname="summarize_glm_count" name="s_glm_count_works_with_healthy_input"/>
    <testcase time="0.0520000000000067" classname="summarize_glm_count" name="s_glm_count_negative_binomial_works_with_healthy_input"/>
    <testcase time="0.0210000000000008" classname="summarize_glm_count" name="s_glm_count_negative_binomial_works_with_healthy_input"/>
    <testcase time="0.0409999999999968" classname="summarize_glm_count" name="s_glm_count_works_with_no_reference_group_selected."/>
    <testcase time="0.0210000000000008" classname="summarize_glm_count" name="s_glm_count_works_with_no_reference_group_selected."/>
    <testcase time="0.0570000000000022" classname="summarize_glm_count" name="s_glm_count_negative_binomial_works_with_no_reference_group_selected."/>
    <testcase time="0.0210000000000008" classname="summarize_glm_count" name="s_glm_count_negative_binomial_works_with_no_reference_group_selected."/>
    <testcase time="0.00900000000000034" classname="summarize_glm_count" name="s_glm_count_fails_wrong_inputs"/>
    <testcase time="0.189999999999998" classname="summarize_glm_count" name="summarize_glm_count_works_with_healthy_inputs"/>
    <testcase time="0.0859999999999985" classname="summarize_glm_count" name="summarize_glm_count_works_with_healthy_inputs"/>
    <testcase time="0.215000000000003" classname="summarize_glm_count" name="summarize_glm_count_negative_binomial_works_with_healthy_inputs"/>
    <testcase time="0.0969999999999942" classname="summarize_glm_count" name="summarize_glm_count_negative_binomial_works_with_healthy_inputs"/>
  </testsuite>
  <testsuite name="summarize_num_patients" timestamp="2024-10-17T14:47:00Z" hostname="226d6849429d" tests="50" skipped="0" failures="0" errors="0" time="2.247">
    <testcase time="0.0110000000000099" classname="summarize_num_patients" name="s_num_patients_works_as_expected_with_healthy_input"/>
    <testcase time="0.0209999999999866" classname="summarize_num_patients" name="s_num_patients_works_as_expected_with_healthy_input"/>
    <testcase time="0.00500000000000966" classname="summarize_num_patients" name="s_num_patients_works_as_expected_with_empty_input"/>
    <testcase time="0.019999999999996" classname="summarize_num_patients" name="s_num_patients_works_as_expected_with_empty_input"/>
    <testcase time="0.00499999999999545" classname="summarize_num_patients" name="s_num_patients_works_as_expected_with_unique_count_suffix_FALSE"/>
    <testcase time="0.0200000000000102" classname="summarize_num_patients" name="s_num_patients_works_as_expected_with_unique_count_suffix_FALSE"/>
    <testcase time="0.00499999999999545" classname="summarize_num_patients" name="s_num_patients_content_works_as_expected_with_healthy_input"/>
    <testcase time="0.019999999999996" classname="summarize_num_patients" name="s_num_patients_content_works_as_expected_with_healthy_input"/>
    <testcase time="0.0439999999999969" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_healthy_input"/>
    <testcase time="0.0500000000000114" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_healthy_input"/>
    <testcase time="0.0429999999999922" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_healthy_input"/>
    <testcase time="0.0450000000000017" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_healthy_input"/>
    <testcase time="0.0319999999999965" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_healthy_input"/>
    <testcase time="0.0460000000000065" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_healthy_input"/>
    <testcase time="0.0319999999999965" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_healthy_input"/>
    <testcase time="0.0439999999999969" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_healthy_input"/>
    <testcase time="0.00499999999999545" classname="summarize_num_patients" name="s_num_patients_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.0200000000000102" classname="summarize_num_patients" name="s_num_patients_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.00499999999999545" classname="summarize_num_patients" name="s_num_patients_count_by_with_missing_works_as_expected_with_healthy_input"/>
    <testcase time="0.019999999999996" classname="summarize_num_patients" name="s_num_patients_count_by_with_missing_works_as_expected_with_healthy_input"/>
    <testcase time="0.00500000000000966" classname="summarize_num_patients" name="s_num_patients_count_by_with_missing_case_2_works_as_expected_with_healthy_input"/>
    <testcase time="0.0249999999999915" classname="summarize_num_patients" name="s_num_patients_count_by_with_missing_case_2_works_as_expected_with_healthy_input"/>
    <testcase time="0.007000000000005" classname="summarize_num_patients" name="s_num_patients_content_with_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.0229999999999961" classname="summarize_num_patients" name="s_num_patients_content_with_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.00499999999999545" classname="summarize_num_patients" name="s_num_patients_content_with_count_by_case_2_works_as_expected_with_healthy_input"/>
    <testcase time="0.0200000000000102" classname="summarize_num_patients" name="s_num_patients_content_with_count_by_case_2_works_as_expected_with_healthy_input"/>
    <testcase time="0.00499999999999545" classname="summarize_num_patients" name="s_num_patients_content_with_count_by_trivial_cases_identical_to_without_count_by"/>
    <testcase time="0.019999999999996" classname="summarize_num_patients" name="s_num_patients_content_with_count_by_trivial_cases_identical_to_without_count_by"/>
    <testcase time="0.041000000000011" classname="summarize_num_patients" name="summarize_num_patients_with_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.0509999999999877" classname="summarize_num_patients" name="summarize_num_patients_with_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.0320000000000107" classname="summarize_num_patients" name="summarize_num_patients_with_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.0449999999999875" classname="summarize_num_patients" name="summarize_num_patients_with_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.0320000000000107" classname="summarize_num_patients" name="summarize_num_patients_with_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.0549999999999926" classname="summarize_num_patients" name="summarize_num_patients_with_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.0330000000000013" classname="summarize_num_patients" name="summarize_num_patients_with_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.0460000000000065" classname="summarize_num_patients" name="summarize_num_patients_with_count_by_works_as_expected_with_healthy_input"/>
    <testcase time="0.0409999999999968" classname="summarize_num_patients" name="summarize_num_patients_with_count_by_different_combinations_works_as_expected_with_healthy_input"/>
    <testcase time="0.0510000000000019" classname="summarize_num_patients" name="summarize_num_patients_with_count_by_different_combinations_works_as_expected_with_healthy_input"/>
    <testcase time="0.150999999999996" classname="summarize_num_patients" name="analyze_num_patients_works_well_for_pagination"/>
    <testcase time="0.0949999999999989" classname="summarize_num_patients" name="analyze_num_patients_works_well_for_pagination"/>
    <testcase time="0.182000000000002" classname="summarize_num_patients" name="analyze_num_patients_works_well_for_pagination"/>
    <testcase time="0.0370000000000061" classname="summarize_num_patients" name="analyze_num_patients_works_well_for_pagination"/>
    <testcase time="0.134" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0919999999999987" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.153999999999996" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.117000000000004" classname="summarize_num_patients" name="summarize_num_patients_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0619999999999976" classname="summarize_num_patients" name="analyze_num_patients_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0559999999999974" classname="summarize_num_patients" name="analyze_num_patients_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0630000000000024" classname="summarize_num_patients" name="analyze_num_patients_works_as_expected_with_risk_difference_column"/>
    <testcase time="0.0739999999999981" classname="summarize_num_patients" name="analyze_num_patients_works_as_expected_with_risk_difference_column"/>
  </testsuite>
  <testsuite name="summarize_patients_exposure_in_cols" timestamp="2024-10-17T14:47:02Z" hostname="226d6849429d" tests="18" skipped="0" failures="0" errors="0" time="0.826">
    <testcase time="0.0109999999999957" classname="summarize_patients_exposure_in_cols" name="s_count_patients_sum_exposure_works_as_expected"/>
    <testcase time="0.019999999999996" classname="summarize_patients_exposure_in_cols" name="s_count_patients_sum_exposure_works_as_expected"/>
    <testcase time="0.007000000000005" classname="summarize_patients_exposure_in_cols" name="a_count_patients_sum_exposure_works_as_expected"/>
    <testcase time="0.019999999999996" classname="summarize_patients_exposure_in_cols" name="a_count_patients_sum_exposure_works_as_expected"/>
    <testcase time="0.0860000000000127" classname="summarize_patients_exposure_in_cols" name="summarize_patients_exposure_in_cols_works_well_with_default_arguments"/>
    <testcase time="0.0799999999999983" classname="summarize_patients_exposure_in_cols" name="summarize_patients_exposure_in_cols_works_well_with_default_arguments"/>
    <testcase time="0.0699999999999932" classname="summarize_patients_exposure_in_cols" name="summarize_patients_exposure_in_cols_works_well_with_custom_arguments"/>
    <testcase time="0.0640000000000072" classname="summarize_patients_exposure_in_cols" name="summarize_patients_exposure_in_cols_works_well_with_custom_arguments"/>
    <testcase time="0.0309999999999917" classname="summarize_patients_exposure_in_cols" name="summarize_patients_exposure_in_cols_returns_correct_column_label_when_no_variable_split_and_only_one_statistic"/>
    <testcase time="0.019999999999996" classname="summarize_patients_exposure_in_cols" name="summarize_patients_exposure_in_cols_returns_correct_column_label_when_no_variable_split_and_only_one_statistic"/>
    <testcase time="0.0670000000000073" classname="summarize_patients_exposure_in_cols" name="analyze_patients_exposure_in_cols_works_well_with_default_arguments"/>
    <testcase time="0.0859999999999985" classname="summarize_patients_exposure_in_cols" name="analyze_patients_exposure_in_cols_works_well_with_default_arguments"/>
    <testcase time="0.0510000000000019" classname="summarize_patients_exposure_in_cols" name="analyze_patients_exposure_in_cols_works_well_with_custom_arguments"/>
    <testcase time="0.0609999999999928" classname="summarize_patients_exposure_in_cols" name="analyze_patients_exposure_in_cols_works_well_with_custom_arguments"/>
    <testcase time="0.0260000000000105" classname="summarize_patients_exposure_in_cols" name="analyze_patients_exposure_in_cols_works_with_no_variable_split_and_only_one_statistic"/>
    <testcase time="0.0369999999999919" classname="summarize_patients_exposure_in_cols" name="analyze_patients_exposure_in_cols_works_with_no_variable_split_and_only_one_statistic"/>
    <testcase time="0.0390000000000015" classname="summarize_patients_exposure_in_cols" name="patients_exposure_in_cols_works_with_totals_after_the_row_split"/>
    <testcase time="0.0499999999999972" classname="summarize_patients_exposure_in_cols" name="patients_exposure_in_cols_works_with_totals_after_the_row_split"/>
  </testsuite>
  <testsuite name="survival_biomarkers_subgroups" timestamp="2024-10-17T14:47:03Z" hostname="226d6849429d" tests="19" skipped="0" failures="0" errors="0" time="2.524">
    <testcase time="0.176000000000002" classname="survival_biomarkers_subgroups" name="extract_survival_biomarkers_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0230000000000103" classname="survival_biomarkers_subgroups" name="extract_survival_biomarkers_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.164999999999992" classname="survival_biomarkers_subgroups" name="extract_survival_biomarkers_works_as_expected_with_groups_lists"/>
    <testcase time="0.0220000000000056" classname="survival_biomarkers_subgroups" name="extract_survival_biomarkers_works_as_expected_with_groups_lists"/>
    <testcase time="0.435999999999993" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_works_as_expected_with_valid_input"/>
    <testcase time="0.146000000000001" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_works_as_expected_with_valid_input"/>
    <testcase time="0.00199999999999534" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_works_as_expected_with_valid_input"/>
    <testcase time="0.0200000000000102" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_works_as_expected_with_valid_input"/>
    <testcase time="0.0300000000000011" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.109999999999999" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.0849999999999937" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.0619999999999976" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_works_with_only_a_single_biomarker_in_the_data_frame"/>
    <testcase time="0.00100000000000477" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_works_with_only_a_single_biomarker_in_the_data_frame"/>
    <testcase time="0.0679999999999978" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_works_with_only_a_single_biomarker_in_the_data_frame"/>
    <testcase time="0.444000000000003" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_na_str_argument_works_as_expected"/>
    <testcase time="0.134" classname="survival_biomarkers_subgroups" name="tabulate_survival_biomarkers_na_str_argument_works_as_expected"/>
    <testcase time="0.462999999999994" classname="survival_biomarkers_subgroups" name="label_all_argument_to_extract_survival_subgroups_works_as_expected"/>
    <testcase time="0.00199999999999534" classname="survival_biomarkers_subgroups" name="label_all_argument_to_extract_survival_subgroups_works_as_expected"/>
    <testcase time="0.135000000000005" classname="survival_biomarkers_subgroups" name="label_all_argument_to_extract_survival_subgroups_works_as_expected"/>
  </testsuite>
  <testsuite name="survival_coxph_pairwise" timestamp="2024-10-17T14:47:06Z" hostname="226d6849429d" tests="17" skipped="0" failures="0" errors="0" time="0.674">
    <testcase time="0.0180000000000007" classname="survival_coxph_pairwise" name="s_coxph_pairwise_works_with_default_arguments_and_no_stratification_factors"/>
    <testcase time="0.019999999999996" classname="survival_coxph_pairwise" name="s_coxph_pairwise_works_with_default_arguments_and_no_stratification_factors"/>
    <testcase time="0.0130000000000052" classname="survival_coxph_pairwise" name="s_coxph_pairwise_works_with_customized_arguments_and_no_stratification_factors"/>
    <testcase time="0.019999999999996" classname="survival_coxph_pairwise" name="s_coxph_pairwise_works_with_customized_arguments_and_no_stratification_factors"/>
    <testcase time="0.0240000000000009" classname="survival_coxph_pairwise" name="s_coxph_pairwise_works_with_default_arguments_and_stratification_factors"/>
    <testcase time="0.0240000000000009" classname="survival_coxph_pairwise" name="s_coxph_pairwise_works_with_default_arguments_and_stratification_factors"/>
    <testcase time="0.0150000000000006" classname="survival_coxph_pairwise" name="s_coxph_pairwise_works_with_customized_arguments_and_stratification_factors"/>
    <testcase time="0.019999999999996" classname="survival_coxph_pairwise" name="s_coxph_pairwise_works_with_customized_arguments_and_stratification_factors"/>
    <testcase time="0.0799999999999983" classname="survival_coxph_pairwise" name="coxph_pairwise_works_with_default_arguments_and_no_stratification_factors"/>
    <testcase time="0.0570000000000022" classname="survival_coxph_pairwise" name="coxph_pairwise_works_with_default_arguments_and_no_stratification_factors"/>
    <testcase time="0.0600000000000023" classname="survival_coxph_pairwise" name="coxph_pairwise_works_with_customized_arguments_and_no_stratification_factors"/>
    <testcase time="0.0700000000000074" classname="survival_coxph_pairwise" name="coxph_pairwise_works_with_customized_arguments_and_no_stratification_factors"/>
    <testcase time="0.0619999999999976" classname="survival_coxph_pairwise" name="coxph_pairwise_works_with_default_arguments_and_stratification_factors"/>
    <testcase time="0.0570000000000022" classname="survival_coxph_pairwise" name="coxph_pairwise_works_with_default_arguments_and_stratification_factors"/>
    <testcase time="0.0619999999999976" classname="survival_coxph_pairwise" name="coxph_pairwise_works_with_customized_arguments_and_stratification_factors"/>
    <testcase time="0.0529999999999973" classname="survival_coxph_pairwise" name="coxph_pairwise_works_with_customized_arguments_and_stratification_factors"/>
    <testcase time="0.0190000000000055" classname="survival_coxph_pairwise" name="s_coxph_pairwise_gets_p_value_log_rank_calculated_by_survival_survdiff_"/>
  </testsuite>
  <testsuite name="survival_duration_subgroups" timestamp="2024-10-17T14:47:06Z" hostname="226d6849429d" tests="37" skipped="0" failures="0" errors="0" time="5.29">
    <testcase time="0.111999999999995" classname="survival_duration_subgroups" name="extract_survival_subgroups_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0240000000000009" classname="survival_duration_subgroups" name="extract_survival_subgroups_functions_as_expected_with_valid_input_and_default_arguments"/>
    <testcase time="0.0870000000000033" classname="survival_duration_subgroups" name="extract_survival_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.019999999999996" classname="survival_duration_subgroups" name="extract_survival_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.00199999999999534" classname="survival_duration_subgroups" name="extract_survival_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.0190000000000055" classname="survival_duration_subgroups" name="extract_survival_subgroups_works_as_expected_with_groups_lists"/>
    <testcase time="0.0150000000000006" classname="survival_duration_subgroups" name="extract_survival_subgroups_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.0219999999999914" classname="survival_duration_subgroups" name="extract_survival_subgroups_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.0400000000000063" classname="survival_duration_subgroups" name="a_survival_subgroups_functions_as_expected_with_valid_input"/>
    <testcase time="0.0510000000000019" classname="survival_duration_subgroups" name="a_survival_subgroups_functions_as_expected_with_valid_input"/>
    <testcase time="0.423000000000002" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_functions_as_expected_with_valid_input"/>
    <testcase time="0.126999999999995" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_functions_as_expected_with_valid_input"/>
    <testcase time="0.155000000000001" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.0930000000000035" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_functions_as_expected_with_NULL_subgroups"/>
    <testcase time="0.333999999999989" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_functions_as_expected_with_extreme_values_in_subgroups"/>
    <testcase time="0.102000000000004" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_functions_as_expected_with_extreme_values_in_subgroups"/>
    <testcase time="0.0960000000000036" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_functions_as_expected_when_one_arm_has_0_records"/>
    <testcase time="0.361999999999995" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_functions_as_expected_when_one_arm_has_0_records"/>
    <testcase time="0.13600000000001" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_functions_as_expected_when_one_arm_has_0_records"/>
    <testcase time="0.108999999999995" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_works_correctly_with_both_n_tot_and_n_tot_events_in_vars_"/>
    <testcase time="0.105999999999995" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_works_correctly_with_both_n_tot_and_n_tot_events_in_vars_"/>
    <testcase time="0.0210000000000008" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_works_correctly_with_both_n_tot_and_n_tot_events_in_vars_"/>
    <testcase time="0.364000000000004" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_works_correctly_with_both_n_tot_and_n_tot_events_in_vars_"/>
    <testcase time="0.0280000000000058" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_works_correctly_with_both_n_tot_and_n_tot_events_in_vars_"/>
    <testcase time="0.10799999999999" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_works_correctly_with_both_n_tot_and_n_tot_events_in_vars_"/>
    <testcase time="0.0210000000000008" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_works_correctly_with_both_n_tot_and_n_tot_events_in_vars_"/>
    <testcase time="0.00500000000000966" classname="survival_duration_subgroups" name="d_survival_subgroups_colvars_functions_as_expected_with_valid_input"/>
    <testcase time="0.019999999999996" classname="survival_duration_subgroups" name="d_survival_subgroups_colvars_functions_as_expected_with_valid_input"/>
    <testcase time="0.435000000000002" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_.formats_argument_works_as_expected"/>
    <testcase time="0.114999999999995" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_.formats_argument_works_as_expected"/>
    <testcase time="0.438000000000002" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_na_str_argument_works_as_expected"/>
    <testcase time="0.114999999999995" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_na_str_argument_works_as_expected"/>
    <testcase time="0.447000000000003" classname="survival_duration_subgroups" name="label_all_argument_to_extract_survival_subgroups_works_as_expected"/>
    <testcase time="0.00199999999999534" classname="survival_duration_subgroups" name="label_all_argument_to_extract_survival_subgroups_works_as_expected"/>
    <testcase time="0.115000000000009" classname="survival_duration_subgroups" name="label_all_argument_to_extract_survival_subgroups_works_as_expected"/>
    <testcase time="0.49499999999999" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_riskdiff_argument_works_as_expected"/>
    <testcase time="0.126000000000005" classname="survival_duration_subgroups" name="tabulate_survival_subgroups_riskdiff_argument_works_as_expected"/>
  </testsuite>
  <testsuite name="survival_time" timestamp="2024-10-17T14:47:11Z" hostname="226d6849429d" tests="16" skipped="0" failures="0" errors="0" time="0.576">
    <testcase time="0.0160000000000053" classname="survival_time" name="s_surv_time_works_with_default_arguments"/>
    <testcase time="0.0210000000000008" classname="survival_time" name="s_surv_time_works_with_default_arguments"/>
    <testcase time="0.00999999999999091" classname="survival_time" name="s_surv_time_works_with_customized_arguments"/>
    <testcase time="0.0210000000000008" classname="survival_time" name="s_surv_time_works_with_customized_arguments"/>
    <testcase time="0.0180000000000007" classname="survival_time" name="a_surv_time_works_with_default_arguments"/>
    <testcase time="0.0279999999999916" classname="survival_time" name="a_surv_time_works_with_default_arguments"/>
    <testcase time="0.0130000000000052" classname="survival_time" name="a_surv_time_works_with_customized_arguments"/>
    <testcase time="0.0240000000000009" classname="survival_time" name="a_surv_time_works_with_customized_arguments"/>
    <testcase time="0.0570000000000022" classname="survival_time" name="surv_time_works_with_default_arguments"/>
    <testcase time="0.0619999999999976" classname="survival_time" name="surv_time_works_with_default_arguments"/>
    <testcase time="0.0600000000000023" classname="survival_time" name="surv_time_works_with_customized_arguments"/>
    <testcase time="0.0799999999999983" classname="survival_time" name="surv_time_works_with_customized_arguments"/>
    <testcase time="0.0739999999999981" classname="survival_time" name="surv_time_works_with_referential_footnotes"/>
    <testcase time="0.0760000000000076" classname="survival_time" name="surv_time_works_with_referential_footnotes"/>
    <testcase time="0.00800000000000978" classname="survival_time" name="a_surv_time_works_when_is_event_only_has_TRUE_observations"/>
    <testcase time="0.00799999999999557" classname="survival_time" name="a_surv_time_works_when_is_event_only_has_FALSE_observations"/>
  </testsuite>
  <testsuite name="survival_timepoint" timestamp="2024-10-17T14:47:12Z" hostname="226d6849429d" tests="21" skipped="0" failures="0" errors="0" time="0.861">
    <testcase time="0.0150000000000006" classname="survival_timepoint" name="s_surv_timepoint_works_with_default_arguments"/>
    <testcase time="0.019999999999996" classname="survival_timepoint" name="s_surv_timepoint_works_with_default_arguments"/>
    <testcase time="0.0100000000000051" classname="survival_timepoint" name="s_surv_timepoint_works_with_customized_arguments"/>
    <testcase time="0.0189999999999912" classname="survival_timepoint" name="s_surv_timepoint_works_with_customized_arguments"/>
    <testcase time="0.0100000000000051" classname="survival_timepoint" name="s_surv_timepoint_also_works_when_there_are_0_patients_at_risk"/>
    <testcase time="0.00199999999999534" classname="survival_timepoint" name="s_surv_timepoint_also_works_when_there_are_0_patients_at_risk"/>
    <testcase time="0.0190000000000055" classname="survival_timepoint" name="s_surv_timepoint_also_works_when_there_are_0_patients_at_risk"/>
    <testcase time="0.0819999999999936" classname="survival_timepoint" name="surv_timepoint_works_with_default_arguments"/>
    <testcase time="0.0580000000000069" classname="survival_timepoint" name="surv_timepoint_works_with_default_arguments"/>
    <testcase time="0.0579999999999927" classname="survival_timepoint" name="surv_timepoint_works_with_customized_arguments"/>
    <testcase time="0.0560000000000116" classname="survival_timepoint" name="surv_timepoint_works_with_customized_arguments"/>
    <testcase time="0.0159999999999911" classname="survival_timepoint" name="s_surv_timepoint_diff_works_with_default_arguments_for_comparison_group"/>
    <testcase time="0.0200000000000102" classname="survival_timepoint" name="s_surv_timepoint_diff_works_with_default_arguments_for_comparison_group"/>
    <testcase time="0.0149999999999864" classname="survival_timepoint" name="s_surv_timepoint_diff_works_with_customized_arguments_for_comparison_arm"/>
    <testcase time="0.0290000000000106" classname="survival_timepoint" name="s_surv_timepoint_diff_works_with_customized_arguments_for_comparison_arm"/>
    <testcase time="0.0799999999999983" classname="survival_timepoint" name="surv_timepoint_for_survival_diff_works_with_default_arguments"/>
    <testcase time="0.0570000000000022" classname="survival_timepoint" name="surv_timepoint_for_survival_diff_works_with_default_arguments"/>
    <testcase time="0.0609999999999928" classname="survival_timepoint" name="surv_timepoint_for_survival_diff_works_with_customized_arguments"/>
    <testcase time="0.0550000000000068" classname="survival_timepoint" name="surv_timepoint_for_survival_diff_works_with_customized_arguments"/>
    <testcase time="0.109999999999999" classname="survival_timepoint" name="surv_timepoint_works_with_method_both"/>
    <testcase time="0.0690000000000026" classname="survival_timepoint" name="surv_timepoint_works_with_method_both"/>
  </testsuite>
  <testsuite name="test_proportion_diff" timestamp="2024-10-17T14:47:13Z" hostname="226d6849429d" tests="23" skipped="0" failures="0" errors="0" time="0.662">
    <testcase time="0.00999999999999091" classname="test_proportion_diff" name="prop_chisq_returns_right_result"/>
    <testcase time="0.019999999999996" classname="test_proportion_diff" name="prop_chisq_returns_right_result"/>
    <testcase time="0.00600000000000023" classname="test_proportion_diff" name="prop_cmh_returns_right_result"/>
    <testcase time="0.0200000000000102" classname="test_proportion_diff" name="prop_cmh_returns_right_result"/>
    <testcase time="0.00799999999999557" classname="test_proportion_diff" name="prop_cmh_also_works_when_there_are_strata_with_just_one_observation"/>
    <testcase time="0.00199999999999534" classname="test_proportion_diff" name="prop_cmh_also_works_when_there_are_strata_with_just_one_observation"/>
    <testcase time="0.0190000000000055" classname="test_proportion_diff" name="prop_cmh_also_works_when_there_are_strata_with_just_one_observation"/>
    <testcase time="0.00600000000000023" classname="test_proportion_diff" name="prop_fisher_returns_right_result"/>
    <testcase time="0.019999999999996" classname="test_proportion_diff" name="prop_fisher_returns_right_result"/>
    <testcase time="0.0630000000000024" classname="test_proportion_diff" name="prop_schouten_returns_right_result"/>
    <testcase time="0.0220000000000056" classname="test_proportion_diff" name="prop_schouten_returns_right_result"/>
    <testcase time="0.00699999999999079" classname="test_proportion_diff" name="s_test_proportion_diff_and_d_test_proportion_diff_return_right_result"/>
    <testcase time="0.0200000000000102" classname="test_proportion_diff" name="s_test_proportion_diff_and_d_test_proportion_diff_return_right_result"/>
    <testcase time="0.0569999999999879" classname="test_proportion_diff" name="test_proportion_diff_returns_right_result"/>
    <testcase time="0.0430000000000064" classname="test_proportion_diff" name="test_proportion_diff_returns_right_result"/>
    <testcase time="0.0370000000000061" classname="test_proportion_diff" name="test_proportion_diff_edge_case_all_responder_by_chisq"/>
    <testcase time="0.0419999999999874" classname="test_proportion_diff" name="test_proportion_diff_edge_case_all_responder_by_chisq"/>
    <testcase time="0.0360000000000014" classname="test_proportion_diff" name="test_proportion_diff_edge_case_all_responder_by_schouten"/>
    <testcase time="0.0560000000000116" classname="test_proportion_diff" name="test_proportion_diff_edge_case_all_responder_by_schouten"/>
    <testcase time="0.0389999999999873" classname="test_proportion_diff" name="test_proportion_diff_edge_case_all_responder_by_fisher"/>
    <testcase time="0.0450000000000017" classname="test_proportion_diff" name="test_proportion_diff_edge_case_all_responder_by_fisher"/>
    <testcase time="0.0390000000000015" classname="test_proportion_diff" name="test_proportion_diff_edge_case_all_responder_by_CMH"/>
    <testcase time="0.0450000000000017" classname="test_proportion_diff" name="test_proportion_diff_edge_case_all_responder_by_CMH"/>
  </testsuite>
  <testsuite name="utils" timestamp="2024-10-17T14:47:14Z" hostname="226d6849429d" tests="140" skipped="0" failures="0" errors="0" time="1.741">
    <testcase time="0.0130000000000052" classname="utils" name="f_conf_level_works_for_proportion"/>
    <testcase time="0.019999999999996" classname="utils" name="f_conf_level_works_for_proportion"/>
    <testcase time="0.007000000000005" classname="utils" name="f_conf_level_fails_for_non_proportion_input"/>
    <testcase time="0.00499999999999545" classname="utils" name="f_conf_level_fails_for_non_proportion_input"/>
    <testcase time="0.00400000000000489" classname="utils" name="f_pval_works_for_numeric_input"/>
    <testcase time="0.019999999999996" classname="utils" name="f_pval_works_for_numeric_input"/>
    <testcase time="0.007000000000005" classname="utils" name="f_pval_fails_for_non_numeric_input"/>
    <testcase time="0.00400000000000489" classname="utils" name="f_pval_fails_for_non_numeric_input"/>
    <testcase time="0.00400000000000489" classname="utils" name="make_names_works_as_expected"/>
    <testcase time="0.0300000000000011" classname="utils" name="make_names_works_as_expected"/>
    <testcase time="0.00599999999998602" classname="utils" name="get_covariates_works_for_a_character_vector"/>
    <testcase time="0.0220000000000056" classname="utils" name="get_covariates_works_for_a_character_vector"/>
    <testcase time="0.00900000000000034" classname="utils" name="get_covariates_fails_for_non_character_input"/>
    <testcase time="0.00400000000000489" classname="utils" name="get_covariates_fails_for_non_character_input"/>
    <testcase time="0.00600000000000023" classname="utils" name="to_n_fails_for_non_character_input"/>
    <testcase time="0.00300000000000011" classname="utils" name="to_n_fails_for_non_character_input"/>
    <testcase time="0.00199999999999534" classname="utils" name="to_n_fails_for_non_character_input"/>
    <testcase time="0.00499999999999545" classname="utils" name="to_n_fails_for_non_character_input"/>
    <testcase time="0.00400000000000489" classname="utils" name="month2day_works_correctly"/>
    <testcase time="0.0210000000000008" classname="utils" name="month2day_works_correctly"/>
    <testcase time="0.00400000000000489" classname="utils" name="day2month_works_correctly"/>
    <testcase time="0.019999999999996" classname="utils" name="day2month_works_correctly"/>
    <testcase time="0.00499999999999545" classname="utils" name="empty_vector_if_na_works_correctly"/>
    <testcase time="0.019999999999996" classname="utils" name="empty_vector_if_na_works_correctly"/>
    <testcase time="0.00600000000000023" classname="utils" name="extract_by_name_works_for_NULL_input"/>
    <testcase time="0.00500000000000966" classname="utils" name="extract_by_name_works_for_non_NULL_input"/>
    <testcase time="0.00499999999999545" classname="utils" name="extract_by_name_returns_NULL_when_there_is_no_overlap"/>
    <testcase time="0.019999999999996" classname="utils" name="extract_by_name_returns_NULL_when_there_is_no_overlap"/>
    <testcase time="0.00500000000000966" classname="utils" name="aesi_label_works_as_expected_for_SMQ"/>
    <testcase time="0.0189999999999912" classname="utils" name="aesi_label_works_as_expected_for_SMQ"/>
    <testcase time="0.00500000000000966" classname="utils" name="aesi_label_works_as_expected_for_CQ"/>
    <testcase time="0.019999999999996" classname="utils" name="aesi_label_works_as_expected_for_CQ"/>
    <testcase time="0.00499999999999545" classname="utils" name="aesi_label_works_as_expected_when_input_includes_multiple_values"/>
    <testcase time="0.0190000000000055" classname="utils" name="aesi_label_works_as_expected_when_input_includes_multiple_values"/>
    <testcase time="0.00199999999999534" classname="utils" name="aesi_label_works_as_expected_when_input_includes_multiple_values"/>
    <testcase time="0.0190000000000055" classname="utils" name="aesi_label_works_as_expected_when_input_includes_multiple_values"/>
    <testcase time="0.00999999999999091" classname="utils" name="get_smooths_dimensions_without_grouping"/>
    <testcase time="0.00200000000000955" classname="utils" name="get_smooths_dimensions_without_grouping"/>
    <testcase time="0.00999999999999091" classname="utils" name="get_smooths_dimensions_with_grouping"/>
    <testcase time="0.00200000000000955" classname="utils" name="get_smooths_dimensions_with_grouping"/>
    <testcase time="0.0139999999999958" classname="utils" name="get_smooths_proper_splits_across_groups"/>
    <testcase time="0.0319999999999965" classname="utils" name="get_smooths_relative_intervals_level"/>
    <testcase time="0.00400000000000489" classname="utils" name="get_smooths_relative_intervals_level"/>
    <testcase time="0.00499999999999545" classname="utils" name="n_available_works_as_expected"/>
    <testcase time="0.0220000000000056" classname="utils" name="n_available_works_as_expected"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_INT_no_zero_len_data_no_NAs_no_Inf_and_with_all_default_options"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_INT_no_zero_len_data_no_NAs_no_Inf_and_with_all_default_options"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_INT_no_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_d_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_INT_no_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_d_"/>
    <testcase time="0.00500000000000966" classname="utils" name="range_noinf_for_INT_no_zero_len_data_no_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_INT_no_zero_len_data_no_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_INT_no_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_INT_no_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.00500000000000966" classname="utils" name="range_noinf_for_INT_no_zero_len_data_with_NAs_no_Inf_and_with_default_options"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_INT_no_zero_len_data_with_NAs_no_Inf_and_with_default_options"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_INT_no_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_INT_no_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.00500000000000966" classname="utils" name="range_noinf_for_INT_no_zero_len_data_with_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_INT_no_zero_len_data_with_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_INT_no_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.0200000000000102" classname="utils" name="range_noinf_for_INT_no_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_INT_with_zero_len_data_no_NAs_no_Inf_and_with_all_default_options"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_INT_with_zero_len_data_no_NAs_no_Inf_and_with_all_default_options"/>
    <testcase time="0.00400000000000489" classname="utils" name="range_noinf_for_INT_with_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_INT_with_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.00500000000000966" classname="utils" name="range_noinf_for_INT_with_zero_len_data_no_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.032999999999987" classname="utils" name="range_noinf_for_INT_with_zero_len_data_no_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.00500000000000966" classname="utils" name="range_noinf_for_INT_with_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_INT_with_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_INT_with_zero_len_data_with_NAs_no_Inf_and_with_default_options"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_INT_with_zero_len_data_with_NAs_no_Inf_and_with_default_options"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_INT_with_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_INT_with_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.00600000000000023" classname="utils" name="range_noinf_for_INT_with_zero_len_data_with_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_INT_with_zero_len_data_with_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_INT_with_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.0200000000000102" classname="utils" name="range_noinf_for_INT_with_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_no_Inf_and_with_all_default_options"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_no_Inf_and_with_all_default_options"/>
    <testcase time="0.00500000000000966" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.0200000000000102" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.0189999999999912" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.00500000000000966" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_with_Inf_and_with_all_default_options"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_with_Inf_and_with_all_default_options"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_with_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.0190000000000055" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_with_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.0130000000000052" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_with_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.0259999999999962" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_with_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_with_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.0200000000000102" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_no_NAs_with_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_no_Inf_and_with_default_options"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_no_Inf_and_with_default_options"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.00600000000000023" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.0200000000000102" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.00600000000000023" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_with_Inf_and_with_default_options"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_with_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_with_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_with_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_with_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.00500000000000966" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_with_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_DOUBLE_no_zero_len_data_with_NAs_with_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_no_Inf_and_with_all_default_options"/>
    <testcase time="0.0200000000000102" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_no_Inf_and_with_all_default_options"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.00500000000000966" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.0309999999999917" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.007000000000005" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_with_Inf_and_with_all_default_options"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_with_Inf_and_with_all_default_options"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_with_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.0200000000000102" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_with_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_with_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_with_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_with_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_no_NAs_with_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.00499999999999545" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_no_Inf_and_with_default_options"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_no_Inf_and_with_default_options"/>
    <testcase time="0.00600000000000023" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.00500000000000966" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_no_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.00600000000000023" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.019999999999996" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_no_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.00600000000000023" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_with_Inf_and_with_default_options"/>
    <testcase time="0.0249999999999915" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_with_Inf_and_with_default_options"/>
    <testcase time="0.00500000000000966" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_with_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.0279999999999916" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_with_Inf_with_na.rm_TRUE_finite_FALSE_def_"/>
    <testcase time="0.007000000000005" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_with_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.027000000000001" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_with_Inf_with_na.rm_FALSE_def_finite_TRUE_"/>
    <testcase time="0.00600000000000023" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_with_Inf_with_na.rm_TRUE_finite_TRUE_"/>
    <testcase time="0.0210000000000008" classname="utils" name="range_noinf_for_DOUBLE_with_zero_len_data_with_NAs_with_Inf_with_na.rm_TRUE_finite_TRUE_"/>
  </testsuite>
  <testsuite name="utils_checkmate" timestamp="2024-10-17T14:47:15Z" hostname="226d6849429d" tests="42" skipped="0" failures="0" errors="0" time="0.188">
    <testcase time="0.00999999999999091" classname="utils_checkmate" name="assert_list_of_variables_is_silent_with_healthy_input"/>
    <testcase time="0.00200000000000955" classname="utils_checkmate" name="assert_list_of_variables_is_silent_with_healthy_input"/>
    <testcase time="0.000999999999990564" classname="utils_checkmate" name="assert_list_of_variables_is_silent_with_healthy_input"/>
    <testcase time="0.00800000000000978" classname="utils_checkmate" name="assert_list_of_variables_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_list_of_variables_fails_with_wrong_input"/>
    <testcase time="0.00400000000000489" classname="utils_checkmate" name="assert_list_of_variables_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_list_of_variables_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_df_with_variables_is_silent_with_healthy_input"/>
    <testcase time="0.00200000000000955" classname="utils_checkmate" name="assert_df_with_variables_is_silent_with_healthy_input"/>
    <testcase time="0.00199999999999534" classname="utils_checkmate" name="assert_df_with_variables_is_silent_with_healthy_input"/>
    <testcase time="0.00799999999999557" classname="utils_checkmate" name="assert_df_with_variables_fails_with_wrong_input"/>
    <testcase time="0.00500000000000966" classname="utils_checkmate" name="assert_df_with_variables_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_df_with_variables_fails_with_wrong_input"/>
    <testcase time="0.00400000000000489" classname="utils_checkmate" name="assert_df_with_variables_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_df_with_variables_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_valid_factor_is_silent_with_healthy_input"/>
    <testcase time="0.00200000000000955" classname="utils_checkmate" name="assert_valid_factor_is_silent_with_healthy_input"/>
    <testcase time="0.00799999999999557" classname="utils_checkmate" name="assert_valid_factor_fails_with_wrong_input"/>
    <testcase time="0.00400000000000489" classname="utils_checkmate" name="assert_valid_factor_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_valid_factor_fails_with_wrong_input"/>
    <testcase time="0.00400000000000489" classname="utils_checkmate" name="assert_valid_factor_fails_with_wrong_input"/>
    <testcase time="0.00600000000000023" classname="utils_checkmate" name="assert_df_with_factors_is_silent_with_healthy_input"/>
    <testcase time="0.00199999999999534" classname="utils_checkmate" name="assert_df_with_factors_is_silent_with_healthy_input"/>
    <testcase time="0.00199999999999534" classname="utils_checkmate" name="assert_df_with_factors_is_silent_with_healthy_input"/>
    <testcase time="0.00200000000000955" classname="utils_checkmate" name="assert_df_with_factors_is_silent_with_healthy_input"/>
    <testcase time="0.00799999999999557" classname="utils_checkmate" name="assert_df_with_factors_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_df_with_factors_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_df_with_factors_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_df_with_factors_fails_with_wrong_input"/>
    <testcase time="0.00500000000000966" classname="utils_checkmate" name="assert_df_with_factors_fails_with_wrong_input"/>
    <testcase time="0.00399999999999068" classname="utils_checkmate" name="assert_df_with_factors_fails_with_wrong_input"/>
    <testcase time="0.00500000000000966" classname="utils_checkmate" name="assert_df_with_factors_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_df_with_factors_fails_with_wrong_input"/>
    <testcase time="0.00499999999999545" classname="utils_checkmate" name="assert_proportion_value_is_silent_with_healthy_input"/>
    <testcase time="0.00100000000000477" classname="utils_checkmate" name="assert_proportion_value_is_silent_with_healthy_input"/>
    <testcase time="0.00199999999999534" classname="utils_checkmate" name="assert_proportion_value_is_silent_with_healthy_input"/>
    <testcase time="0.00200000000000955" classname="utils_checkmate" name="assert_proportion_value_is_silent_with_healthy_input"/>
    <testcase time="0.00699999999999079" classname="utils_checkmate" name="assert_proportion_value_fails_with_wrong_input"/>
    <testcase time="0.00500000000000966" classname="utils_checkmate" name="assert_proportion_value_fails_with_wrong_input"/>
    <testcase time="0.00399999999999068" classname="utils_checkmate" name="assert_proportion_value_fails_with_wrong_input"/>
    <testcase time="0.00500000000000966" classname="utils_checkmate" name="assert_proportion_value_fails_with_wrong_input"/>
    <testcase time="0.00399999999999068" classname="utils_checkmate" name="assert_proportion_value_fails_with_wrong_input"/>
  </testsuite>
  <testsuite name="utils_default_stats_formats_labels" timestamp="2024-10-17T14:47:16Z" hostname="226d6849429d" tests="56" skipped="0" failures="0" errors="0" time="0.456">
    <testcase time="0.0100000000000051" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_defaults"/>
    <testcase time="0.019999999999996" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_defaults"/>
    <testcase time="0.00200000000000955" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_defaults"/>
    <testcase time="0.019999999999996" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_defaults"/>
    <testcase time="0.00199999999999534" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_defaults"/>
    <testcase time="0.0349999999999966" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_defaults"/>
    <testcase time="0.00200000000000955" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_defaults"/>
    <testcase time="0.0219999999999914" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_defaults"/>
    <testcase time="0.00500000000000966" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_defaults"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_defaults"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_defaults"/>
    <testcase time="0.00600000000000023" classname="utils_default_stats_formats_labels" name="get_stats_works_well_with_pval"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_stats_works_well_with_pval"/>
    <testcase time="0.00199999999999534" classname="utils_default_stats_formats_labels" name="get_stats_works_well_with_pval"/>
    <testcase time="0.00499999999999545" classname="utils_default_stats_formats_labels" name="get_stats_works_well_with_pval"/>
    <testcase time="0.00500000000000966" classname="utils_default_stats_formats_labels" name="get_stats_works_well_with_pval"/>
    <testcase time="0.00399999999999068" classname="utils_default_stats_formats_labels" name="get_stats_works_well_with_pval"/>
    <testcase time="0.00500000000000966" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_selection_of_stats"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_selection_of_stats"/>
    <testcase time="0.00399999999999068" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_selection_of_stats"/>
    <testcase time="0.00500000000000966" classname="utils_default_stats_formats_labels" name="get_stats_works_as_expected_for_selection_of_stats"/>
    <testcase time="0.00499999999999545" classname="utils_default_stats_formats_labels" name="get_formats_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_formats_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_formats_from_stats_works_as_expected"/>
    <testcase time="0.00199999999999534" classname="utils_default_stats_formats_labels" name="get_formats_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_formats_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_formats_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_formats_from_stats_works_as_expected"/>
    <testcase time="0.00499999999999545" classname="utils_default_stats_formats_labels" name="get_labels_from_stats_works_as_expected"/>
    <testcase time="0.0210000000000008" classname="utils_default_stats_formats_labels" name="get_labels_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_labels_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_labels_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_labels_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_labels_from_stats_works_as_expected"/>
    <testcase time="0.00200000000000955" classname="utils_default_stats_formats_labels" name="get_labels_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_labels_from_stats_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="utils_default_stats_formats_labels" name="get_indents_from_stats_works_as_expected"/>
    <testcase time="0.0210000000000008" classname="utils_default_stats_formats_labels" name="get_indents_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_indents_from_stats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="get_indents_from_stats_works_as_expected"/>
    <testcase time="0.00199999999999534" classname="utils_default_stats_formats_labels" name="get_indents_from_stats_works_as_expected"/>
    <testcase time="0.00199999999999534" classname="utils_default_stats_formats_labels" name="get_indents_from_stats_works_as_expected"/>
    <testcase time="0.0250000000000057" classname="utils_default_stats_formats_labels" name="labels_use_control_works_as_expected"/>
    <testcase time="0.0209999999999866" classname="utils_default_stats_formats_labels" name="labels_use_control_works_as_expected"/>
    <testcase time="0.0150000000000006" classname="utils_default_stats_formats_labels" name="summary_formats_works_as_expected"/>
    <testcase time="0.00200000000000955" classname="utils_default_stats_formats_labels" name="summary_formats_works_as_expected"/>
    <testcase time="0.019999999999996" classname="utils_default_stats_formats_labels" name="summary_formats_works_as_expected"/>
    <testcase time="0.0120000000000005" classname="utils_default_stats_formats_labels" name="summary_formats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="summary_formats_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="summary_formats_works_as_expected"/>
    <testcase time="0.0229999999999961" classname="utils_default_stats_formats_labels" name="summary_labels_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils_default_stats_formats_labels" name="summary_labels_works_as_expected"/>
    <testcase time="0.0260000000000105" classname="utils_default_stats_formats_labels" name="summary_labels_works_as_expected"/>
    <testcase time="0.0120000000000005" classname="utils_default_stats_formats_labels" name="summary_labels_works_as_expected"/>
    <testcase time="0.00199999999999534" classname="utils_default_stats_formats_labels" name="summary_labels_works_as_expected"/>
    <testcase time="0.0210000000000008" classname="utils_default_stats_formats_labels" name="summary_labels_works_as_expected"/>
  </testsuite>
  <testsuite name="utils_factor" timestamp="2024-10-17T14:47:16Z" hostname="226d6849429d" tests="47" skipped="0" failures="0" errors="0" time="0.46">
    <testcase time="0.012999999999991" classname="utils_factor" name="combine_vectors_works_correctly"/>
    <testcase time="0.00800000000000978" classname="utils_factor" name="as_factor_keep_attributes_works_correctly_for_a_character_vector"/>
    <testcase time="0.00199999999999534" classname="utils_factor" name="as_factor_keep_attributes_works_correctly_for_a_character_vector"/>
    <testcase time="0.0210000000000008" classname="utils_factor" name="as_factor_keep_attributes_works_correctly_for_a_character_vector"/>
    <testcase time="0.00799999999999557" classname="utils_factor" name="as_factor_keep_attributes_converts_empty_strings_for_a_character_vector"/>
    <testcase time="0.00100000000000477" classname="utils_factor" name="as_factor_keep_attributes_converts_empty_strings_for_a_character_vector"/>
    <testcase time="0.0210000000000008" classname="utils_factor" name="as_factor_keep_attributes_converts_empty_strings_for_a_character_vector"/>
    <testcase time="0.00799999999999557" classname="utils_factor" name="as_factor_keep_attributes_shows_correct_name_of_vector_in_warning"/>
    <testcase time="0.00500000000000966" classname="utils_factor" name="as_factor_keep_attributes_does_not_modify_a_factor_at_all"/>
    <testcase time="0.000999999999990564" classname="utils_factor" name="as_factor_keep_attributes_does_not_modify_a_factor_at_all"/>
    <testcase time="0.019999999999996" classname="utils_factor" name="as_factor_keep_attributes_does_not_modify_a_factor_at_all"/>
    <testcase time="0.00500000000000966" classname="utils_factor" name="bins_percent_labels_works_as_expected"/>
    <testcase time="0.019999999999996" classname="utils_factor" name="bins_percent_labels_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="utils_factor" name="bins_percent_labels_works_as_expected"/>
    <testcase time="0.019999999999996" classname="utils_factor" name="bins_percent_labels_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="utils_factor" name="bins_percent_labels_works_as_expected"/>
    <testcase time="0.019999999999996" classname="utils_factor" name="bins_percent_labels_works_as_expected"/>
    <testcase time="0.00499999999999545" classname="utils_factor" name="cut_quantile_bins_works_as_expected_with_default_settings"/>
    <testcase time="0.00100000000000477" classname="utils_factor" name="cut_quantile_bins_works_as_expected_with_default_settings"/>
    <testcase time="0.019999999999996" classname="utils_factor" name="cut_quantile_bins_works_as_expected_with_default_settings"/>
    <testcase time="0.00300000000000011" classname="utils_factor" name="cut_quantile_bins_works_as_expected_with_default_settings"/>
    <testcase time="0.00200000000000955" classname="utils_factor" name="cut_quantile_bins_works_as_expected_with_default_settings"/>
    <testcase time="0.00300000000000011" classname="utils_factor" name="cut_quantile_bins_works_as_expected_with_default_settings"/>
    <testcase time="0.00499999999999545" classname="utils_factor" name="cut_quantile_bins_works_with_custom_quantiles"/>
    <testcase time="0.0189999999999912" classname="utils_factor" name="cut_quantile_bins_works_with_custom_quantiles"/>
    <testcase time="0.0130000000000052" classname="utils_factor" name="cut_quantile_bins_works_with_custom_labels"/>
    <testcase time="0.027000000000001" classname="utils_factor" name="cut_quantile_bins_works_with_custom_labels"/>
    <testcase time="0.007000000000005" classname="utils_factor" name="cut_quantile_bins_preserves_NAs_in_result"/>
    <testcase time="0.00499999999999545" classname="utils_factor" name="cut_quantile_bins_also_works_when_there_are_only_NAs"/>
    <testcase time="0.00100000000000477" classname="utils_factor" name="cut_quantile_bins_also_works_when_there_are_only_NAs"/>
    <testcase time="0.0210000000000008" classname="utils_factor" name="cut_quantile_bins_also_works_when_there_are_only_NAs"/>
    <testcase time="0.00199999999999534" classname="utils_factor" name="cut_quantile_bins_also_works_when_there_are_only_NAs"/>
    <testcase time="0.00799999999999557" classname="utils_factor" name="cut_quantile_bins_gives_error_message_if_there_are_duplicate_quantiles"/>
    <testcase time="0.00600000000000023" classname="utils_factor" name="cut_quantile_bins_does_work_also_if_an_empty_probs_vector_is_used"/>
    <testcase time="0.00200000000000955" classname="utils_factor" name="cut_quantile_bins_does_work_also_if_an_empty_probs_vector_is_used"/>
    <testcase time="0.00199999999999534" classname="utils_factor" name="cut_quantile_bins_does_work_also_if_an_empty_probs_vector_is_used"/>
    <testcase time="0.00499999999999545" classname="utils_factor" name="fct_discard_works_as_expected"/>
    <testcase time="0.0200000000000102" classname="utils_factor" name="fct_discard_works_as_expected"/>
    <testcase time="0.00499999999999545" classname="utils_factor" name="fct_explicit_na_if_works_as_expected_with_factor_input"/>
    <testcase time="0.019999999999996" classname="utils_factor" name="fct_explicit_na_if_works_as_expected_with_factor_input"/>
    <testcase time="0.00600000000000023" classname="utils_factor" name="fct_collapse_only_works_as_expected"/>
    <testcase time="0.019999999999996" classname="utils_factor" name="fct_collapse_only_works_as_expected"/>
    <testcase time="0.00500000000000966" classname="utils_factor" name="fct_collapse_only_uses_the_customized_na_level_as_expected"/>
    <testcase time="0.0189999999999912" classname="utils_factor" name="fct_collapse_only_uses_the_customized_na_level_as_expected"/>
    <testcase time="0.00500000000000966" classname="utils_factor" name="fct_collapse_only_works_as_expected_with_character_input"/>
    <testcase time="0.019999999999996" classname="utils_factor" name="fct_collapse_only_works_as_expected_with_character_input"/>
    <testcase time="0.00799999999999557" classname="utils_factor" name="fct_collapse_only_gives_comprehensible_error_when_.na_level_is_contained_in_new_levels"/>
  </testsuite>
  <testsuite name="utils_ggplot" timestamp="2024-10-17T14:47:16Z" hostname="226d6849429d" tests="6" skipped="3" failures="0" errors="0" time="0.484">
    <testcase time="0.183000000000007" classname="utils_ggplot" name="rtable2gg_works_as_expected"/>
    <testcase time="0.000999999999990564" classname="utils_ggplot" name="rtable2gg_works_as_expected">
      <skipped message="Reason: On CI ('test-utils_ggplot.R:19:3')"/>
    </testcase>
    <testcase time="0.27000000000001" classname="utils_ggplot" name="rtable2gg_works_with_multiple_column_splits"/>
    <testcase time="0.000999999999990564" classname="utils_ggplot" name="rtable2gg_works_with_multiple_column_splits">
      <skipped message="Reason: On CI ('test-utils_ggplot.R:53:3')"/>
    </testcase>
    <testcase time="0.0280000000000058" classname="utils_ggplot" name="df2gg_works_as_expected"/>
    <testcase time="0.00100000000000477" classname="utils_ggplot" name="df2gg_works_as_expected">
      <skipped message="Reason: On CI ('test-utils_ggplot.R:59:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="utils_grid" timestamp="2024-10-17T14:47:17Z" hostname="226d6849429d" tests="8" skipped="0" failures="0" errors="0" time="0.193">
    <testcase time="0.0309999999999917" classname="utils_grid" name="stack_grobs_works_with_default_settings"/>
    <testcase time="0.0150000000000006" classname="utils_grid" name="stack_grobs_works_with_a_single_grob"/>
    <testcase time="0.0310000000000059" classname="utils_grid" name="arrange_grobs_works_with_default_settings"/>
    <testcase time="0.0210000000000008" classname="utils_grid" name="arrange_grobs_works_with_multiple_dimensions"/>
    <testcase time="0.0309999999999917" classname="utils_grid" name="arrange_grobs_works_with_a_single_column"/>
    <testcase time="0.0319999999999965" classname="utils_grid" name="arrange_grobs_returns_error_when_invalid_dimensions_are_given"/>
    <testcase time="0.0160000000000053" classname="utils_grid" name="arrange_grobs_works_with_a_single_grob"/>
    <testcase time="0.0160000000000053" classname="utils_grid" name="draw_grob_works_with_viewport_specified"/>
  </testsuite>
  <testsuite name="utils_rtables" timestamp="2024-10-17T14:47:17Z" hostname="226d6849429d" tests="59" skipped="0" failures="0" errors="0" time="4.089">
    <testcase time="0.783000000000001" classname="utils_rtables" name="to_string_matrix_works_correctly"/>
    <testcase time="0.0210000000000008" classname="utils_rtables" name="to_string_matrix_works_correctly"/>
    <testcase time="0.0829999999999984" classname="utils_rtables" name="to_string_matrix_works_correctly"/>
    <testcase time="0.0210000000000008" classname="utils_rtables" name="to_string_matrix_works_correctly"/>
    <testcase time="0.0729999999999933" classname="utils_rtables" name="to_string_matrix_works_correctly"/>
    <testcase time="0.0210000000000008" classname="utils_rtables" name="to_string_matrix_works_correctly"/>
    <testcase time="0.0829999999999984" classname="utils_rtables" name="to_string_matrix_works_correctly"/>
    <testcase time="0.019999999999996" classname="utils_rtables" name="to_string_matrix_works_correctly"/>
    <testcase time="0.00500000000000966" classname="utils_rtables" name="unlist_and_blank_na_works_as_expected_if_not_all_missing"/>
    <testcase time="0.0189999999999912" classname="utils_rtables" name="unlist_and_blank_na_works_as_expected_if_not_all_missing"/>
    <testcase time="0.00500000000000966" classname="utils_rtables" name="unlist_and_blank_na_works_as_expected_if_all_missing"/>
    <testcase time="0.0189999999999912" classname="utils_rtables" name="unlist_and_blank_na_works_as_expected_if_all_missing"/>
    <testcase time="0.00400000000000489" classname="utils_rtables" name="cfun_by_flag_works_as_expected"/>
    <testcase time="0.00199999999999534" classname="utils_rtables" name="cfun_by_flag_works_as_expected"/>
    <testcase time="0.0200000000000102" classname="utils_rtables" name="cfun_by_flag_works_as_expected"/>
    <testcase time="0.00399999999999068" classname="utils_rtables" name="labels_or_names_works_correctly"/>
    <testcase time="0.0200000000000102" classname="utils_rtables" name="labels_or_names_works_correctly"/>
    <testcase time="0.000999999999990564" classname="utils_rtables" name="labels_or_names_works_correctly"/>
    <testcase time="0.019999999999996" classname="utils_rtables" name="labels_or_names_works_correctly"/>
    <testcase time="0.00100000000000477" classname="utils_rtables" name="labels_or_names_works_correctly"/>
    <testcase time="0.019999999999996" classname="utils_rtables" name="labels_or_names_works_correctly"/>
    <testcase time="0.00100000000000477" classname="utils_rtables" name="labels_or_names_works_correctly"/>
    <testcase time="0.0250000000000057" classname="utils_rtables" name="labels_or_names_works_correctly"/>
    <testcase time="0.00499999999999545" classname="utils_rtables" name="c_label_n_works_as_expected"/>
    <testcase time="0.019999999999996" classname="utils_rtables" name="c_label_n_works_as_expected"/>
    <testcase time="0.00500000000000966" classname="utils_rtables" name="c_label_n_alt_works_as_expected"/>
    <testcase time="0.0189999999999912" classname="utils_rtables" name="c_label_n_alt_works_as_expected"/>
    <testcase time="0.0379999999999967" classname="utils_rtables" name="add_rowcounts_works_with_one_row_split"/>
    <testcase time="0.0400000000000063" classname="utils_rtables" name="add_rowcounts_works_with_one_row_split"/>
    <testcase time="1.105" classname="utils_rtables" name="add_rowcounts_works_with_multiple_column_and_row_splits"/>
    <testcase time="0.317999999999998" classname="utils_rtables" name="add_rowcounts_works_with_multiple_column_and_row_splits"/>
    <testcase time="0.100999999999999" classname="utils_rtables" name="add_rowcounts_works_with_pruning"/>
    <testcase time="0.0690000000000026" classname="utils_rtables" name="add_rowcounts_works_with_pruning"/>
    <testcase time="0.070999999999998" classname="utils_rtables" name="add_rowcounts_works_with_pruning"/>
    <testcase time="0.0570000000000022" classname="utils_rtables" name="add_rowcounts_works_with_pruning"/>
    <testcase time="0.103999999999999" classname="utils_rtables" name="add_rowcounts_works_with_alt_counts_TRUE"/>
    <testcase time="0.0699999999999932" classname="utils_rtables" name="add_rowcounts_works_with_alt_counts_TRUE"/>
    <testcase time="0.0250000000000057" classname="utils_rtables" name="h_col_indices_works_as_expected"/>
    <testcase time="0.0250000000000057" classname="utils_rtables" name="h_col_indices_works_as_expected"/>
    <testcase time="0.0209999999999866" classname="utils_rtables" name="as.rtable.data.frame_works_correctly"/>
    <testcase time="0.0640000000000072" classname="utils_rtables" name="as.rtable.data.frame_works_correctly"/>
    <testcase time="0.00799999999999557" classname="utils_rtables" name="as.rtable.data.frame_fails_when_a_column_is_not_numeric"/>
    <testcase time="0.0210000000000008" classname="utils_rtables" name="as.rtable.data.frame_uses_variable_labels_for_column_headers_when_they_are_available"/>
    <testcase time="0.019999999999996" classname="utils_rtables" name="as.rtable.data.frame_uses_variable_labels_for_column_headers_when_they_are_available"/>
    <testcase time="0.00400000000000489" classname="utils_rtables" name="h_split_param_divides_param_values"/>
    <testcase time="0.019999999999996" classname="utils_rtables" name="h_split_param_divides_param_values"/>
    <testcase time="0.00100000000000477" classname="utils_rtables" name="h_split_param_divides_param_values"/>
    <testcase time="0.019999999999996" classname="utils_rtables" name="h_split_param_divides_param_values"/>
    <testcase time="0.00400000000000489" classname="utils_rtables" name="afun_selected_stats_works_for_NULL_input"/>
    <testcase time="0.019999999999996" classname="utils_rtables" name="afun_selected_stats_works_for_NULL_input"/>
    <testcase time="0.00400000000000489" classname="utils_rtables" name="afun_selected_stats_works_for_character_input"/>
    <testcase time="0.019999999999996" classname="utils_rtables" name="afun_selected_stats_works_for_character_input"/>
    <testcase time="0.0949999999999989" classname="utils_rtables" name="append_varlabels_works_as_expected"/>
    <testcase time="0.0679999999999978" classname="utils_rtables" name="append_varlabels_works_as_expected"/>
    <testcase time="0.0830000000000126" classname="utils_rtables" name="append_varlabels_correctly_concatenates_multiple_variable_labels"/>
    <testcase time="0.0729999999999933" classname="utils_rtables" name="append_varlabels_correctly_concatenates_multiple_variable_labels"/>
    <testcase time="0.125" classname="utils_rtables" name="default_na_str_works_properly"/>
    <testcase time="0.0379999999999967" classname="utils_rtables" name="default_na_str_works_properly"/>
    <testcase time="0.0370000000000061" classname="utils_rtables" name="default_na_str_works_properly"/>
  </testsuite>
  <testsuite name="utils_split_fun" timestamp="2024-10-17T14:47:21Z" hostname="226d6849429d" tests="19" skipped="0" failures="0" errors="0" time="1.26">
    <testcase time="0.0319999999999965" classname="utils_split_fun" name="ref_group_position_last_split_fun_gives_error_when_ref_group_is_undefined"/>
    <testcase time="0.0799999999999983" classname="utils_split_fun" name="analyze_vars_works_as_expected_with_ref_group_position_last_split_fun"/>
    <testcase time="0.00300000000000011" classname="utils_split_fun" name="analyze_vars_works_as_expected_with_ref_group_position_last_split_fun"/>
    <testcase time="0.0760000000000076" classname="utils_split_fun" name="analyze_vars_works_as_expected_with_ref_group_position_last_split_fun"/>
    <testcase time="0.0630000000000024" classname="utils_split_fun" name="analyze_vars_works_as_expected_with_ref_group_position_last_split_fun"/>
    <testcase time="0.0649999999999977" classname="utils_split_fun" name="compare_vars_works_as_expected_with_ref_group_first_split_fun"/>
    <testcase time="0.00300000000000011" classname="utils_split_fun" name="compare_vars_works_as_expected_with_ref_group_first_split_fun"/>
    <testcase time="0.0649999999999977" classname="utils_split_fun" name="compare_vars_works_as_expected_with_ref_group_first_split_fun"/>
    <testcase time="0.11999999999999" classname="utils_split_fun" name="summarize_ancova_works_as_expected_with_ref_group_position_split_fun"/>
    <testcase time="0.00300000000000011" classname="utils_split_fun" name="summarize_ancova_works_as_expected_with_ref_group_position_split_fun"/>
    <testcase time="0.0590000000000117" classname="utils_split_fun" name="summarize_ancova_works_as_expected_with_ref_group_position_split_fun"/>
    <testcase time="0.100999999999999" classname="utils_split_fun" name="binary_endpoint_layouts_work_as_expected_with_ref_group_position_last_split_fun"/>
    <testcase time="0.00300000000000011" classname="utils_split_fun" name="binary_endpoint_layouts_work_as_expected_with_ref_group_position_last_split_fun"/>
    <testcase time="0.0579999999999927" classname="utils_split_fun" name="binary_endpoint_layouts_work_as_expected_with_ref_group_position_last_split_fun"/>
    <testcase time="0.13000000000001" classname="utils_split_fun" name="time_to_event_layouts_works_as_expected_with_ref_group_position_last_split_fun"/>
    <testcase time="0.083999999999989" classname="utils_split_fun" name="time_to_event_layouts_works_as_expected_with_ref_group_position_last_split_fun"/>
    <testcase time="0.13300000000001" classname="utils_split_fun" name="summarize_ancova_works_as_expected_with_ref_group_position_last_split_fun"/>
    <testcase time="0.0519999999999925" classname="utils_split_fun" name="summarize_ancova_works_as_expected_with_ref_group_position_last_split_fun"/>
    <testcase time="0.129999999999995" classname="utils_split_fun" name="level_order_works_for_integerish_and_characters"/>
  </testsuite>
</testsuites>
