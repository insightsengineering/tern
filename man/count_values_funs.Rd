% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_values.R
\name{count_values_funs}
\alias{count_values_funs}
\alias{s_count_values}
\alias{s_count_values.character}
\alias{s_count_values.factor}
\alias{s_count_values.logical}
\alias{a_count_values}
\alias{count_values}
\title{Counting Specific Values}
\usage{
s_count_values(
  x,
  values,
  na.rm = TRUE,
  .N_col,
  .N_row,
  denom = c("n", "N_row", "N_col")
)

\method{s_count_values}{character}(x, values = "Y", na.rm = TRUE, ...)

\method{s_count_values}{factor}(x, values = "Y", ...)

\method{s_count_values}{logical}(x, values = TRUE, ...)

a_count_values(
  x,
  values,
  na.rm = TRUE,
  .N_col,
  .N_row,
  denom = c("n", "N_row", "N_col")
)

count_values(
  lyt,
  vars,
  values,
  ...,
  table_names = vars,
  .stats = "count_fraction",
  .formats = NULL,
  .labels = c(count_fraction = paste(values, collapse = ", ")),
  .indent_mods = NULL
)
}
\arguments{
\item{x}{(\code{numeric})\cr vector of numbers we want to analyze.}

\item{values}{(\code{character})\cr specific values that should be counted.}

\item{na.rm}{(\code{flag})\cr whether \code{NA} values should be removed from \code{x} prior to analysis.}

\item{.N_col}{(\code{count})\cr row-wise N (row group count) for the group of observations being analyzed
(i.e. with no column-based subsetting) that is passed by \code{rtables}.}

\item{.N_row}{(\code{count})\cr column-wise N (column count) for the full column that is passed by \code{rtables}.}

\item{denom}{(\code{string})\cr choice of denominator for proportion:\cr
can be \code{n} (number of values in this row and column intersection), \code{N_row} (total
number of values in this row across columns), or \code{N_col} (total number of values in
this column across rows).}

\item{...}{additional arguments for the lower level functions.}

\item{lyt}{(\code{layout})\cr input layout where analyses will be added to.}

\item{vars}{(\code{character})\cr variable names for the primary analysis variable to be iterated over.}

\item{table_names}{(\code{character})\cr this can be customized in case that the same \code{vars} are analyzed multiple times,
to avoid warnings from \code{rtables}.}

\item{.stats}{(\code{character})\cr statistics to select for the table.}

\item{.formats}{(named \code{character} or \code{list})\cr formats for the statistics.}

\item{.labels}{(named \code{character})\cr labels for the statistics (without indent).}

\item{.indent_mods}{(named \code{integer})\cr indent modifiers for the labels.}
}
\value{
See \code{\link[=s_summary.logical]{s_summary.logical()}} for the returned statistics, as this is used inside.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

We can count the occurrence of specific values in a variable of interest.
}
\section{Functions}{
\itemize{
\item \code{s_count_values()}: Statistics Function which is a generic function to count values.

\item \code{s_count_values(character)}: Method for \code{character} vectors \code{x}.

\item \code{s_count_values(factor)}: method for \code{factor} vectors \code{x}. This checks whether \code{values} are all
included in the levels of \code{x} and fails otherwise. It then proceeds by converting to \code{character}
and calling \code{s_count_values.character}.

\item \code{s_count_values(logical)}: method for \code{logical} vectors \code{x}.

\item \code{a_count_values()}: Formatted Analysis function which can be further customized by calling
\code{\link[rtables:make_afun]{rtables::make_afun()}} on it. It is used as \code{afun} in \code{\link[rtables:analyze]{rtables::analyze()}}.

\item \code{count_values()}: Analyze Function which adds the counting analysis to
the input layout. Note that additional formatting arguments can be used
here.

}}
\note{
Variable labels are shown when there is more than one element in \code{vars}, otherwise they
are hidden.
}
\examples{
# `s_count_values.character`
s_count_values(x = c("a", "b", "a"), values = "a")
s_count_values(x = c("a", "b", "a", NA, NA), values = "b", na.rm = FALSE)
# `s_count_values.factor`
s_count_values(x = factor(c("a", "b", "a")), values = "a")
# `s_count_values.logical`
s_count_values(x = c(TRUE, FALSE, TRUE))
# `a_count_values`
a_count_values(x = factor(c("a", "b", "a")), values = "a", .N_col = 10, .N_row = 10)
# `count_values`
basic_table() \%>\%
  count_values("Species", values = "setosa") \%>\%
  build_table(iris)
}
