% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coxph.R
\name{s_cox_univariate}
\alias{s_cox_univariate}
\title{Cox regression including a single covariate - summarized results}
\usage{
s_cox_univariate(
  formula,
  data,
  covariates,
  interactions = FALSE,
  conf_level = 0.95,
  pval_method = c("wald", "likelihood"),
  increments = NULL,
  ...
)
}
\arguments{
\item{formula}{(\code{formula}) \cr
Specifies \code{\link[survival:Surv]{survival model}}.
The arm variable needs to be wrapped in \code{\link{arm}}. The
\code{\link[survival]{strata}} special will only be used for the stratified analysis. If there is not
\code{\link[survival]{strata}} specification then the stratified analysis is omitted.}

\item{data}{A \code{data.frame} which includes the variable in formula and covariate}

\item{covariates}{a list of single right-hand-term formulas, if named, named will be used in the output}

\item{interactions}{The interaction term should be included, default is \code{FALSE}.}

\item{conf_level}{The level of confidence for the hazard ration interval estimations. Default is 0.95.}

\item{pval_method}{The method used for estimation of p.values, should be one of \code{"wald"} (default) or
\code{"likelihood"}.}

\item{increments}{If a quantitative variable is included, it is possible to provide the expected level of estimation
for the interaction. Should then be list, item are vector specifying levels, the item are named after the
covariate name as it appears in covariate formula.}

\item{...}{parameters passed down to \code{\link[survival:coxph]{coxph()}}
\itemize{
\item \code{ties} a character string specifying the method for tie handling, one of \code{exact} (default), \code{efron}, \code{breslow}.
}}
}
\value{
A list with items:
\describe{
\item{n}{the number of observations used for cox regression fit.}
\item{hr}{hazard ratios of the arm.}
\item{ci}{confidence interval of the estimated arm hazard ratio.}
\item{pval}{p.value of the arm depending on the covariate included in the model.}
\item{lrt}{p.value of the likelihood ratio test testing the interaction with the covariate.}
\item{covariates}{the names of the covariate as provided or derived from variable name.}
\item{tstr}{the strata term if included in the model.}
}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}

This is a deprecated function. Use \code{fit_coxreg_univar} function instead.

Fit cox (proportional hazard) regression models including the treatment and a single covariate.
Starting from a univariate model (e.g. survival model including an two-level arm predictor), a list of candidate
alternative models including an additional covariate (optionally including the interaction terms) is tested.
}
\details{
The estimation of the coefficient and confidence interval follows four methods depending on the
inclusion of the interaction terms and specified level of a quantitative variable and follows. Four case
are therefore discriminated: no interaction with the covariate (i), interaction with a qualitative variable (ii),
interaction with a quantitative variable without (iii) or with a specified level (iv) for the estimation.
}
\section{Warning}{

Note that \code{s_cox_univariate()} function is deprecated and will be removed in the coming releases.
Please use the function \code{fit_coxreg_univar()} instead.
}

\examples{
library(scda)
library(survival)

ADTTE <- synthetic_cdisc_data("latest")$adtte
ADTTE_f <- subset(ADTTE, PARAMCD == "OS") # _f: filtered
ADTTE_f <- within( # nolint
  data = subset(
    ADTTE_f,
    PARAMCD == "OS" &
      ARMCD \%in\% c("ARM A", "ARM B") &
      SEX \%in\% c("F", "M") &
      RACE \%in\% c("ASIAN", "BLACK OR AFRICAN AMERICAN", "WHITE")
  ),
  expr = { # nolint start
    set.seed(1)
    ARMCD <- droplevels(ARMCD)
    ARMCD <- relevel(ARMCD, "ARM B")
    SEX <- droplevels(SEX)
    RACE <- droplevels(RACE)
    X <- rnorm(n = length(ARM))
  } # nolint end
)
\dontrun{
s_cox_univariate(
  formula = Surv(time = AVAL, event = 1 - CNSR) ~ tern:::arm(ARMCD),
  data = ADTTE_f,
  covariates = list(~SEX)
)

s_cox_univariate(
  formula = Surv(time = AVAL, event = 1 - CNSR) ~ tern:::arm(ARMCD),
  data = ADTTE_f,
  covariates = list("Race" = ~RACE, ~AGE, "a rand. quant var with increments" = ~X),
  interactions = TRUE,
  increments = list(X = c(-1, 1)),
  conf_level = 0.95,
  pval_method = c("wald", "log-rank", "likelihood")[1]
)
}
}
