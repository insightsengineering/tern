% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g_mmrm.R
\name{g_mmrm_lsmeans}
\alias{g_mmrm_lsmeans}
\title{Plot LS means for MMRM}
\usage{
g_mmrm_lsmeans(
  object,
  select = c("estimates", "contrasts"),
  titles = c(estimates = paste("Adjusted mean of", object$labels$response,
    "by treatment at visits"), contrasts = paste0("Differences of ",
    object$labels$response, " adjusted means vs. control ('", object$ref_level, "')")),
  ylab = paste0("Estimates with ", round(object$conf_level * 100), "\% CIs"),
  width = 0.6,
  show_pval = TRUE
)
}
\arguments{
\item{object}{(\code{mmrm})\cr model result produced by \code{\link{fit_mmrm}}.}

\item{select}{(\code{character})\cr to select one or both of "estimates" and "contrasts" plots.
Note "contrasts" option is not applicable to model summaries excluding an arm variable.}

\item{titles}{(\code{character})\cr with elements \code{estimates} and \code{contrasts} containing the plot titles.}

\item{ylab}{(\code{string})\cr with the y axis label.}

\item{width}{(\code{numeric})\cr width of the error bars.}

\item{show_pval}{(\code{flag})\cr should the p-values for the differences of
LS means vs. control be displayed (not default)?}
}
\value{
a \code{ggplot2} plot
}
\description{
This function summarizes adjusted \code{lsmeans} and standard error, as well as conducts
comparisons between groups' adjusted \code{lsmeans}, where the first level of the group
is the reference level.
}
\details{
If variable labels are available in the original data set, then these are used. Otherwise
the variable names themselves are used for annotating the plot.

Contrast plot is not going to be returned if treatment is not
considered in the \code{mmrm} object considered in \code{object} argument,
no matter if \code{select} argument contains \code{contrasts} value.
}
\examples{
\dontrun{
library(dplyr)
library(scda)
library(rtables)

adsl <- synthetic_cdisc_data("latest")$adsl
adqs <- synthetic_cdisc_data("latest")$adqs
adqs_f <- adqs \%>\%
  filter(PARAMCD == "FKSI-FWB" & !AVISIT \%in\% c("BASELINE")) \%>\%
  droplevels() \%>\%
  mutate(ARM = factor(ARM, levels = c("B: Placebo", "A: Drug X", "C: Combination"))) \%>\%
  mutate(AVISITN = rank(AVISITN) \%>\% as.factor() \%>\% as.numeric() \%>\% as.factor())
var_labels(adqs_f) <- var_labels(adqs)

mmrm_results <- fit_mmrm(
  vars = list(
    response = "AVAL",
    covariates = c("STRATA1", "BMRKR2"),
    id = "USUBJID",
    arm = "ARM",
    visit = "AVISIT"
  ),
  data = adqs_f,
  cor_struct = "random-quadratic",
  weights_emmeans = "equal"
)
g_mmrm_lsmeans(mmrm_results)
g_mmrm_lsmeans(mmrm_results, select = "estimates")
g_mmrm_lsmeans(
  mmrm_results,
  select = "contrasts",
  titles = c(contrasts = "Contrasts of FKSI-FWB means"),
  show_pval = TRUE,
  width = 0.8
)

adqs_f2 <- adqs_f \%>\%
  filter(ARMCD == "ARM A")

mmrm_results_no_arm <- fit_mmrm(
  vars = list(
    response = "AVAL",
    covariates = c("STRATA1", "BMRKR2"),
    id = "USUBJID",
    visit = "AVISIT"
  ),
  data = adqs_f2,
  cor_struct = "random-quadratic",
  weights_emmeans = "equal"
)

g_mmrm_lsmeans(mmrm_results_no_arm, select = "estimates")
g_mmrm_lsmeans(
  mmrm_results_no_arm,
  select = c("estimates", "contrasts"),
  titles = c(
    estimates = "Adjusted mean of FKSI-FWB",
    contrasts = "it will not be created"
  ),
  show_pval = TRUE,
  width = 0.8
)

g_mmrm_lsmeans(
  mmrm_results_no_arm,
  select = c("estimates"),
  titles = c(estimates = "Adjusted mean of FKSI-FWB"),
  show_pval = TRUE,
  width = 0.8
)
}
}
