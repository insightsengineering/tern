% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abnormal.R
\name{abnormal}
\alias{abnormal}
\alias{s_count_abnormal}
\alias{a_count_abnormal}
\alias{count_abnormal}
\title{Patient Counts with Abnormal Range Values}
\usage{
s_count_abnormal(
  df,
  .var,
  abnormal = list(Low = "LOW", High = "HIGH"),
  variables = list(id = "USUBJID", baseline = "BNRIND"),
  exclude_base_abn = FALSE
)

a_count_abnormal(
  df,
  .var,
  abnormal = list(Low = "LOW", High = "HIGH"),
  variables = list(id = "USUBJID", baseline = "BNRIND"),
  exclude_base_abn = FALSE
)

count_abnormal(
  lyt,
  var,
  ...,
  table_names = var,
  .stats = NULL,
  .formats = NULL,
  .labels = NULL,
  .indent_mods = NULL
)
}
\arguments{
\item{df}{(\verb{data frame})\cr data set containing all analysis variables.}

\item{.var}{(\code{string})\cr single variable name that is passed by \code{rtables} when requested
by a statistics function.}

\item{abnormal}{(\verb{named list})\cr identifying the abnormal range level(s) in \code{var}. Default to
\code{list(Low = "LOW", High = "HIGH")} but you can also group different levels into the name list,
for example, \code{abnormal = list(Low = c("LOW", "LOW LOW"), High = c("HIGH", "HIGH HIGH"))}}

\item{variables}{(named \code{list} of \code{string})\cr list of additional analysis variables.}

\item{exclude_base_abn}{(\code{flag})\cr whether to exclude subjects with baseline abnormality
from numerator and denominator.}

\item{lyt}{(\code{layout})\cr input layout where analyses will be added to.}

\item{var}{(\code{string})\cr single variable name for the primary analysis variable.}

\item{...}{additional arguments for the lower level functions.}

\item{table_names}{(\code{character})\cr this can be customized in case that the same \code{vars} are analyzed multiple times,
to avoid warnings from \code{rtables}.}

\item{.stats}{(\code{character})\cr statistics to select for the table.}

\item{.formats}{(named \code{character} or \code{list})\cr formats for the statistics.}

\item{.labels}{(named \code{character})\cr labels for the statistics (without indent).}

\item{.indent_mods}{(named \code{integer})\cr indent modifiers for the labels.}
}
\value{
\code{\link[=s_count_abnormal]{s_count_abnormal()}} returns the statistic \code{fraction} which is a
vector with \code{num} and \code{denom} counts of patients.

\code{\link[=a_count_abnormal]{a_count_abnormal()}} returns the corresponding list with formatted \code{\link[rtables:CellValue]{rtables::CellValue()}}.

\code{\link[=count_abnormal]{count_abnormal()}} can be used with multiple abnormal levels and modifies the layout.
}
\description{
Primary analysis variable \code{.var} indicates the abnormal range result (character or factor)
and additional analysis variables are \code{id} (character or factor) and \code{baseline} (character or
factor). For each direction specified in \code{abnormal} (e.g. high or low) count patients in the
numerator and denominator as follows:
\describe{
\item{\code{num}}{the number of patients with this abnormality recorded while on treatment.}
\item{\code{denom}}{the number of patients with at least one post-baseline assessment.}
}
Note, the denominator includes patients that might have other abnormal levels at baseline,
and patients with missing baseline. Note, optionally patients with this abnormality at
baseline can be excluded from numerator and denominator.
}
\details{
Note that \code{df} should be filtered to include only post-baseline records.
}
\section{Functions}{
\itemize{
\item \code{s_count_abnormal}: Statistics function which counts patients with abnormal range values
for a single \code{abnormal} level.

\item \code{a_count_abnormal}: Formatted Analysis function which can be further customized by calling
\code{\link[rtables:make_afun]{rtables::make_afun()}} on it. It is used as \code{afun} in \code{\link[rtables:analyze]{rtables::analyze()}}.

\item \code{count_abnormal}: Layout creating function which can be used for creating tables, which can take
statistics function arguments and additional format arguments (see below). Note that it only
works with a single variable but multiple abnormal levels.
}}

\examples{
library(dplyr)

df <- data.frame(
  USUBJID = as.character(c(1, 1, 2, 2)),
  ANRIND = factor(c("NORMAL", "LOW", "HIGH", "HIGH")),
  BNRIND = factor(c("NORMAL", "NORMAL", "HIGH", "HIGH")),
  ONTRTFL = c("", "Y", "", "Y"),
  stringsAsFactors = FALSE
)

# Select only post-baseline records.
df <- df \%>\%
  filter(ONTRTFL == "Y")

# For abnormal level "HIGH" we get the following counts.
s_count_abnormal(df, .var = "ANRIND", abnormal = list(high = "HIGH", low = "LOW"))

# Optionally exclude patients with abnormality at baseline.
s_count_abnormal(
  df, .var = "ANRIND", abnormal = list(high = "HIGH", low = "LOW"), exclude_base_abn = TRUE
 )

# Use the Formatted Analysis function for `analyze()`.
a_fun <- make_afun(a_count_abnormal, .ungroup_stats = "fraction")
a_fun(df, .var = "ANRIND", abnormal = list(low = "LOW", high = "HIGH"))

# Layout creating function.
basic_table() \%>\%
  count_abnormal(var = "ANRIND", abnormal = list(high = "HIGH", low = "LOW")) \%>\%
  build_table(df)

# Passing of statistics function and formatting arguments.
df2 <- data.frame(
  ID = as.character(c(1, 1, 2, 2)),
  RANGE = factor(c("NORMAL", "LOW", "HIGH", "HIGH")),
  BL_RANGE = factor(c("NORMAL", "NORMAL", "HIGH", "HIGH")),
  ONTRTFL = c("", "Y", "", "Y"),
  stringsAsFactors = FALSE
)

# Select only post-baseline records.
df2 <- df2 \%>\%
  filter(ONTRTFL == "Y")

basic_table() \%>\%
  count_abnormal(
    var = "RANGE",
    abnormal = list(low = "LOW", high = "HIGH"),
    variables = list(id = "ID", baseline = "BL_RANGE")
  ) \%>\%
  build_table(df2)

}
