% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g_lineplot.R
\name{g_lineplot}
\alias{g_lineplot}
\title{Line plot with the optional table}
\usage{
g_lineplot(
  df,
  alt_counts_df = NULL,
  variables = c(x = "AVISIT", y = "AVAL", strata = "ARM", ylab = "PARAMCD", y_unit =
    "AVALU"),
  mid = "mean",
  interval = "mean_ci",
  whiskers = c("mean_ci_lwr", "mean_ci_upr"),
  table = NULL,
  sfun = tern::s_summary,
  ...,
  mid_type = "pl",
  mid_point_size = 2,
  position = position_dodge(width = 0.4),
  legend_title = NULL,
  legend_position = "bottom",
  ggtheme = NULL,
  title = "Plot of Mean and 95\% Confidence Limits by Visit",
  subtitle = NULL,
  caption = NULL,
  table_format = tern::summary_formats(),
  table_labels = tern::summary_labels(),
  table_font_size = 3,
  newpage = TRUE
)
}
\arguments{
\item{df}{(\verb{data frame} or \code{tibble}) \cr data set containing all analysis variables.}

\item{alt_counts_df}{(\verb{data frame} or \code{tibble} or \code{NULL}) \cr
data set that will be used (only) to counts objects in strata.}

\item{variables}{(named \code{character} vector) of variable names in \code{df} data set. Details are: \cr
\itemize{
\item \code{x}: x-axis variable.
\item \code{y}: y-axis variable.
\item \code{strata}: grouping variable, i.e. treatment arm. Can be \code{NULL}.
\item \code{ylab}: y-axis label variable. Can be \code{NULL}.
\item \code{y_unit}: variable with units of \code{y}, units will added to the y-axis label. Can be \code{NULL}.
}}

\item{mid}{(\code{character} or \code{NULL}) \cr
names of the statistics that will be plotted as midpoints.
All the statistics indicated in \code{mid} variable must be present in the object returned by \code{sfun},
and be of a \code{double} or \code{numeric} type vector of length one.}

\item{interval}{(\code{character} or \code{NULL}) \cr
names of the statistics that will be plotted as intervals.
All the statistics indicated in \code{interval} variable must be present in the object returned by \code{sfun},
and be of a \code{double} or \code{numeric} type vector of length two.}

\item{whiskers}{(\code{character}) \cr
names of the interval whiskers that will be plotted. Must match the \code{names} attribute of the
\code{interval} element in the list returned by \code{sfun}.
It is possible to specify one whisker only, lower or upper.}

\item{table}{(\code{character} or \code{NULL}) \cr
names of the statistics that will be displayed in the table below the plot.
All the statistics indicated in \code{table} variable must be present in the object returned by \code{sfun}.}

\item{sfun}{(\code{closure}) \cr the function to compute the values of required statistics.
It must return a named \code{list} with atomic vectors.
The names of the \code{list} elements refer to the names of the statistics
and are used by \code{mid}, \code{interval}, \code{table}.
It must be able to accept as input a vector with data for which statistics are computed.}

\item{...}{optional arguments to \code{sfun}.}

\item{mid_type}{(\code{character} scalar) \cr
controls the type of the \code{mid} plot, it can be point (\code{p}), line (\code{l}), or point and line (\code{pl}).}

\item{mid_point_size}{(\code{integer} or \code{double}) \cr
controls the font size of the point for \code{mid} plot.}

\item{position}{(\code{character} or \code{call})\cr
geom element position adjustment, either as a string, or the result of a call to a position adjustment function.}

\item{legend_title}{(\code{character} string) \cr legend title.}

\item{legend_position}{(\code{character}) \cr
the position of the plot legend (\code{none}, \code{left}, \code{right}, \code{bottom}, \code{top}, or two-element numeric vector).}

\item{ggtheme}{(\code{theme}) \cr
a graphical theme as provided by \code{ggplot2} to control outlook of the plot.}

\item{title}{(\code{character} scalar) \cr plot title.}

\item{subtitle}{(\code{character} scalar) \cr plot subtitle.}

\item{caption}{(\code{character} scalar) \cr optional caption below the plot.}

\item{table_format}{(named \code{character} or \code{NULL}) \cr
format patterns for descriptive statistics used in the (optional) table appended to the plot.
It is passed directly to the \code{\link[tern]{h_format_row}} function through the \code{format} parameter.
Names of \code{table_format} must match the names of statistics returned by \code{sfun} function.}

\item{table_labels}{(named \code{character} or \code{NULL}) \cr
labels for descriptive statistics used in the (optional) table appended to the plot.
Names of \code{table_labels} must match the names of statistics returned by \code{sfun} function.}

\item{table_font_size}{(\code{integer} or \code{double}) \cr
controls the font size of values in the table.}

\item{newpage}{(\code{logical} scalar) \cr should plot be drawn on new page?}
}
\value{
\code{ggplot} or \code{gtable} object,
depending on whether or not a table is appended to the plot.
}
\description{
Line plot with the optional table
}
\examples{

adlb <- scda::synthetic_cdisc_data("latest")$adlb
adlb <- dplyr::filter(adlb, ANL01FL == "Y", PARAMCD == "ALT", AVISIT != "SCREENING")

adsl <- scda::synthetic_cdisc_data("latest")$adsl

# Mean with CI
g_lineplot(adlb, adsl, subtitle = "Laboratory Test: ALT")

# Mean with CI, no stratification
g_lineplot(adlb, variables = c(x = "AVISIT", y = "AVAL", y_lab = "PARAMCD", y_unit = "AVALU"))

# Mean, upper whisker of CI, no strata counts N
g_lineplot(adlb, whiskers = "mean_ci_upr",
  title = "Plot of Mean and Upper 95\% Confidence Limit by Visit"
)

# Median with CI
g_lineplot(adlb, adsl, mid = "median", interval = "median_ci",
  whiskers = c("median_ci_lwr", "median_ci_upr"),
  title = "Plot of Median and 95\% Confidence Limits by Visit"
)

# Mean, +/- SD
g_lineplot(adlb, adsl, interval = "mean_sdi", whiskers = c("mean_sdi_lwr", "mean_sdi_upr"),
  title = "Plot of Median +/- SD by Visit")

# Mean with CI plot with stats table
g_lineplot(adlb, adsl, table = c("n", "mean", "mean_ci"))

# Mean with CI, table and customized confidence level
g_lineplot(
  adlb, adsl, table = c("n", "mean", "mean_ci"), control = list(conf_level = 0.80),
  title = "Plot of Mean and 80\% Confidence Limits by Visit"
)

# Mean with CI, table, filtered data
adlb_f <- dplyr::filter(adlb, ARMCD != "ARM A" | AVISIT == "BASELINE")
g_lineplot(adlb_f, table = c("n", "mean"))


}
\author{
Wojciech Wojciak wojciech.wojciak@contractors.roche.com
}
