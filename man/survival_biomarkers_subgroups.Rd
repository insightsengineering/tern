% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survival_biomarkers_subgroups.R
\name{survival_biomarkers_subgroups}
\alias{survival_biomarkers_subgroups}
\alias{extract_survival_biomarkers}
\alias{tabulate_survival_biomarkers}
\title{Tabulate Biomarker Effects on Survival by Subgroup}
\usage{
extract_survival_biomarkers(
  variables,
  data,
  groups_lists = list(),
  control = control_coxreg(),
  label_all = "All Patients"
)

tabulate_survival_biomarkers(
  df,
  vars = c("n_tot", "n_tot_events", "median", "hr", "ci", "pval"),
  time_unit = NULL
)
}
\arguments{
\item{variables}{(named \code{list} of \code{string})\cr list of additional analysis variables.}

\item{data}{(\code{data.frame})\cr the dataset containing the variables to summarize.}

\item{groups_lists}{(named \code{list} of \code{list})\cr optionally contains for each \code{subgroups} variable a
list, which specifies the new group levels via the names and the
levels that belong to it in the character vectors that are elements of the list.}

\item{control}{(\code{list})\cr a list of parameters as returned by the
helper function \code{\link[=control_coxreg]{control_coxreg()}}.}

\item{label_all}{(\code{string})\cr label for the total population analysis.}

\item{df}{(\code{data.frame})\cr containing all analysis variables, as returned by
\code{\link[=extract_survival_biomarkers]{extract_survival_biomarkers()}}.}

\item{vars}{(\code{character})\cr the name of statistics to be reported among
\code{n_tot_events} (total number of events per group),
\code{n_tot} (total number of observations per group),
\code{median} (median survival time),
\code{hr} (hazard ratio),
\code{ci} (confidence interval of hazard ratio) and
\code{pval} (p value of the effect).
Note, one of the statistics \code{n_tot} and \code{n_tot_events}, as well as both \code{hr} and \code{ci}
are required.}

\item{time_unit}{(\code{string})\cr label with unit of median survival time. Default \code{NULL} skips
displaying unit.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

Tabulate the estimated effects of multiple continuous biomarker variables
across population subgroups.
}
\details{
These functions create a layout starting from a data frame which contains
the required statistics. The tables are then typically used as input for forest plots.
}
\section{Functions}{
\itemize{
\item \code{extract_survival_biomarkers()}: prepares estimates for number of events, patients and median survival
times, as well as hazard ratio estimates, confidence intervals and p-values, for multiple biomarkers across
population subgroups in a single data frame.
\code{variables} corresponds to the names of variables found in \code{data}, passed as a named list and requires elements
\code{tte}, \code{is_event}, \code{biomarkers} (vector of continuous biomarker variables) and optionally \code{subgroups} and \code{strat}.
\code{groups_lists} optionally specifies groupings for \code{subgroups} variables.

\item \code{tabulate_survival_biomarkers()}: table creating function.

}}
\note{
In contrast to \code{\link[=tabulate_survival_subgroups]{tabulate_survival_subgroups()}} this tabulation function does
not start from an input layout \code{lyt}. This is because internally the table is
created by combining multiple subtables.
}
\examples{
# Testing dataset.
library(scda)
library(dplyr)
library(forcats)
library(rtables)

adtte <- synthetic_cdisc_data("latest")$adtte

# Save variable labels before data processing steps.
adtte_labels <- formatters::var_labels(adtte)

adtte_f <- adtte \%>\%
  filter(PARAMCD == "OS") \%>\%
  mutate(
    AVALU = as.character(AVALU),
    is_event = CNSR == 0
  )
labels <- c("AVALU" = adtte_labels[["AVALU"]], "is_event" = "Event Flag")
formatters::var_labels(adtte_f)[names(labels)] <- labels
# Typical analysis of two continuous biomarkers `BMRKR1` and `AGE`,
# in multiple regression models containing one covariate `RACE`,
# as well as one stratification variable `STRATA1`. The subgroups
# are defined by the levels of `BMRKR2`.
df <- extract_survival_biomarkers(
  variables = list(
    tte = "AVAL",
    is_event = "is_event",
    biomarkers = c("BMRKR1", "AGE"),
    strata = "STRATA1",
    covariates = "SEX",
    subgroups = "BMRKR2"
  ),
  data = adtte_f
)
df

# Here we group the levels of `BMRKR2` manually.
df_grouped <- extract_survival_biomarkers(
  variables = list(
    tte = "AVAL",
    is_event = "is_event",
    biomarkers = c("BMRKR1", "AGE"),
    strata = "STRATA1",
    covariates = "SEX",
    subgroups = "BMRKR2"
  ),
  data = adtte_f,
  groups_lists = list(
    BMRKR2 = list(
      "low" = "LOW",
      "low/medium" = c("LOW", "MEDIUM"),
      "low/medium/high" = c("LOW", "MEDIUM", "HIGH")
    )
  )
)
df_grouped

## Table with default columns.
# df <- <needs_to_be_inputted>
tabulate_survival_biomarkers(df)

## Table with a manually chosen set of columns: leave out "pval", reorder.
tab <- tabulate_survival_biomarkers(
  df = df,
  vars = c("n_tot_events", "ci", "n_tot", "median", "hr"),
  time_unit = as.character(adtte_f$AVALU[1])
)

## Finally produce the forest plot.
\dontrun{
g_forest(tab, xlim = c(0.8, 1.2))
}
}
\seealso{
\code{\link[=h_coxreg_mult_cont_df]{h_coxreg_mult_cont_df()}} which is used internally.

\code{\link[=h_tab_surv_one_biomarker]{h_tab_surv_one_biomarker()}} which is used internally.
}
