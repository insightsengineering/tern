% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deprec-tabulate_mmrm.R
\name{tabulate_mmrm}
\alias{tabulate_mmrm}
\alias{as.rtable.mmrm}
\alias{h_mmrm_fixed}
\alias{h_mmrm_cov}
\alias{h_mmrm_diagnostic}
\alias{tidy.mmrm}
\alias{s_mmrm_lsmeans}
\alias{s_mmrm_lsmeans_single}
\alias{summarize_lsmeans}
\title{Tabulation of MMRM Results}
\usage{
\method{as.rtable}{mmrm}(x, type = c("fixed", "cov", "diagnostic"), ...)

h_mmrm_fixed(x, format = "xx.xxxx")

h_mmrm_cov(x, format = "xx.xxxx")

h_mmrm_diagnostic(x, format = "xx.xxxx")

\method{tidy}{mmrm}(x)

s_mmrm_lsmeans(df, .in_ref_col, show_relative = c("reduction", "increase"))

s_mmrm_lsmeans_single(df)

summarize_lsmeans(
  lyt,
  arms = TRUE,
  ...,
  table_names = "lsmeans_summary",
  .stats = NULL,
  .formats = NULL,
  .indent_mods = NULL,
  .labels = NULL
)
}
\arguments{
\item{x}{(\code{mmrm})\cr the original MMRM fit object.}

\item{type}{(\code{string})\cr type of table which should be returned.}

\item{...}{additional argument \code{format} for controlling the numeric format.}

\item{format}{(\code{string})\cr format for the numbers in the table.}

\item{df}{(\verb{data frame})\cr data set containing all analysis variables.}

\item{.in_ref_col}{(\code{logical})\cr \code{TRUE} when working with the reference level, \code{FALSE} otherwise.}

\item{show_relative}{should the "reduction" (\code{control - treatment}, default) or the "increase"
(\code{treatment - control}) be shown for the relative change from baseline?}

\item{lyt}{(\code{layout})\cr input layout where analyses will be added to.}

\item{arms}{(\code{flag})\cr  should treatment variable be considered when using
\code{summarize_lsmeans} layout generating function.}

\item{table_names}{(\code{character})\cr this can be customized in case that the same \code{vars} are analyzed multiple times,
to avoid warnings from \code{rtables}.}

\item{.stats}{(\code{character})\cr statistics to select for the table.}

\item{.formats}{(named \code{character} or \code{list})\cr formats for the statistics.}

\item{.indent_mods}{(named \code{integer})\cr indent modifiers for the labels.}

\item{.labels}{(named \code{character})\cr labels for the statistics (without indent).}
}
\value{
\code{\link[=as.rtable.mmrm]{as.rtable.mmrm()}} returns the fixed effects, covariance estimate or
diagnostic statistics tables.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}

These functions can be used to produce tables from a fitted MMRM produced with
\code{\link[=fit_mmrm]{fit_mmrm()}}.
}
\section{Functions}{
\itemize{
\item \code{as.rtable.mmrm}: Deprecated by \code{tern.mmrm::tabulate_mmrm}: Produce simple MMRM tables via the generic \code{\link[=as.rtable]{as.rtable()}}.

\item \code{h_mmrm_fixed}: Deprecated by \code{tern.mmrm::tabulate_mmrm}: Helper function to produce fixed effects table.

\item \code{h_mmrm_cov}: Deprecated by \code{tern.mmrm::tabulate_mmrm}: Helper function to produce covariance matrix table.

\item \code{h_mmrm_diagnostic}: Deprecated by \code{tern.mmrm::tabulate_mmrm}: Helper function to produce diagnostic statistics table.

\item \code{tidy.mmrm}: Deprecated by \code{tern.mmrm::tabulate_mmrm}: Helper method (for \code{\link[broom:reexports]{broom::tidy()}}) to prepare a data frame from an
\code{mmrm} object containing the LS means and contrasts.

\item \code{s_mmrm_lsmeans}: Deprecated by \code{tern.mmrm::tabulate_mmrm}: Statistics function which is extracting estimates from a tidied LS means
data frame.

\item \code{s_mmrm_lsmeans_single}: Deprecated by \code{tern.mmrm::tabulate_mmrm}: Statistics function which is extracting estimates from a tidied LS means
data frame when \code{ARM} is not considered in the model.

\item \code{summarize_lsmeans}: Deprecated by \code{tern.mmrm::tabulate_mmrm}: Analyze function for tabulating LS means estimates from tidied \code{mmrm} results.
}}

\examples{
\dontrun{
library(dplyr)
library(lme4)

dat <- sleepstudy \%>\%
  mutate(
    group = factor(rep(c("A", "B"), length = nrow(sleepstudy))),
    days_grouped = cut(
      Days,
      breaks = stats::quantile(Days, probs = seq(0, 1, length = 5)),
      include.lowest = TRUE
    ),
    Subject = case_when(
      group == "A" ~ as.character(Subject),
      TRUE ~ as.character(as.numeric(as.character(Subject)) + 50)
    )
  ) \%>\%
  distinct_at(.vars = c("Subject", "days_grouped", "group"), .keep_all = TRUE)

result <- fit_mmrm(
  vars = list(
    response = "Reaction",
    covariates = c(),
    id = "Subject",
    arm = "group",
    visit = "days_grouped"
  ),
  data = dat,
  cor_struct = "compound-symmetry",
  parallel = TRUE
)
as.rtable(result, type = "cov", format = "xx.x")

result_no_arm <- fit_mmrm(
  vars = list(
    response = "Reaction",
    covariates = c(),
    id = "Subject",
    visit = "days_grouped"
  ),
  data = dat,
  cor_struct = "compound-symmetry",
  parallel = TRUE
)
as.rtable(result_no_arm, type = "cov", format = "xx.x")
}
\dontrun{
library(broom)
df <- tidy(result)
df_no_arm <- tidy(result_no_arm)
}
\dontrun{
s_mmrm_lsmeans(df[8, ], .in_ref_col = FALSE)
}
\dontrun{
s_mmrm_lsmeans_single(df_no_arm[4, ])
}
\dontrun{
dat_adsl <- dat \%>\%
  select(Subject, group) \%>\%
  unique()

basic_table() \%>\%
  split_cols_by("group", ref_group = result$ref_level) \%>\%
  add_colcounts() \%>\%
  split_rows_by("days_grouped") \%>\%
  summarize_lsmeans(show_relative = "increase") \%>\%
  build_table(
    df = broom::tidy(result),
    alt_counts_df = dat_adsl
  )

basic_table() \%>\%
  split_rows_by("days_grouped") \%>\%
  summarize_lsmeans(arms = FALSE) \%>\%
  build_table(
    df = broom::tidy(result_no_arm),
    alt_counts_df = dat_adsl
  )
}
}
