% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cox_regression.R
\name{cox_regression}
\alias{cox_regression}
\alias{s_coxreg}
\alias{summarize_coxreg}
\title{Cox Proportional Hazards Regression}
\usage{
s_coxreg(df, .stats, which_vars = "all", var_nms = NULL)

summarize_coxreg(
  lyt,
  conf_level,
  multivar = FALSE,
  vars = c("n", "hr", "ci", "pval")
)
}
\arguments{
\item{df}{(\code{data.frame})\cr data set containing all analysis variables.}

\item{.stats}{(\code{character})\cr the name of statistics to be reported among:
\itemize{
\item \code{n}: number of observations
\item \code{hr}: hazard ratio
\item \code{ci}: confidence interval
\item \code{pval}: p-value of the treatment effect
\item \code{pval_inter}: p-value of the interaction effect between the treatment and the covariate
}}

\item{which_vars}{(\code{character})\cr which rows should statistics be returned for from the given model.
Defaults to "all". Other options include "var_main" for main effects, "inter" for interaction effects,
and "multi_lvl" for multivariate model covariate level rows. When \code{which_vars} is "all" specific
variables can be selected by specifying \code{var_nms}.}

\item{var_nms}{(\code{character})\cr the \code{term} value of rows in \code{df} for which \code{.stats} should by returned. Typically
this is the name of a variable. If using variable labels, \code{var} should be a vector of both the desired
variable name and the variable label in that order to see all \code{.stats} related to that variable. When \code{which_vars}
is "var_main" \code{var_nms} should be only the variable name.}

\item{lyt}{(\code{layout})\cr input layout where analyses will be added to.}

\item{conf_level}{(\code{proportion})\cr confidence level of the interval.}

\item{multivar}{(\code{flag})\cr if \code{TRUE}, the multi-variable Cox regression will run
and no interaction will be considered between the studied treatment and c
candidate covariate. Default is \code{FALSE} for univariate Cox regression including
an arm variable. When no arm variable is included in the univariate Cox regression,
then also \code{TRUE} should be used to tabulate the covariate effect estimates instead
of the treatment arm effect estimate across models.}

\item{vars}{(\code{character})\cr variable names for the primary analysis variable to be iterated over.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

Fits a Cox regression model and estimate hazard ratio to describe the effect
size in a survival analysis.
}
\details{
Cox models are the most commonly used methods to estimate the magnitude of
the effect in survival analysis. It assumes proportional hazards: the ratio
of the hazards between groups (e.g., two arms) is constant over time.
This ratio is referred to as the "hazard ratio" (HR) and is one of the
most commonly reported metrics to describe the effect size in survival
analysis (NEST Team, 2020).
}
\section{Functions}{
\itemize{
\item \code{s_coxreg()}: transforms the tabulated results from \code{\link[=fit_coxreg_univar]{fit_coxreg_univar()}}
and \code{\link[=fit_coxreg_multivar]{fit_coxreg_multivar()}} into a list. Not much calculation is done here,
it rather prepares the data to be used by the layout creating function.

\item \code{summarize_coxreg()}: layout creating function.

}}
\note{
The usual formatting arguments for the \emph{layout creating} function
\code{summarize_coxreg} are not yet accepted (\code{.stats}, \code{.indent_mod}, \code{.formats},
\code{.labels}).
}
\examples{
library(survival)

# Testing dataset [survival::bladder].
set.seed(1, kind = "Mersenne-Twister")
dta_bladder <- with(
  data = bladder[bladder$enum < 5, ],
  data.frame(
    time = stop,
    status = event,
    armcd = as.factor(rx),
    covar1 = as.factor(enum),
    covar2 = factor(
      sample(as.factor(enum)),
      levels = 1:4, labels = c("F", "F", "M", "M")
    )
  )
)
labels <- c("armcd" = "ARM", "covar1" = "A Covariate Label", "covar2" = "Sex (F/M)")
formatters::var_labels(dta_bladder)[names(labels)] <- labels
dta_bladder$age <- sample(20:60, size = nrow(dta_bladder), replace = TRUE)

plot(
  survfit(Surv(time, status) ~ armcd + covar1, data = dta_bladder),
  lty = 2:4,
  xlab = "Months",
  col = c("blue1", "blue2", "blue3", "blue4", "red1", "red2", "red3", "red4")
)
# s_coxreg

univar_model <- fit_coxreg_univar(
  variables = list(
    time = "time", event = "status", arm = "armcd",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder
)
df1 <- broom::tidy(univar_model)
s_coxreg(df = df1, .stats = "hr")

# Univariate without treatment arm - only "covar2" covariate effects
univar_covs_model <- fit_coxreg_univar(
  variables = list(
    time = "time", event = "status",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder
)
df1_covs <- broom::tidy(univar_covs_model)
s_coxreg(df = df1_covs, .stats = "hr", var_nms = c("covar2", "Sex (F/M)"))

# Multivariate.
multivar_model <- fit_coxreg_multivar(
  variables = list(
    time = "time", event = "status", arm = "armcd",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder
)
df2 <- broom::tidy(multivar_model)
s_coxreg(df = df2, .stats = "hr")

# Multivariate without treatment arm - only "covar1" main effect
multivar_covs_model <- fit_coxreg_multivar(
  variables = list(
    time = "time", event = "status",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder
)
df2_covs <- broom::tidy(multivar_covs_model)
s_coxreg(df = df2_covs, .stats = "pval", which_vars = "var_main", var_nms = "covar1")

# summarize_coxreg
result_univar <- basic_table() \%>\%
  split_rows_by("effect") \%>\%
  split_rows_by("term", child_labels = "hidden") \%>\%
  summarize_coxreg(conf_level = 0.95) \%>\%
  build_table(df1)
result_univar

result_multivar <- basic_table() \%>\%
  split_rows_by("term", child_labels = "hidden") \%>\%
  summarize_coxreg(multivar = TRUE, conf_level = .95) \%>\%
  build_table(df2)
result_multivar

# When tabulating univariate models with only covariates, also `multivar = TRUE`
# is used.
result_univar_covs <- basic_table() \%>\%
  split_rows_by("term", child_labels = "hidden") \%>\%
  summarize_coxreg(multivar = TRUE, conf_level = 0.95) \%>\%
  build_table(df1_covs)
result_univar_covs

# No change for the multivariate tabulation when no treatment arm is included.
result_multivar_covs <- basic_table() \%>\%
  split_rows_by("term", child_labels = "hidden") \%>\%
  summarize_coxreg(multivar = TRUE, conf_level = .95) \%>\%
  build_table(df2_covs)
result_multivar_covs
}
\seealso{
\link{fit_coxreg} for relevant fitting functions, \link{h_cox_regression} for relevant
helper functions, and \link{tidy_coxreg} for custom tidy methods.
}
