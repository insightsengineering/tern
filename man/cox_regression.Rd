% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cox_regression.R
\name{cox_regression}
\alias{cox_regression}
\alias{h_coxreg_univar_formulas}
\alias{h_coxreg_multivar_formula}
\alias{fit_coxreg_univar}
\alias{h_coxreg_univar_extract}
\alias{tidy.coxreg.univar}
\alias{fit_coxreg_multivar}
\alias{h_coxreg_multivar_extract}
\alias{tidy.coxreg.multivar}
\alias{s_coxreg}
\alias{summarize_coxreg}
\title{Cox Proportional Hazards Regression}
\usage{
h_coxreg_univar_formulas(variables, interaction = FALSE)

h_coxreg_multivar_formula(variables)

fit_coxreg_univar(variables, data, at = list(), control = control_coxreg())

h_coxreg_univar_extract(effect, covar, data, mod, control = control_coxreg())

\method{tidy}{coxreg.univar}(x, ...)

fit_coxreg_multivar(variables, data, control = control_coxreg())

h_coxreg_multivar_extract(var, data, mod, control = control_coxreg())

\method{tidy}{coxreg.multivar}(x, ...)

s_coxreg(df, .var)

summarize_coxreg(
  lyt,
  conf_level,
  multivar = FALSE,
  vars = c("n", "hr", "ci", "pval")
)
}
\arguments{
\item{variables}{(\code{list})\cr a named list corresponds to the names of variables found
in \code{data}, passed as a named list and corresponding to \code{time}, \code{event}, \code{arm},
\code{strata}, and \code{covariates} terms. If \code{arm} is missing from \code{variables}, then
only Cox model(s) including the \code{covariates} will be fitted and the corresponding
effect estimates will be tabulated later.}

\item{interaction}{(\code{flag})\cr if \code{TRUE}, the model includes the
interaction between the studied treatment and candidate covariate. Note that
for univariate models without treatment arm, and multivariate models, no
interaction can be used so that this needs to be \code{FALSE}.}

\item{data}{(\verb{data frame})\cr the dataset containing the variables to fit the
models.}

\item{at}{(\code{list} of \code{numeric})\cr when the candidate covariate is a
\code{numeric}, use \code{at} to specify the value of the covariate at which the
effect should be estimated.}

\item{control}{(\code{list})\cr a list of parameters as returned by the
helper function \code{\link[=control_coxreg]{control_coxreg()}}.}

\item{effect}{(\code{string})\cr the treatment variable.}

\item{covar}{(\code{string})\cr the name of the covariate in the model.}

\item{mod}{(\code{coxph})\cr Cox regression model fitted by \code{\link[survival:coxph]{survival::coxph()}}.}

\item{x}{(\code{list})\cr Result of the Cox regression model fitted by \code{\link[=fit_coxreg_multivar]{fit_coxreg_multivar()}}.}

\item{...}{additional arguments for the lower level functions.}

\item{var}{(\code{string})\cr single variable name for the primary analysis variable.}

\item{df}{(\verb{data frame})\cr data set containing all analysis variables.}

\item{.var}{(\code{string})\cr single variable name that is passed by \code{rtables} when requested
by a statistics function.}

\item{lyt}{(\code{layout})\cr input layout where analyses will be added to.}

\item{conf_level}{(\code{proportion})\cr confidence level of the interval.}

\item{multivar}{(\code{flag})\cr if \code{TRUE}, the multi-variable Cox regression will run
and no interaction will be considered between the studied treatment and c
candidate covariate. Default is \code{FALSE} for univariate Cox regression including
an arm variable. When no arm variable is included in the univariate Cox regression,
then also \code{TRUE} should be used to tabulate the covariate effect estimates instead
of the treatment arm effect estimate across models.}

\item{vars}{(\code{character})\cr the name of statistics to be reported among
\code{n} (number of observation),
\code{hr} (Hazard Ratio),
\code{ci} (confidence interval),
\code{pval} (p.value of the treatment effect) and
\code{pval_inter} (the p.value of the interaction effect between the treatment
and the covariate).}
}
\value{
The function \code{h_coxreg_univar_formulas} returns a \code{character} vector coercible
into formulas (e.g \code{\link[stats:formula]{stats::as.formula()}}).

The function \code{h_coxreg_univar_formulas} returns a \code{character} vector coercible
into formulas (e.g \code{\link[stats:formula]{stats::as.formula()}}).

The function \code{fit_coxreg_univar} returns a \code{coxreg.univar} class object which is a named list
with 5 elements:
\itemize{
\item \code{mod}: Cox regression models fitted by \code{\link[survival:coxph]{survival::coxph()}}.
\item \code{data}: The original data frame input.
\item \code{control}: The original control input.
\item \code{vars}: The variables used in the model.
\item \code{at}: Value of the covariate at which the effect should be estimated.
}

The function \code{fit_coxreg_multivar} returns a \code{coxreg.multivar} class object which is a named list
with 4 elements:
\itemize{
\item \code{mod}: Cox regression model fitted by \code{\link[survival:coxph]{survival::coxph()}}.
\item \code{data}: The original data frame input.
\item \code{control}: The original control input.
\item \code{vars}: The variables used in the model.
}
}
\description{
Fits a Cox regression model and estimate hazard ratio to describe the effect
size in a survival analysis.
}
\details{
Cox models are the most commonly used methods to estimate the magnitude of
the effect in survival analysis. It assumes proportional hazards: the ratio
of the hazards between groups (e.g., two arms) is constant over time.
This ratio is referred to as the "hazard ratio" (HR) and is one of the
most commonly reported metrics to describe the effect size in survival
analysis (NEST Team, 2020).
}
\section{Functions}{
\itemize{
\item \code{h_coxreg_univar_formulas}: Helper for Cox Regression Formula

Creates a list of formulas. It is used internally by \code{\link[=fit_coxreg_univar]{fit_coxreg_univar()}}
for the comparison of univariate Cox regression models.

\item \code{h_coxreg_multivar_formula}: Helper for Multi-variable Cox Regression Formula

Creates a formulas string. It is used internally by \code{\link[=fit_coxreg_multivar]{fit_coxreg_multivar()}}
for the comparison of multi-variable Cox regression models. Interactions will not
be included in multi-variable Cox regression model.

\item \code{fit_coxreg_univar}: Fit a series of univariate Cox regression models
given the inputs.

\item \code{h_coxreg_univar_extract}: Utility function to help tabulate the result of
a univariate Cox regression model.

\item \code{tidy.coxreg.univar}: Custom tidy method for a Univariate Cox Regression

Tidy up the result of a Cox regression model fitted by \code{\link[=fit_coxreg_univar]{fit_coxreg_univar()}}.

\item \code{fit_coxreg_multivar}: Fit a multi-variable Cox regression model.

\item \code{h_coxreg_multivar_extract}: Tabulation of Multi-variable Cox Regressions

Utility function to help tabulate the result of a multi-variable Cox regression model
for a treatment/covariate variable.

\item \code{tidy.coxreg.multivar}: Custom tidy method for a Multi-variable Cox Regression

Tidy up the result of a Cox regression model fitted by \code{\link[=fit_coxreg_multivar]{fit_coxreg_multivar()}}.

\item \code{s_coxreg}: transforms the tabulated results from \code{\link[=fit_coxreg_univar]{fit_coxreg_univar()}}
and \code{\link[=fit_coxreg_multivar]{fit_coxreg_multivar()}} into a list. Not much calculation is done here,
it rather prepares the data to be used by the layout creating function.

\item \code{summarize_coxreg}: layout creating function.
}}

\note{
The usual formatting arguments for the \emph{layout creating} function
\code{summarize_coxreg} are not yet accepted (\code{.stats}, \code{.indent_mod}, \code{.formats},
\code{.labels}).

When using \code{fit_coxreg_univar} there should be two study arms.
}
\examples{

# Testing dataset [survival::bladder].

library(survival)
set.seed(1, kind = "Mersenne-Twister")
dta_bladder <- with(
  data = bladder[bladder$enum < 5, ],
  data.frame(
    time = stop,
    status = event,
    armcd = as.factor(rx),
    covar1 = as.factor(enum),
    covar2 = factor(
      sample(as.factor(enum)), levels = 1:4, labels = c("F", "F", "M", "M")
    )
  )
)
attr(dta_bladder$armcd, "label") <- "ARM"
attr(dta_bladder$covar1, "label") <- "A Covariate Label"
attr(dta_bladder$covar2, "label") <- "Sex (F/M)"
dta_bladder$age <- sample(20:60, size = nrow(dta_bladder), replace = TRUE)

plot(
  survfit(Surv(time, status) ~ armcd + covar1, data = dta_bladder),
  lty= 2:4, xlab="Months",
  col = c("blue1", "blue2", "blue3", "blue4", "red1", "red2", "red3", "red4")
)


# `h_coxreg_univar_formulas`

## Simple formulas.
h_coxreg_univar_formulas(
  variables = list(
    time = "time", event = "status", arm = "armcd", covariates = c("X", "y")
  )
)

## Addition of an optional strata.
h_coxreg_univar_formulas(
  variables = list(
    time = "time", event = "status", arm = "armcd", covariates = c("X", "y"),
    strata = "SITE"
  )
)

## Inclusion of the interaction term.
h_coxreg_univar_formulas(
  variables = list(
    time = "time", event = "status", arm = "armcd", covariates = c("X", "y"),
    strata = "SITE"
  ),
  interaction = TRUE
)

## Only covariates fitted in separate models.
h_coxreg_univar_formulas(
  variables = list(
    time = "time", event = "status", covariates = c("X", "y")
  )
)


# `h_coxreg_multivar_formula`

h_coxreg_multivar_formula(
  variables = list(
    time = "AVAL", event = "event", arm = "ARMCD", covariates = c("RACE", "AGE")
  )
)

# Addition of an optional strata.
h_coxreg_multivar_formula(
  variables = list(
    time = "AVAL", event = "event", arm = "ARMCD", covariates = c("RACE", "AGE"),
    strata = "SITE"
  )
)

# Example without treatment arm.
h_coxreg_multivar_formula(
  variables = list(
    time = "AVAL", event = "event", covariates = c("RACE", "AGE"),
    strata = "SITE"
  )
)


# fit_coxreg_univar

## Cox regression: arm + 1 covariate.
mod1 <- fit_coxreg_univar(
  variables = list(
    time = "time", event = "status", arm = "armcd",
    covariates = "covar1"
  ),
  data = dta_bladder,
  control = control_coxreg(conf_level = 0.91)
)

## Cox regression: arm + 1 covariate + interaction, 2 candidate covariates.
mod2 <- fit_coxreg_univar(
  variables = list(
    time = "time", event = "status", arm = "armcd",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder,
  control = control_coxreg(conf_level = 0.91, interaction = TRUE)
)

## Cox regression: arm + 1 covariate, stratified analysis.
mod3 <- fit_coxreg_univar(
  variables = list(
    time = "time", event = "status", arm = "armcd", strata = "covar2",
    covariates = c("covar1")
  ),
  data = dta_bladder,
  control = control_coxreg(conf_level = 0.91)
)

## Cox regression: no arm, only covariates.
mod4 <- fit_coxreg_univar(
  variables = list(
    time = "time", event = "status",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder
)

library(survival)

dta_simple <-  data.frame(
  time = c(5, 5, 10, 10, 5, 5, 10, 10),
  status = c(0, 0, 1, 0, 0, 1, 1, 1),
  armcd  = factor(LETTERS[c(1, 1, 1, 1, 2, 2, 2, 2)], levels = c("A", "B")),
  var1 = c(45, 55, 65, 75, 55, 65, 85, 75),
  var2 = c("F", "M", "F", "M", "F", "M", "F", "U")
)
mod <- coxph(Surv(time, status) ~ armcd + var1, data = dta_simple)
result <- h_coxreg_univar_extract(
  effect = "armcd", covar = "armcd", mod = mod, data = dta_simple
)
result

library(broom)
tidy(mod1)
tidy(mod2)


# fit_coxreg_multivar

## Cox regression: multivariate Cox regression.
multivar_model <- fit_coxreg_multivar(
  variables = list(
    time = "time", event = "status", arm = "armcd",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder
)

# Example without treatment arm.
multivar_covs_model <- fit_coxreg_multivar(
  variables = list(
    time = "time", event = "status",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder
)

library(survival)

mod <- coxph(Surv(time, status) ~ armcd + var1, data = dta_simple)
result <- h_coxreg_multivar_extract(
  var = "var1", mod = mod, data = dta_simple
)
result

library(broom)
broom::tidy(multivar_model)


# s_coxreg

univar_model <- fit_coxreg_univar(
  variables = list(
    time = "time", event = "status", arm = "armcd",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder
)
df1 <- broom::tidy(univar_model)
s_coxreg(df = df1, .var = "hr")

# Only covariates.
univar_covs_model <- fit_coxreg_univar(
  variables = list(
    time = "time", event = "status",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder
)
df1_covs <- broom::tidy(univar_covs_model)
s_coxreg(df = df1_covs, .var = "hr")

# Multivariate.
multivar_model <- fit_coxreg_multivar(
  variables = list(
    time = "time", event = "status", arm = "armcd",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder
)
df2 <- broom::tidy(multivar_model)
s_coxreg(df = df2, .var = "hr")

# Multivariate without treatment arm.
multivar_covs_model <- fit_coxreg_multivar(
  variables = list(
    time = "time", event = "status",
    covariates = c("covar1", "covar2")
  ),
  data = dta_bladder
)
df2_covs <- broom::tidy(multivar_covs_model)
s_coxreg(df = df2_covs, .var = "hr")


# summarize_coxreg
result_univar <- basic_table() \%>\%
  split_rows_by("effect") \%>\%
  split_rows_by("term", child_labels = "hidden") \%>\%
  summarize_coxreg(conf_level = 0.95) \%>\%
  build_table(df1)
result_univar

result_multivar <- basic_table() \%>\%
  split_rows_by("term", child_labels = "hidden") \%>\%
  summarize_coxreg(multivar = TRUE, conf_level = .95) \%>\%
  build_table(df2)
result_multivar

# When tabulating univariate models with only covariates, also `multivar = TRUE`
# is used.
result_univar_covs <- basic_table() \%>\%
  split_rows_by("term", child_labels = "hidden") \%>\%
  summarize_coxreg(multivar = TRUE, conf_level = 0.95) \%>\%
  build_table(df1_covs)
result_univar_covs

# No change for the multivariate tabulation when no treatment arm is included.
result_multivar_covs <- basic_table() \%>\%
  split_rows_by("term", child_labels = "hidden") \%>\%
  summarize_coxreg(multivar = TRUE, conf_level = .95) \%>\%
  build_table(df2_covs)
result_multivar_covs

}
