% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/response_biomarkers_subgroups.R
\name{response_biomarkers_subgroups}
\alias{response_biomarkers_subgroups}
\alias{tabulate_rsp_biomarkers}
\title{Tabulate Biomarker Effects on Binary Response by Subgroup}
\usage{
tabulate_rsp_biomarkers(
  df,
  vars = c("n_tot", "n_rsp", "prop", "or", "ci", "pval"),
  .indent_mods = 0L
)
}
\arguments{
\item{df}{(\code{data.frame})\cr containing all analysis variables, as returned by
\code{\link[=extract_rsp_biomarkers]{extract_rsp_biomarkers()}}.}

\item{vars}{(\code{character})\cr the names of statistics to be reported among:
\itemize{
\item \code{n_tot}: Total number of patients per group.
\item \code{n_rsp}: Total number of responses per group.
\item \code{prop}: Total response proportion per group.
\item \code{or}: Odds ratio.
\item \code{ci}: Confidence interval of odds ratio.
\item \code{pval}: p-value of the effect.
Note, the statistics \code{n_tot}, \code{or} and \code{ci} are required.
}}

\item{.indent_mods}{(named \code{integer})\cr indent modifiers for the labels. Defaults to 0, which corresponds to the
unmodified default behavior. Can be negative.}
}
\value{
An \code{rtables} table summarizing biomarker effects on binary response by subgroup.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

Tabulate the estimated effects of multiple continuous biomarker variables
on a binary response endpoint across population subgroups.
}
\details{
These functions create a layout starting from a data frame which contains
the required statistics. The tables are then typically used as input for forest plots.
}
\note{
In contrast to \code{\link[=tabulate_rsp_subgroups]{tabulate_rsp_subgroups()}} this tabulation function does
not start from an input layout \code{lyt}. This is because internally the table is
created by combining multiple subtables.
}
\examples{
library(dplyr)
library(forcats)

adrs <- tern_ex_adrs
adrs_labels <- formatters::var_labels(adrs)

adrs_f <- adrs \%>\%
  filter(PARAMCD == "BESRSPI") \%>\%
  mutate(rsp = AVALC == "CR")
formatters::var_labels(adrs_f) <- c(adrs_labels, "Response")

df <- extract_rsp_biomarkers(
  variables = list(
    rsp = "rsp",
    biomarkers = c("BMRKR1", "AGE"),
    covariates = "SEX",
    subgroups = "BMRKR2"
  ),
  data = adrs_f
)

\dontrun{
## Table with default columns.
tabulate_rsp_biomarkers(df)

## Table with a manually chosen set of columns: leave out "pval", reorder.
tab <- tabulate_rsp_biomarkers(
  df = df,
  vars = c("n_rsp", "ci", "n_tot", "prop", "or")
)

## Finally produce the forest plot.
g_forest(tab, xlim = c(0.7, 1.4))
}

}
\seealso{
\code{\link[=h_tab_rsp_one_biomarker]{h_tab_rsp_one_biomarker()}} which is used internally, \code{\link[=extract_rsp_biomarkers]{extract_rsp_biomarkers()}}.
}
