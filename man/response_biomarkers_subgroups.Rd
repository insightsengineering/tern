% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/response_biomarkers_subgroups.R
\name{response_biomarkers_subgroups}
\alias{response_biomarkers_subgroups}
\alias{extract_rsp_biomarkers}
\alias{tabulate_rsp_biomarkers}
\title{Tabulate Biomarker Effects on Binary Response by Subgroup}
\usage{
extract_rsp_biomarkers(
  variables,
  data,
  groups_lists = list(),
  control = control_logistic(),
  label_all = "All Patients"
)

tabulate_rsp_biomarkers(
  df,
  vars = c("n_tot", "n_rsp", "prop", "or", "ci", "pval")
)
}
\arguments{
\item{variables}{(named \code{list} of \code{string})\cr list of additional analysis variables.}

\item{data}{(\code{data.frame})\cr the dataset containing the variables to summarize.}

\item{groups_lists}{(named \code{list} of \code{list})\cr optionally contains for each \code{subgroups} variable a
list, which specifies the new group levels via the names and the
levels that belong to it in the character vectors that are elements of the list.}

\item{control}{(named \code{list})\cr controls for the response definition and the
confidence level produced by \code{\link[=control_logistic]{control_logistic()}}.}

\item{label_all}{(\code{string})\cr label for the total population analysis.}

\item{df}{(\code{data.frame})\cr containing all analysis variables, as returned by
\code{\link[=extract_rsp_biomarkers]{extract_rsp_biomarkers()}}.}

\item{vars}{(\code{character})\cr the name of statistics to be reported among
\code{n_tot} (total number of patients per group),
\code{n_rsp} (total number of responses per group),
\code{prop} (total response proportion per group),
\code{or} (odds ratio),
\code{ci} (confidence interval of odds ratio) and
\code{pval} (p value of the effect).
Note, the statistics \code{n_tot}, \code{or} and \code{ci} are required.}
}
\description{
Tabulate the estimated effects of multiple continuous biomarker variables
on a binary response endpoint across population subgroups.
}
\details{
These functions create a layout starting from a data frame which contains
the required statistics. The tables are then typically used as input for forest plots.
}
\section{Functions}{
\itemize{
\item \code{extract_rsp_biomarkers}: prepares estimates for number of responses, patients and
overall response rate, as well as odds ratio estimates, confidence intervals and p-values,
for multiple biomarkers across population subgroups in a single data frame.
\code{variables} corresponds to the names of variables found in \code{data}, passed as a
named list and requires elements \code{rsp} and \code{biomarkers} (vector of continuous
biomarker variables) and optionally \code{covariates}, \code{subgroups} and \code{strat}.
\code{groups_lists} optionally specifies groupings for \code{subgroups} variables.

\item \code{tabulate_rsp_biomarkers}: table creating function.
}}

\note{
You can also specify a continuous variable in \code{rsp} and then use the
\code{response_definition} control to convert that internally to a logical
variable reflecting binary response.

In contrast to \code{\link[=tabulate_rsp_subgroups]{tabulate_rsp_subgroups()}} this tabulation function does
not start from an input layout \code{lyt}. This is because internally the table is
created by combining multiple subtables.
}
\examples{
# Testing dataset.
library(scda)
library(dplyr)
library(forcats)
library(rtables)

adrs <- synthetic_cdisc_data("latest")$adrs
adrs_labels <- var_labels(adrs)

adrs_f <- adrs \%>\%
  filter(PARAMCD == "BESRSPI") \%>\%
  mutate(rsp = AVALC == "CR")
var_labels(adrs_f) <- c(adrs_labels, "Response")
# Typical analysis of two continuous biomarkers `BMRKR1` and `AGE`,
# in logistic regression models with one covariate `RACE`. The subgroups
# are defined by the levels of `BMRKR2`.
df <- extract_rsp_biomarkers(
  variables = list(
    rsp = "rsp",
    biomarkers = c("BMRKR1", "AGE"),
    covariates = "SEX",
    subgroups = "BMRKR2"
  ),
  data = adrs_f
)
df

# Here we group the levels of `BMRKR2` manually, and we add a stratification
# variable `STRATA1`. We also here use a continuous variable `EOSDY`
# which is then binarized internally (response is defined as this variable
# being larger than 500).
df_grouped <- extract_rsp_biomarkers(
  variables = list(
    rsp = "EOSDY",
    biomarkers = c("BMRKR1", "AGE"),
    covariates = "SEX",
    subgroups = "BMRKR2",
    strat = "STRATA1"
  ),
  data = adrs_f,
  groups_lists = list(
    BMRKR2 = list(
      "low" = "LOW",
      "low/medium" = c("LOW", "MEDIUM"),
      "low/medium/high" = c("LOW", "MEDIUM", "HIGH")
    )
  ),
  control = control_logistic(
    response_definition = "I(response > 500)"
  )
)
df_grouped

## Table with default columns.
tabulate_rsp_biomarkers(df)

## Table with a manually chosen set of columns: leave out "pval", reorder.
tab <- tabulate_rsp_biomarkers(
  df = df,
  vars = c("n_rsp", "ci", "n_tot", "prop", "or")
)

## Finally produce the forest plot.
\dontrun{
g_forest(tab, xlim = c(0.7, 1.4))
}
}
\seealso{
\code{\link[=h_logistic_mult_cont_df]{h_logistic_mult_cont_df()}} which is used internally.

\code{\link[=h_tab_rsp_one_biomarker]{h_tab_rsp_one_biomarker()}} which is used internally.
}
